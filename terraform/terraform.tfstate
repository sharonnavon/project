{
    "version": 3,
    "terraform_version": "0.11.11",
    "serial": 17,
    "lineage": "d2e60b36-d1c9-0ca8-beea-59cd75ca4776",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {},
            "resources": {
                "aws_iam_instance_profile.consul_auto_join": {
                    "type": "aws_iam_instance_profile",
                    "depends_on": [
                        "aws_iam_role.consul_auto_join"
                    ],
                    "primary": {
                        "id": "consul_auto_join",
                        "attributes": {
                            "arn": "arn:aws:iam::230617609085:instance-profile/consul_auto_join",
                            "create_date": "2019-01-31T13:14:06Z",
                            "id": "consul_auto_join",
                            "name": "consul_auto_join",
                            "path": "/",
                            "role": "consul_auto_join",
                            "roles.#": "1",
                            "roles.4186901782": "consul_auto_join",
                            "unique_id": "AIPAIMGV3FSBWJHGPVNGG"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_policy.consul_auto_join": {
                    "type": "aws_iam_policy",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:iam::230617609085:policy/consul_auto_join",
                        "attributes": {
                            "arn": "arn:aws:iam::230617609085:policy/consul_auto_join",
                            "description": "Allows Consul nodes to describe instances for joining",
                            "id": "arn:aws:iam::230617609085:policy/consul_auto_join",
                            "name": "consul_auto_join",
                            "path": "/",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:DescribeInstances\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_policy_attachment.consul_auto_join": {
                    "type": "aws_iam_policy_attachment",
                    "depends_on": [
                        "aws_iam_policy.consul_auto_join",
                        "aws_iam_role.consul_auto_join"
                    ],
                    "primary": {
                        "id": "consul_auto_join",
                        "attributes": {
                            "groups.#": "0",
                            "id": "consul_auto_join",
                            "name": "consul_auto_join",
                            "policy_arn": "arn:aws:iam::230617609085:policy/consul_auto_join",
                            "roles.#": "1",
                            "roles.4186901782": "consul_auto_join",
                            "users.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role.consul_auto_join": {
                    "type": "aws_iam_role",
                    "depends_on": [],
                    "primary": {
                        "id": "consul_auto_join",
                        "attributes": {
                            "arn": "arn:aws:iam::230617609085:role/consul_auto_join",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2019-01-31T13:13:35Z",
                            "description": "",
                            "force_detach_policies": "false",
                            "id": "consul_auto_join",
                            "max_session_duration": "3600",
                            "name": "consul_auto_join",
                            "path": "/",
                            "tags.%": "0",
                            "unique_id": "AROAJRDRF5VUVJWHEOP22"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.docker_server": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.consul_auto_join",
                        "aws_security_group.sg_consul",
                        "aws_security_group.sg_default",
                        "aws_subnet.public_subnet1",
                        "data.template_cloudinit_config.docker_server_config.*"
                    ],
                    "primary": {
                        "id": "i-0840a7d4385453c18",
                        "attributes": {
                            "ami": "ami-0f9cf087c1f27d9b1",
                            "arn": "arn:aws:ec2:us-east-1:230617609085:instance/i-0840a7d4385453c18",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-east-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "1",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "consul_auto_join",
                            "id": "i-0840a7d4385453c18",
                            "instance_state": "running",
                            "instance_type": "t2.micro",
                            "ipv6_addresses.#": "0",
                            "key_name": "aws_ec2",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-00ed3ba73c32e6f6b",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-00ed3ba73c32e6f6b",
                            "private_dns": "ip-10-0-1-239.ec2.internal",
                            "private_ip": "10.0.1.239",
                            "public_dns": "ec2-3-93-10-206.compute-1.amazonaws.com",
                            "public_ip": "3.93.10.206",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-0610e450259e4e72a",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-066cf7d346f5e84af",
                            "tags.%": "1",
                            "tags.Name": "docker-server1",
                            "tenancy": "default",
                            "user_data": "31cc46de97f82a08c70a71acef009676910224d5",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "2",
                            "vpc_security_group_ids.2261640441": "sg-0ba3c5affc019bb82",
                            "vpc_security_group_ids.3973135621": "sg-0de798dda9e34e688"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.elk": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.consul_auto_join",
                        "aws_security_group.sg_consul",
                        "aws_security_group.sg_default",
                        "aws_subnet.public_subnet1",
                        "data.template_cloudinit_config.elk_config"
                    ],
                    "primary": {
                        "id": "i-04e86a49dfc8f7a56",
                        "attributes": {
                            "ami": "ami-0f9cf087c1f27d9b1",
                            "arn": "arn:aws:ec2:us-east-1:230617609085:instance/i-04e86a49dfc8f7a56",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-east-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "2",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "unlimited",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "consul_auto_join",
                            "id": "i-04e86a49dfc8f7a56",
                            "instance_state": "running",
                            "instance_type": "t3.medium",
                            "ipv6_addresses.#": "0",
                            "key_name": "aws_ec2",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-0b12056c3b54b790c",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-0b12056c3b54b790c",
                            "private_dns": "ip-10-0-1-125.ec2.internal",
                            "private_ip": "10.0.1.125",
                            "public_dns": "ec2-3-92-0-2.compute-1.amazonaws.com",
                            "public_ip": "3.92.0.2",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-0a514a8d08f16ab78",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-066cf7d346f5e84af",
                            "tags.%": "1",
                            "tags.Name": "elk",
                            "tenancy": "default",
                            "user_data": "468b56980708b87ad29956bc8ceaec80d2f7f281",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "2",
                            "vpc_security_group_ids.2261640441": "sg-0ba3c5affc019bb82",
                            "vpc_security_group_ids.3973135621": "sg-0de798dda9e34e688"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_internet_gateway.igw": {
                    "type": "aws_internet_gateway",
                    "depends_on": [
                        "aws_vpc.MyVPC"
                    ],
                    "primary": {
                        "id": "igw-0ba49807fe4adec47",
                        "attributes": {
                            "id": "igw-0ba49807fe4adec47",
                            "owner_id": "230617609085",
                            "tags.%": "0",
                            "vpc_id": "vpc-012f51a80e5735ccf"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_route_table.rtb_public": {
                    "type": "aws_route_table",
                    "depends_on": [
                        "aws_internet_gateway.igw",
                        "aws_vpc.MyVPC"
                    ],
                    "primary": {
                        "id": "rtb-0dec6a895999533ca",
                        "attributes": {
                            "id": "rtb-0dec6a895999533ca",
                            "owner_id": "230617609085",
                            "propagating_vgws.#": "0",
                            "route.#": "1",
                            "route.3198052502.cidr_block": "0.0.0.0/0",
                            "route.3198052502.egress_only_gateway_id": "",
                            "route.3198052502.gateway_id": "igw-0ba49807fe4adec47",
                            "route.3198052502.instance_id": "",
                            "route.3198052502.ipv6_cidr_block": "",
                            "route.3198052502.nat_gateway_id": "",
                            "route.3198052502.network_interface_id": "",
                            "route.3198052502.transit_gateway_id": "",
                            "route.3198052502.vpc_peering_connection_id": "",
                            "tags.%": "1",
                            "tags.Name": "rtb_public",
                            "vpc_id": "vpc-012f51a80e5735ccf"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_route_table_association.rta-public_subnet1": {
                    "type": "aws_route_table_association",
                    "depends_on": [
                        "aws_route_table.rtb_public",
                        "aws_subnet.public_subnet1"
                    ],
                    "primary": {
                        "id": "rtbassoc-04bad12c0eb48fcdd",
                        "attributes": {
                            "id": "rtbassoc-04bad12c0eb48fcdd",
                            "route_table_id": "rtb-0dec6a895999533ca",
                            "subnet_id": "subnet-066cf7d346f5e84af"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group.sg_consul": {
                    "type": "aws_security_group",
                    "depends_on": [
                        "aws_vpc.MyVPC"
                    ],
                    "primary": {
                        "id": "sg-0ba3c5affc019bb82",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:230617609085:security-group/sg-0ba3c5affc019bb82",
                            "description": "Allow ssh \u0026 consul inbound traffic",
                            "egress.#": "1",
                            "egress.2049434831.cidr_blocks.#": "1",
                            "egress.2049434831.cidr_blocks.0": "0.0.0.0/0",
                            "egress.2049434831.description": "Allow all outside security group",
                            "egress.2049434831.from_port": "0",
                            "egress.2049434831.ipv6_cidr_blocks.#": "0",
                            "egress.2049434831.prefix_list_ids.#": "0",
                            "egress.2049434831.protocol": "-1",
                            "egress.2049434831.security_groups.#": "0",
                            "egress.2049434831.self": "false",
                            "egress.2049434831.to_port": "0",
                            "id": "sg-0ba3c5affc019bb82",
                            "ingress.#": "3",
                            "ingress.3406622939.cidr_blocks.#": "1",
                            "ingress.3406622939.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.3406622939.description": "Allow consul UI access from the world",
                            "ingress.3406622939.from_port": "8500",
                            "ingress.3406622939.ipv6_cidr_blocks.#": "0",
                            "ingress.3406622939.prefix_list_ids.#": "0",
                            "ingress.3406622939.protocol": "tcp",
                            "ingress.3406622939.security_groups.#": "0",
                            "ingress.3406622939.self": "false",
                            "ingress.3406622939.to_port": "8500",
                            "ingress.4044943731.cidr_blocks.#": "1",
                            "ingress.4044943731.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.4044943731.description": "Allow ssh from the world",
                            "ingress.4044943731.from_port": "22",
                            "ingress.4044943731.ipv6_cidr_blocks.#": "0",
                            "ingress.4044943731.prefix_list_ids.#": "0",
                            "ingress.4044943731.protocol": "tcp",
                            "ingress.4044943731.security_groups.#": "0",
                            "ingress.4044943731.self": "false",
                            "ingress.4044943731.to_port": "22",
                            "ingress.994307033.cidr_blocks.#": "0",
                            "ingress.994307033.description": "Allow all inside security group",
                            "ingress.994307033.from_port": "0",
                            "ingress.994307033.ipv6_cidr_blocks.#": "0",
                            "ingress.994307033.prefix_list_ids.#": "0",
                            "ingress.994307033.protocol": "-1",
                            "ingress.994307033.security_groups.#": "0",
                            "ingress.994307033.self": "true",
                            "ingress.994307033.to_port": "0",
                            "name": "sg_consul",
                            "owner_id": "230617609085",
                            "revoke_rules_on_delete": "false",
                            "tags.%": "0",
                            "vpc_id": "vpc-012f51a80e5735ccf"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group.sg_default": {
                    "type": "aws_security_group",
                    "depends_on": [
                        "aws_vpc.MyVPC"
                    ],
                    "primary": {
                        "id": "sg-0de798dda9e34e688",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:230617609085:security-group/sg-0de798dda9e34e688",
                            "description": "Managed by Terraform",
                            "egress.#": "1",
                            "egress.482069346.cidr_blocks.#": "1",
                            "egress.482069346.cidr_blocks.0": "0.0.0.0/0",
                            "egress.482069346.description": "",
                            "egress.482069346.from_port": "0",
                            "egress.482069346.ipv6_cidr_blocks.#": "0",
                            "egress.482069346.prefix_list_ids.#": "0",
                            "egress.482069346.protocol": "-1",
                            "egress.482069346.security_groups.#": "0",
                            "egress.482069346.self": "false",
                            "egress.482069346.to_port": "0",
                            "id": "sg-0de798dda9e34e688",
                            "ingress.#": "11",
                            "ingress.1746620816.cidr_blocks.#": "1",
                            "ingress.1746620816.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.1746620816.description": "",
                            "ingress.1746620816.from_port": "9100",
                            "ingress.1746620816.ipv6_cidr_blocks.#": "0",
                            "ingress.1746620816.prefix_list_ids.#": "0",
                            "ingress.1746620816.protocol": "tcp",
                            "ingress.1746620816.security_groups.#": "0",
                            "ingress.1746620816.self": "false",
                            "ingress.1746620816.to_port": "9100",
                            "ingress.1994621032.cidr_blocks.#": "1",
                            "ingress.1994621032.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.1994621032.description": "",
                            "ingress.1994621032.from_port": "3000",
                            "ingress.1994621032.ipv6_cidr_blocks.#": "0",
                            "ingress.1994621032.prefix_list_ids.#": "0",
                            "ingress.1994621032.protocol": "tcp",
                            "ingress.1994621032.security_groups.#": "0",
                            "ingress.1994621032.self": "false",
                            "ingress.1994621032.to_port": "3000",
                            "ingress.2214680975.cidr_blocks.#": "1",
                            "ingress.2214680975.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2214680975.description": "",
                            "ingress.2214680975.from_port": "80",
                            "ingress.2214680975.ipv6_cidr_blocks.#": "0",
                            "ingress.2214680975.prefix_list_ids.#": "0",
                            "ingress.2214680975.protocol": "tcp",
                            "ingress.2214680975.security_groups.#": "0",
                            "ingress.2214680975.self": "false",
                            "ingress.2214680975.to_port": "80",
                            "ingress.2319052179.cidr_blocks.#": "1",
                            "ingress.2319052179.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2319052179.description": "",
                            "ingress.2319052179.from_port": "9000",
                            "ingress.2319052179.ipv6_cidr_blocks.#": "0",
                            "ingress.2319052179.prefix_list_ids.#": "0",
                            "ingress.2319052179.protocol": "tcp",
                            "ingress.2319052179.security_groups.#": "0",
                            "ingress.2319052179.self": "false",
                            "ingress.2319052179.to_port": "9000",
                            "ingress.2500694996.cidr_blocks.#": "1",
                            "ingress.2500694996.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2500694996.description": "",
                            "ingress.2500694996.from_port": "9200",
                            "ingress.2500694996.ipv6_cidr_blocks.#": "0",
                            "ingress.2500694996.prefix_list_ids.#": "0",
                            "ingress.2500694996.protocol": "tcp",
                            "ingress.2500694996.security_groups.#": "0",
                            "ingress.2500694996.self": "false",
                            "ingress.2500694996.to_port": "9200",
                            "ingress.2541437006.cidr_blocks.#": "1",
                            "ingress.2541437006.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2541437006.description": "",
                            "ingress.2541437006.from_port": "22",
                            "ingress.2541437006.ipv6_cidr_blocks.#": "0",
                            "ingress.2541437006.prefix_list_ids.#": "0",
                            "ingress.2541437006.protocol": "tcp",
                            "ingress.2541437006.security_groups.#": "0",
                            "ingress.2541437006.self": "false",
                            "ingress.2541437006.to_port": "22",
                            "ingress.2937129820.cidr_blocks.#": "1",
                            "ingress.2937129820.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2937129820.description": "",
                            "ingress.2937129820.from_port": "5044",
                            "ingress.2937129820.ipv6_cidr_blocks.#": "0",
                            "ingress.2937129820.prefix_list_ids.#": "0",
                            "ingress.2937129820.protocol": "tcp",
                            "ingress.2937129820.security_groups.#": "0",
                            "ingress.2937129820.self": "false",
                            "ingress.2937129820.to_port": "5044",
                            "ingress.3431095222.cidr_blocks.#": "1",
                            "ingress.3431095222.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.3431095222.description": "",
                            "ingress.3431095222.from_port": "5601",
                            "ingress.3431095222.ipv6_cidr_blocks.#": "0",
                            "ingress.3431095222.prefix_list_ids.#": "0",
                            "ingress.3431095222.protocol": "tcp",
                            "ingress.3431095222.security_groups.#": "0",
                            "ingress.3431095222.self": "false",
                            "ingress.3431095222.to_port": "5601",
                            "ingress.476094592.cidr_blocks.#": "1",
                            "ingress.476094592.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.476094592.description": "",
                            "ingress.476094592.from_port": "65433",
                            "ingress.476094592.ipv6_cidr_blocks.#": "0",
                            "ingress.476094592.prefix_list_ids.#": "0",
                            "ingress.476094592.protocol": "tcp",
                            "ingress.476094592.security_groups.#": "0",
                            "ingress.476094592.self": "false",
                            "ingress.476094592.to_port": "65433",
                            "ingress.501830036.cidr_blocks.#": "1",
                            "ingress.501830036.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.501830036.description": "",
                            "ingress.501830036.from_port": "9090",
                            "ingress.501830036.ipv6_cidr_blocks.#": "0",
                            "ingress.501830036.prefix_list_ids.#": "0",
                            "ingress.501830036.protocol": "tcp",
                            "ingress.501830036.security_groups.#": "0",
                            "ingress.501830036.self": "false",
                            "ingress.501830036.to_port": "9090",
                            "ingress.516175195.cidr_blocks.#": "1",
                            "ingress.516175195.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.516175195.description": "",
                            "ingress.516175195.from_port": "8080",
                            "ingress.516175195.ipv6_cidr_blocks.#": "0",
                            "ingress.516175195.prefix_list_ids.#": "0",
                            "ingress.516175195.protocol": "tcp",
                            "ingress.516175195.security_groups.#": "0",
                            "ingress.516175195.self": "false",
                            "ingress.516175195.to_port": "8080",
                            "name": "sg_default",
                            "owner_id": "230617609085",
                            "revoke_rules_on_delete": "false",
                            "tags.%": "0",
                            "vpc_id": "vpc-012f51a80e5735ccf"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_subnet.public_subnet1": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.MyVPC",
                        "data.aws_availability_zones.available"
                    ],
                    "primary": {
                        "id": "subnet-066cf7d346f5e84af",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:230617609085:subnet/subnet-066cf7d346f5e84af",
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-east-1a",
                            "availability_zone_id": "use1-az2",
                            "cidr_block": "10.0.1.0/24",
                            "id": "subnet-066cf7d346f5e84af",
                            "ipv6_cidr_block": "",
                            "ipv6_cidr_block_association_id": "",
                            "map_public_ip_on_launch": "true",
                            "owner_id": "230617609085",
                            "tags.%": "1",
                            "tags.Name": "public_subnet1",
                            "vpc_id": "vpc-012f51a80e5735ccf"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_vpc.MyVPC": {
                    "type": "aws_vpc",
                    "depends_on": [],
                    "primary": {
                        "id": "vpc-012f51a80e5735ccf",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:230617609085:vpc/vpc-012f51a80e5735ccf",
                            "assign_generated_ipv6_cidr_block": "false",
                            "cidr_block": "10.0.0.0/16",
                            "default_network_acl_id": "acl-098b720f3f0818423",
                            "default_route_table_id": "rtb-00df0ce2de499d01b",
                            "default_security_group_id": "sg-0758b96d51d82f6c8",
                            "dhcp_options_id": "dopt-e3c88598",
                            "enable_classiclink": "false",
                            "enable_classiclink_dns_support": "false",
                            "enable_dns_hostnames": "true",
                            "enable_dns_support": "true",
                            "id": "vpc-012f51a80e5735ccf",
                            "instance_tenancy": "default",
                            "ipv6_association_id": "",
                            "ipv6_cidr_block": "",
                            "main_route_table_id": "rtb-00df0ce2de499d01b",
                            "owner_id": "230617609085",
                            "tags.%": "1",
                            "tags.Name": "MyVPC"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "data.aws_availability_zones.available": {
                    "type": "aws_availability_zones",
                    "depends_on": [],
                    "primary": {
                        "id": "2019-01-31 15:08:56.365802092 +0000 UTC",
                        "attributes": {
                            "id": "2019-01-31 15:08:56.365802092 +0000 UTC",
                            "names.#": "6",
                            "names.0": "us-east-1a",
                            "names.1": "us-east-1b",
                            "names.2": "us-east-1c",
                            "names.3": "us-east-1d",
                            "names.4": "us-east-1e",
                            "names.5": "us-east-1f",
                            "zone_ids.#": "6",
                            "zone_ids.0": "use1-az2",
                            "zone_ids.1": "use1-az4",
                            "zone_ids.2": "use1-az6",
                            "zone_ids.3": "use1-az1",
                            "zone_ids.4": "use1-az3",
                            "zone_ids.5": "use1-az5"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "data.template_cloudinit_config.docker_server_config": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.consul_client_docker.*",
                        "data.template_file.docker_install"
                    ],
                    "primary": {
                        "id": "2876082765",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "2876082765",
                            "part.#": "2",
                            "part.0.content": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"docker-server1\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "part.0.content_type": "",
                            "part.0.filename": "",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/usr/bin/env bash\n\n# Install Docker-ce\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\nsudo apt -qq update \u0026\u003e /dev/null\nsudo apt install -yqq apt-transport-https ca-certificates curl gnupg2 software-properties-common docker-ce \u0026\u003e /dev/null\n\n\n# Build \u0026 run the dummy container\nsudo mkdir /opt/docker\ncd /opt/docker\nsudo wget https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/Dockerfile\nsudo wget -O /opt/docker/my_dummy_exporter.py https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/my_dummy_exporter.py\nsudo docker build -t dummyapp .\nsudo docker run --name=dummyapp -v /opt/docker/my_dummy_exporter.py:/tmp/my_dummy_exporter.py -d -p 65433:65433 dummyapp\n\n\n# Register the dummy app in consul\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/dummy-65433.json\n{\n  \"service\": {\n    \"name\": \"dummy-65433\",\n    \"id\": \"dummy-65433\",\n    \"port\": 65433,\n    \"check\": {\n      \"name\": \"Port 65433 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:65433\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n\n\n# Build \u0026 run the filebeat container\ncat \u003c\u003c EOF | sudo tee /opt/docker/filebeat.yml\nfilebeat.config:\n  prospectors:\n    path: /usr/share/filebeat/prospectors.d/*.yml\n    reload.enabled: false\n  modules:\n    path: /usr/share/filebeat/modules.d/*.yml\n    reload.enabled: false\n\nfilebeat.autodiscover:\n  providers:\n    - type: docker\n      hints.enabled: true\n\nprocessors:\n- add_cloud_metadata: ~\n\n#output.elasticsearch:\n#  hosts: [\"10.0.1.125:9200\"]\n\noutput.logstash:\n  hosts: [\"10.0.1.125:5044\"]\n\nsetup.kibana:\n  host: \"10.0.1.125:5601\"\n\nEOF\n\n\nsudo docker run -d \\\n  --name=filebeat \\\n  --user=root \\\n  -v /opt/docker/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers:ro \\\n  -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n  docker.elastic.co/beats/filebeat:6.5.4 filebeat -e -strict.perms=false\n",
                            "part.1.content_type": "",
                            "part.1.filename": "",
                            "part.1.merge_type": "",
                            "rendered": "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"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_cloudinit_config.elk_config": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.consul_client_elk"
                    ],
                    "primary": {
                        "id": "3926855737",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "3926855737",
                            "part.#": "2",
                            "part.0.content": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"elk\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "part.0.content_type": "",
                            "part.0.filename": "",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n\n# Install ELK\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\nwget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -\necho \"deb https://artifacts.elastic.co/packages/6.x/apt stable main\" | sudo tee -a /etc/apt/sources.list.d/elastic-6.x.list\nsudo apt-get -qq update\nsudo apt-get install -y openjdk-8-jre-headless openjdk-8-jdk-headless\nsudo apt-get install -y elasticsearch logstash kibana\nsudo systemctl daemon-reload\nsudo systemctl enable elasticsearch logstash kibana\nsudo systemctl start elasticsearch logstash kibana\n\n\n# Configure LogStash\ncat \u003c\u003c EOF | sudo tee /etc/logstash/conf.d/demo-metrics-pipeline.conf\ninput {\n  beats {\n    port =\u003e 5044\n  }\n}\n\n# The filter part of this file is commented out to indicate that it\n# is optional.\n# filter {\n#\n# }\n\noutput {\n  elasticsearch {\n    hosts =\u003e \"localhost:9200\"\n    manage_template =\u003e false\n    index =\u003e \"%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}\"\n  }\n}\n\nEOF\n\n\n# Configure Kibana\ncat \u003c\u003c EOF | sudo tee --append /etc/kibana/kibana.yml\n\nserver.name: kibana\nserver.host: \"0.0.0.0\"\nelasticsearch.url: \"http://localhost:9200\"\n\nEOF\n\nsudo systemctl restart kibana\n\n\n# Register in consul\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/elasticsearch-9200.json\n{\n  \"service\": {\n    \"name\": \"elasticsearch-9200\",\n    \"id\": \"elasticsearch-9200\",\n    \"port\": 9200,\n    \"check\": {\n      \"name\": \"Port 9200 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:9200/_cluster/health?pretty=true\"\n    }\n  }\n}\n\nEOF\n\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/kibana-5601.json\n{\n  \"service\": {\n    \"name\": \"kibana-5601\",\n    \"id\": \"kibana-5601\",\n    \"port\": 5601,\n    \"check\": {\n      \"name\": \"Port 5601 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:5601\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n",
                            "part.1.content_type": "",
                            "part.1.filename": "",
                            "part.1.merge_type": "",
                            "rendered": "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"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.consul_client_docker": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "b8caa6e15c5c801d871e639860edd54f68d4bfa0ce17036c34f65aab9f382972",
                        "attributes": {
                            "id": "b8caa6e15c5c801d871e639860edd54f68d4bfa0ce17036c34f65aab9f382972",
                            "rendered": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"docker-server1\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "template": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/${consul_version}/consul_${consul_version}_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n  ${config}\n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "vars.%": "2",
                            "vars.config": "     \"node_name\": \"docker-server1\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    ",
                            "vars.consul_version": "1.4.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.consul_client_elk": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "3099c127306cea5361736e8ca77f9c4a5cb670548bc9201a8fea86cb58329b19",
                        "attributes": {
                            "id": "3099c127306cea5361736e8ca77f9c4a5cb670548bc9201a8fea86cb58329b19",
                            "rendered": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"elk\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "template": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/${consul_version}/consul_${consul_version}_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n  ${config}\n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "vars.%": "2",
                            "vars.config": "     \"node_name\": \"elk\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    ",
                            "vars.consul_version": "1.4.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.docker_install": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_instance.elk"
                    ],
                    "primary": {
                        "id": "5c28f1ee275b8d2f01806f7252cc97142cbc33871694c8d9f97a826457f0f352",
                        "attributes": {
                            "id": "5c28f1ee275b8d2f01806f7252cc97142cbc33871694c8d9f97a826457f0f352",
                            "rendered": "#!/usr/bin/env bash\n\n# Install Docker-ce\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\nsudo apt -qq update \u0026\u003e /dev/null\nsudo apt install -yqq apt-transport-https ca-certificates curl gnupg2 software-properties-common docker-ce \u0026\u003e /dev/null\n\n\n# Build \u0026 run the dummy container\nsudo mkdir /opt/docker\ncd /opt/docker\nsudo wget https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/Dockerfile\nsudo wget -O /opt/docker/my_dummy_exporter.py https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/my_dummy_exporter.py\nsudo docker build -t dummyapp .\nsudo docker run --name=dummyapp -v /opt/docker/my_dummy_exporter.py:/tmp/my_dummy_exporter.py -d -p 65433:65433 dummyapp\n\n\n# Register the dummy app in consul\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/dummy-65433.json\n{\n  \"service\": {\n    \"name\": \"dummy-65433\",\n    \"id\": \"dummy-65433\",\n    \"port\": 65433,\n    \"check\": {\n      \"name\": \"Port 65433 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:65433\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n\n\n# Build \u0026 run the filebeat container\ncat \u003c\u003c EOF | sudo tee /opt/docker/filebeat.yml\nfilebeat.config:\n  prospectors:\n    path: /usr/share/filebeat/prospectors.d/*.yml\n    reload.enabled: false\n  modules:\n    path: /usr/share/filebeat/modules.d/*.yml\n    reload.enabled: false\n\nfilebeat.autodiscover:\n  providers:\n    - type: docker\n      hints.enabled: true\n\nprocessors:\n- add_cloud_metadata: ~\n\n#output.elasticsearch:\n#  hosts: [\"10.0.1.125:9200\"]\n\noutput.logstash:\n  hosts: [\"10.0.1.125:5044\"]\n\nsetup.kibana:\n  host: \"10.0.1.125:5601\"\n\nEOF\n\n\nsudo docker run -d \\\n  --name=filebeat \\\n  --user=root \\\n  -v /opt/docker/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers:ro \\\n  -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n  docker.elastic.co/beats/filebeat:6.5.4 filebeat -e -strict.perms=false\n",
                            "template": "#!/usr/bin/env bash\n\n# Install Docker-ce\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\nsudo apt -qq update \u0026\u003e /dev/null\nsudo apt install -yqq apt-transport-https ca-certificates curl gnupg2 software-properties-common docker-ce \u0026\u003e /dev/null\n\n\n# Build \u0026 run the dummy container\nsudo mkdir /opt/docker\ncd /opt/docker\nsudo wget https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/Dockerfile\nsudo wget -O /opt/docker/my_dummy_exporter.py https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/my_dummy_exporter.py\nsudo docker build -t dummyapp .\nsudo docker run --name=dummyapp -v /opt/docker/my_dummy_exporter.py:/tmp/my_dummy_exporter.py -d -p 65433:65433 dummyapp\n\n\n# Register the dummy app in consul\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/dummy-65433.json\n{\n  \"service\": {\n    \"name\": \"dummy-65433\",\n    \"id\": \"dummy-65433\",\n    \"port\": 65433,\n    \"check\": {\n      \"name\": \"Port 65433 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:65433\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n\n\n# Build \u0026 run the filebeat container\ncat \u003c\u003c EOF | sudo tee /opt/docker/filebeat.yml\nfilebeat.config:\n  prospectors:\n    path: /usr/share/filebeat/prospectors.d/*.yml\n    reload.enabled: false\n  modules:\n    path: /usr/share/filebeat/modules.d/*.yml\n    reload.enabled: false\n\nfilebeat.autodiscover:\n  providers:\n    - type: docker\n      hints.enabled: true\n\nprocessors:\n- add_cloud_metadata: ~\n\n#output.elasticsearch:\n#  hosts: [\"${elk_priv_ip}:9200\"]\n\noutput.logstash:\n  hosts: [\"${elk_priv_ip}:5044\"]\n\nsetup.kibana:\n  host: \"${elk_priv_ip}:5601\"\n\nEOF\n\n\nsudo docker run -d \\\n  --name=filebeat \\\n  --user=root \\\n  -v /opt/docker/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers:ro \\\n  -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n  docker.elastic.co/beats/filebeat:6.5.4 filebeat -e -strict.perms=false\n",
                            "vars.%": "1",
                            "vars.elk_priv_ip": "10.0.1.125"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                }
            },
            "depends_on": []
        }
    ]
}

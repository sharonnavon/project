{
    "version": 3,
    "terraform_version": "0.11.11",
    "serial": 16,
    "lineage": "d2e60b36-d1c9-0ca8-beea-59cd75ca4776",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {},
            "resources": {
                "aws_iam_instance_profile.consul_auto_join": {
                    "type": "aws_iam_instance_profile",
                    "depends_on": [
                        "aws_iam_role.consul_auto_join"
                    ],
                    "primary": {
                        "id": "consul_auto_join",
                        "attributes": {
                            "arn": "arn:aws:iam::230617609085:instance-profile/consul_auto_join",
                            "create_date": "2019-01-31T13:14:06Z",
                            "id": "consul_auto_join",
                            "name": "consul_auto_join",
                            "path": "/",
                            "role": "consul_auto_join",
                            "roles.#": "0",
                            "unique_id": "AIPAIMGV3FSBWJHGPVNGG"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_policy.consul_auto_join": {
                    "type": "aws_iam_policy",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:iam::230617609085:policy/consul_auto_join",
                        "attributes": {
                            "arn": "arn:aws:iam::230617609085:policy/consul_auto_join",
                            "description": "Allows Consul nodes to describe instances for joining",
                            "id": "arn:aws:iam::230617609085:policy/consul_auto_join",
                            "name": "consul_auto_join",
                            "path": "/",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:DescribeInstances\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_policy_attachment.consul_auto_join": {
                    "type": "aws_iam_policy_attachment",
                    "depends_on": [
                        "aws_iam_policy.consul_auto_join",
                        "aws_iam_role.consul_auto_join"
                    ],
                    "primary": {
                        "id": "consul_auto_join",
                        "attributes": {
                            "groups.#": "0",
                            "id": "consul_auto_join",
                            "name": "consul_auto_join",
                            "policy_arn": "arn:aws:iam::230617609085:policy/consul_auto_join",
                            "roles.#": "1",
                            "roles.4186901782": "consul_auto_join",
                            "users.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role.consul_auto_join": {
                    "type": "aws_iam_role",
                    "depends_on": [],
                    "primary": {
                        "id": "consul_auto_join",
                        "attributes": {
                            "arn": "arn:aws:iam::230617609085:role/consul_auto_join",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2019-01-31T13:13:35Z",
                            "description": "",
                            "force_detach_policies": "false",
                            "id": "consul_auto_join",
                            "max_session_duration": "3600",
                            "name": "consul_auto_join",
                            "path": "/",
                            "tags.%": "0",
                            "unique_id": "AROAJRDRF5VUVJWHEOP22"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.docker_server": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.consul_auto_join",
                        "aws_security_group.sg_consul",
                        "aws_security_group.sg_default",
                        "aws_subnet.public_subnet1",
                        "data.template_cloudinit_config.docker_server_config.*"
                    ],
                    "primary": {
                        "id": "i-09faedf853bcf2ec2",
                        "attributes": {
                            "ami": "ami-0f9cf087c1f27d9b1",
                            "arn": "arn:aws:ec2:us-east-1:230617609085:instance/i-09faedf853bcf2ec2",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-east-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "1",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "consul_auto_join",
                            "id": "i-09faedf853bcf2ec2",
                            "instance_state": "running",
                            "instance_type": "t2.micro",
                            "ipv6_addresses.#": "0",
                            "key_name": "aws_ec2",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-079ec2049ccb107ba",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-079ec2049ccb107ba",
                            "private_dns": "ip-10-0-1-235.ec2.internal",
                            "private_ip": "10.0.1.235",
                            "public_dns": "ec2-3-87-199-45.compute-1.amazonaws.com",
                            "public_ip": "3.87.199.45",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-06e2c0400fe514804",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-066cf7d346f5e84af",
                            "tags.%": "1",
                            "tags.Name": "docker-server1",
                            "tenancy": "default",
                            "user_data": "a1a238334db29dc73b5185fdde18b25140078d4b",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "2",
                            "vpc_security_group_ids.2261640441": "sg-0ba3c5affc019bb82",
                            "vpc_security_group_ids.3973135621": "sg-0de798dda9e34e688"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.elk": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.consul_auto_join",
                        "aws_security_group.sg_consul",
                        "aws_security_group.sg_default",
                        "aws_subnet.public_subnet1",
                        "data.template_cloudinit_config.elk_config"
                    ],
                    "primary": {
                        "id": "i-0b61c16269f7aa76c",
                        "attributes": {
                            "ami": "ami-0f9cf087c1f27d9b1",
                            "arn": "arn:aws:ec2:us-east-1:230617609085:instance/i-0b61c16269f7aa76c",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-east-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "2",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "unlimited",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "consul_auto_join",
                            "id": "i-0b61c16269f7aa76c",
                            "instance_state": "running",
                            "instance_type": "t3.medium",
                            "ipv6_addresses.#": "0",
                            "key_name": "aws_ec2",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-027bc2e76a41873bf",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-027bc2e76a41873bf",
                            "private_dns": "ip-10-0-1-232.ec2.internal",
                            "private_ip": "10.0.1.232",
                            "public_dns": "ec2-3-89-31-102.compute-1.amazonaws.com",
                            "public_ip": "3.89.31.102",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-0bf5e4321f859705b",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-066cf7d346f5e84af",
                            "tags.%": "1",
                            "tags.Name": "elk",
                            "tenancy": "default",
                            "user_data": "62db1d49eaba143035bfa6fa3602108c0b4edbae",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "2",
                            "vpc_security_group_ids.2261640441": "sg-0ba3c5affc019bb82",
                            "vpc_security_group_ids.3973135621": "sg-0de798dda9e34e688"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_internet_gateway.igw": {
                    "type": "aws_internet_gateway",
                    "depends_on": [
                        "aws_vpc.MyVPC"
                    ],
                    "primary": {
                        "id": "igw-0ba49807fe4adec47",
                        "attributes": {
                            "id": "igw-0ba49807fe4adec47",
                            "owner_id": "230617609085",
                            "tags.%": "0",
                            "vpc_id": "vpc-012f51a80e5735ccf"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_route_table.rtb_public": {
                    "type": "aws_route_table",
                    "depends_on": [
                        "aws_internet_gateway.igw",
                        "aws_vpc.MyVPC"
                    ],
                    "primary": {
                        "id": "rtb-0dec6a895999533ca",
                        "attributes": {
                            "id": "rtb-0dec6a895999533ca",
                            "owner_id": "230617609085",
                            "propagating_vgws.#": "0",
                            "route.#": "1",
                            "route.3198052502.cidr_block": "0.0.0.0/0",
                            "route.3198052502.egress_only_gateway_id": "",
                            "route.3198052502.gateway_id": "igw-0ba49807fe4adec47",
                            "route.3198052502.instance_id": "",
                            "route.3198052502.ipv6_cidr_block": "",
                            "route.3198052502.nat_gateway_id": "",
                            "route.3198052502.network_interface_id": "",
                            "route.3198052502.transit_gateway_id": "",
                            "route.3198052502.vpc_peering_connection_id": "",
                            "tags.%": "1",
                            "tags.Name": "rtb_public",
                            "vpc_id": "vpc-012f51a80e5735ccf"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_route_table_association.rta-public_subnet1": {
                    "type": "aws_route_table_association",
                    "depends_on": [
                        "aws_route_table.rtb_public",
                        "aws_subnet.public_subnet1"
                    ],
                    "primary": {
                        "id": "rtbassoc-04bad12c0eb48fcdd",
                        "attributes": {
                            "id": "rtbassoc-04bad12c0eb48fcdd",
                            "route_table_id": "rtb-0dec6a895999533ca",
                            "subnet_id": "subnet-066cf7d346f5e84af"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group.sg_consul": {
                    "type": "aws_security_group",
                    "depends_on": [
                        "aws_vpc.MyVPC"
                    ],
                    "primary": {
                        "id": "sg-0ba3c5affc019bb82",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:230617609085:security-group/sg-0ba3c5affc019bb82",
                            "description": "Allow ssh \u0026 consul inbound traffic",
                            "egress.#": "1",
                            "egress.2049434831.cidr_blocks.#": "1",
                            "egress.2049434831.cidr_blocks.0": "0.0.0.0/0",
                            "egress.2049434831.description": "Allow all outside security group",
                            "egress.2049434831.from_port": "0",
                            "egress.2049434831.ipv6_cidr_blocks.#": "0",
                            "egress.2049434831.prefix_list_ids.#": "0",
                            "egress.2049434831.protocol": "-1",
                            "egress.2049434831.security_groups.#": "0",
                            "egress.2049434831.self": "false",
                            "egress.2049434831.to_port": "0",
                            "id": "sg-0ba3c5affc019bb82",
                            "ingress.#": "3",
                            "ingress.3406622939.cidr_blocks.#": "1",
                            "ingress.3406622939.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.3406622939.description": "Allow consul UI access from the world",
                            "ingress.3406622939.from_port": "8500",
                            "ingress.3406622939.ipv6_cidr_blocks.#": "0",
                            "ingress.3406622939.prefix_list_ids.#": "0",
                            "ingress.3406622939.protocol": "tcp",
                            "ingress.3406622939.security_groups.#": "0",
                            "ingress.3406622939.self": "false",
                            "ingress.3406622939.to_port": "8500",
                            "ingress.4044943731.cidr_blocks.#": "1",
                            "ingress.4044943731.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.4044943731.description": "Allow ssh from the world",
                            "ingress.4044943731.from_port": "22",
                            "ingress.4044943731.ipv6_cidr_blocks.#": "0",
                            "ingress.4044943731.prefix_list_ids.#": "0",
                            "ingress.4044943731.protocol": "tcp",
                            "ingress.4044943731.security_groups.#": "0",
                            "ingress.4044943731.self": "false",
                            "ingress.4044943731.to_port": "22",
                            "ingress.994307033.cidr_blocks.#": "0",
                            "ingress.994307033.description": "Allow all inside security group",
                            "ingress.994307033.from_port": "0",
                            "ingress.994307033.ipv6_cidr_blocks.#": "0",
                            "ingress.994307033.prefix_list_ids.#": "0",
                            "ingress.994307033.protocol": "-1",
                            "ingress.994307033.security_groups.#": "0",
                            "ingress.994307033.self": "true",
                            "ingress.994307033.to_port": "0",
                            "name": "sg_consul",
                            "owner_id": "230617609085",
                            "revoke_rules_on_delete": "false",
                            "tags.%": "0",
                            "vpc_id": "vpc-012f51a80e5735ccf"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group.sg_default": {
                    "type": "aws_security_group",
                    "depends_on": [
                        "aws_vpc.MyVPC"
                    ],
                    "primary": {
                        "id": "sg-0de798dda9e34e688",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:230617609085:security-group/sg-0de798dda9e34e688",
                            "description": "Managed by Terraform",
                            "egress.#": "1",
                            "egress.482069346.cidr_blocks.#": "1",
                            "egress.482069346.cidr_blocks.0": "0.0.0.0/0",
                            "egress.482069346.description": "",
                            "egress.482069346.from_port": "0",
                            "egress.482069346.ipv6_cidr_blocks.#": "0",
                            "egress.482069346.prefix_list_ids.#": "0",
                            "egress.482069346.protocol": "-1",
                            "egress.482069346.security_groups.#": "0",
                            "egress.482069346.self": "false",
                            "egress.482069346.to_port": "0",
                            "id": "sg-0de798dda9e34e688",
                            "ingress.#": "10",
                            "ingress.1746620816.cidr_blocks.#": "1",
                            "ingress.1746620816.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.1746620816.description": "",
                            "ingress.1746620816.from_port": "9100",
                            "ingress.1746620816.ipv6_cidr_blocks.#": "0",
                            "ingress.1746620816.prefix_list_ids.#": "0",
                            "ingress.1746620816.protocol": "tcp",
                            "ingress.1746620816.security_groups.#": "0",
                            "ingress.1746620816.self": "false",
                            "ingress.1746620816.to_port": "9100",
                            "ingress.1994621032.cidr_blocks.#": "1",
                            "ingress.1994621032.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.1994621032.description": "",
                            "ingress.1994621032.from_port": "3000",
                            "ingress.1994621032.ipv6_cidr_blocks.#": "0",
                            "ingress.1994621032.prefix_list_ids.#": "0",
                            "ingress.1994621032.protocol": "tcp",
                            "ingress.1994621032.security_groups.#": "0",
                            "ingress.1994621032.self": "false",
                            "ingress.1994621032.to_port": "3000",
                            "ingress.2214680975.cidr_blocks.#": "1",
                            "ingress.2214680975.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2214680975.description": "",
                            "ingress.2214680975.from_port": "80",
                            "ingress.2214680975.ipv6_cidr_blocks.#": "0",
                            "ingress.2214680975.prefix_list_ids.#": "0",
                            "ingress.2214680975.protocol": "tcp",
                            "ingress.2214680975.security_groups.#": "0",
                            "ingress.2214680975.self": "false",
                            "ingress.2214680975.to_port": "80",
                            "ingress.2319052179.cidr_blocks.#": "1",
                            "ingress.2319052179.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2319052179.description": "",
                            "ingress.2319052179.from_port": "9000",
                            "ingress.2319052179.ipv6_cidr_blocks.#": "0",
                            "ingress.2319052179.prefix_list_ids.#": "0",
                            "ingress.2319052179.protocol": "tcp",
                            "ingress.2319052179.security_groups.#": "0",
                            "ingress.2319052179.self": "false",
                            "ingress.2319052179.to_port": "9000",
                            "ingress.2500694996.cidr_blocks.#": "1",
                            "ingress.2500694996.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2500694996.description": "",
                            "ingress.2500694996.from_port": "9200",
                            "ingress.2500694996.ipv6_cidr_blocks.#": "0",
                            "ingress.2500694996.prefix_list_ids.#": "0",
                            "ingress.2500694996.protocol": "tcp",
                            "ingress.2500694996.security_groups.#": "0",
                            "ingress.2500694996.self": "false",
                            "ingress.2500694996.to_port": "9200",
                            "ingress.2541437006.cidr_blocks.#": "1",
                            "ingress.2541437006.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2541437006.description": "",
                            "ingress.2541437006.from_port": "22",
                            "ingress.2541437006.ipv6_cidr_blocks.#": "0",
                            "ingress.2541437006.prefix_list_ids.#": "0",
                            "ingress.2541437006.protocol": "tcp",
                            "ingress.2541437006.security_groups.#": "0",
                            "ingress.2541437006.self": "false",
                            "ingress.2541437006.to_port": "22",
                            "ingress.3431095222.cidr_blocks.#": "1",
                            "ingress.3431095222.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.3431095222.description": "",
                            "ingress.3431095222.from_port": "5601",
                            "ingress.3431095222.ipv6_cidr_blocks.#": "0",
                            "ingress.3431095222.prefix_list_ids.#": "0",
                            "ingress.3431095222.protocol": "tcp",
                            "ingress.3431095222.security_groups.#": "0",
                            "ingress.3431095222.self": "false",
                            "ingress.3431095222.to_port": "5601",
                            "ingress.476094592.cidr_blocks.#": "1",
                            "ingress.476094592.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.476094592.description": "",
                            "ingress.476094592.from_port": "65433",
                            "ingress.476094592.ipv6_cidr_blocks.#": "0",
                            "ingress.476094592.prefix_list_ids.#": "0",
                            "ingress.476094592.protocol": "tcp",
                            "ingress.476094592.security_groups.#": "0",
                            "ingress.476094592.self": "false",
                            "ingress.476094592.to_port": "65433",
                            "ingress.501830036.cidr_blocks.#": "1",
                            "ingress.501830036.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.501830036.description": "",
                            "ingress.501830036.from_port": "9090",
                            "ingress.501830036.ipv6_cidr_blocks.#": "0",
                            "ingress.501830036.prefix_list_ids.#": "0",
                            "ingress.501830036.protocol": "tcp",
                            "ingress.501830036.security_groups.#": "0",
                            "ingress.501830036.self": "false",
                            "ingress.501830036.to_port": "9090",
                            "ingress.516175195.cidr_blocks.#": "1",
                            "ingress.516175195.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.516175195.description": "",
                            "ingress.516175195.from_port": "8080",
                            "ingress.516175195.ipv6_cidr_blocks.#": "0",
                            "ingress.516175195.prefix_list_ids.#": "0",
                            "ingress.516175195.protocol": "tcp",
                            "ingress.516175195.security_groups.#": "0",
                            "ingress.516175195.self": "false",
                            "ingress.516175195.to_port": "8080",
                            "name": "sg_default",
                            "owner_id": "230617609085",
                            "revoke_rules_on_delete": "false",
                            "tags.%": "0",
                            "vpc_id": "vpc-012f51a80e5735ccf"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_subnet.public_subnet1": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.MyVPC",
                        "data.aws_availability_zones.available"
                    ],
                    "primary": {
                        "id": "subnet-066cf7d346f5e84af",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:230617609085:subnet/subnet-066cf7d346f5e84af",
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-east-1a",
                            "availability_zone_id": "use1-az2",
                            "cidr_block": "10.0.1.0/24",
                            "id": "subnet-066cf7d346f5e84af",
                            "ipv6_cidr_block": "",
                            "ipv6_cidr_block_association_id": "",
                            "map_public_ip_on_launch": "true",
                            "owner_id": "230617609085",
                            "tags.%": "1",
                            "tags.Name": "public_subnet1",
                            "vpc_id": "vpc-012f51a80e5735ccf"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_vpc.MyVPC": {
                    "type": "aws_vpc",
                    "depends_on": [],
                    "primary": {
                        "id": "vpc-012f51a80e5735ccf",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:230617609085:vpc/vpc-012f51a80e5735ccf",
                            "assign_generated_ipv6_cidr_block": "false",
                            "cidr_block": "10.0.0.0/16",
                            "default_network_acl_id": "acl-098b720f3f0818423",
                            "default_route_table_id": "rtb-00df0ce2de499d01b",
                            "default_security_group_id": "sg-0758b96d51d82f6c8",
                            "dhcp_options_id": "dopt-e3c88598",
                            "enable_classiclink": "false",
                            "enable_classiclink_dns_support": "false",
                            "enable_dns_hostnames": "true",
                            "enable_dns_support": "true",
                            "id": "vpc-012f51a80e5735ccf",
                            "instance_tenancy": "default",
                            "ipv6_association_id": "",
                            "ipv6_cidr_block": "",
                            "main_route_table_id": "rtb-00df0ce2de499d01b",
                            "owner_id": "230617609085",
                            "tags.%": "1",
                            "tags.Name": "MyVPC"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "data.aws_availability_zones.available": {
                    "type": "aws_availability_zones",
                    "depends_on": [],
                    "primary": {
                        "id": "2019-01-31 13:13:20.883894707 +0000 UTC",
                        "attributes": {
                            "id": "2019-01-31 13:13:20.883894707 +0000 UTC",
                            "names.#": "6",
                            "names.0": "us-east-1a",
                            "names.1": "us-east-1b",
                            "names.2": "us-east-1c",
                            "names.3": "us-east-1d",
                            "names.4": "us-east-1e",
                            "names.5": "us-east-1f",
                            "zone_ids.#": "6",
                            "zone_ids.0": "use1-az2",
                            "zone_ids.1": "use1-az4",
                            "zone_ids.2": "use1-az6",
                            "zone_ids.3": "use1-az1",
                            "zone_ids.4": "use1-az3",
                            "zone_ids.5": "use1-az5"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "data.template_cloudinit_config.docker_server_config": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.consul_client_docker.*",
                        "data.template_file.docker_install"
                    ],
                    "primary": {
                        "id": "3161171761",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "3161171761",
                            "part.#": "2",
                            "part.0.content": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"docker-server1\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "part.0.content_type": "",
                            "part.0.filename": "",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/usr/bin/env bash\n\n# Install Docker-ce\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\nsudo apt -qq update \u0026\u003e /dev/null\nsudo apt install -yqq apt-transport-https ca-certificates curl gnupg2 software-properties-common docker-ce \u0026\u003e /dev/null\n\n# Build \u0026 run the dummy container\nsudo mkdir /opt/docker\ncd /opt/docker\nsudo wget https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/Dockerfile\nsudo wget -O /opt/docker/my_dummy_exporter.py https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/my_dummy_exporter.py\nsudo docker build -t dummyapp .\nsudo docker run --name=dummyapp -v /opt/docker/my_dummy_exporter.py:/tmp/my_dummy_exporter.py -d -p 65433:65433 dummyapp\n\n# Register the dummy app in consul\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/dummy-65433.json\n{\n  \"service\": {\n    \"name\": \"dummy-65433\",\n    \"id\": \"dummy-65433\",\n    \"port\": 65433,\n    \"check\": {\n      \"name\": \"Port 65433 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:65433\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n\n# Build \u0026 run the filebeat container\ncat \u003c\u003c EOF | sudo tee /opt/docker/filebeat.yml\nfilebeat.config:\n  prospectors:\n    path: /usr/share/filebeat/prospectors.d/*.yml\n    reload.enabled: false\n  modules:\n    path: /usr/share/filebeat/modules.d/*.yml\n    reload.enabled: false\n\nfilebeat.autodiscover:\n  providers:\n    - type: docker\n      hints.enabled: true\n\nprocessors:\n- add_cloud_metadata: ~\n\noutput.elasticsearch:\n  hosts: ['10.0.1.232:9200']\n\nsetup.kibana:\n  host: \"10.0.1.232:5601\"\n\nEOF\n\nsudo docker run -d \\\n  --name=filebeat \\\n  --user=root \\\n  -v /opt/docker/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers:ro \\\n  -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n  docker.elastic.co/beats/filebeat:6.5.4 filebeat -e -strict.perms=false\n",
                            "part.1.content_type": "",
                            "part.1.filename": "",
                            "part.1.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/8RXYW8budH+TiD/Yd5NkNy9V+7ajp0i2+wBSWynwiWxYCe5HlxDoMiRxHiXZEiubDVNf3tBcldaKXbvPhSoAVsm5+HMcGY48+i1Vh6Vpx9WBkto2tpLw6wvGnmL4i8w1a0SzK6q7N3o3cmrs4/vj1+e/5aRsKKf0DqpVQn7+d4D8oBQOgQ9IGvdlik3Q0tPFNdCqnkJf55KPwBE4x5vfWFqJtUD8k42+J3+h/9XtM4WU6kKVEuYMrcgDj1QJAT5QkP2xrLpVKo5jMYuz/OMjM9Hn15+OJmMxtWjH3hra1h4b8qi2H/2PD84Osy7z6JmHp0vGvSMCuZZUWvOairN8vDHXvtIOc/qOugXaFAJVFxiMuRaoYEZT+fBoS9foDWCeYTHPxcCl4Vq63oHs/ryBWTSCK36hzRb2M7kKXq+CAZfa+XaOpriAgrfGBKvQ91bDTwJg45wPVcWhcUamUOXL5hbSK6tybluioQs9vPDfK9bTOJiUkvV3k5YI54dBkV33HngQvJ3YHb3lnzRaAE/3XaYtNksuyXEPMYIx2x2IPIQLtC3prPUHboW0gI1UGjjC36nBD3vJLnYldlWbZ3yiNsHwj8zOc8/O63gZ1hfBF68ODk7JV8JQMbEEq2XDidMCJuVkD3aVFb2pwAJRTMRMgoHrm6EHJXHKNbGOb7QuhOi4nZlfJC0x68+HeJPb6envz7d23/+2y/j25GdV1WnRTo2rXFisdEeJ3iLPCvB2xa3xKnyJnyB/Hoor5EtcaLVxKNtpGIeh1KL3q4mn7VUWQmXmbF6KQXait048Gw+ucZV1RWMQ7tEG3eXrG6xCkqyq6Am/mRKC5wo1gQDmdD8Gi1Nh/azDpWhis46bqXxyVk38CdA0pGshBmrHcZN8o2EpJCH8NpieF+tQwuPYW6Z8qBvFFq3kAb0DGa6FmhdynqAMSG2ypEv9I0Cet5tln1tbpK3XShbtRRdiIXTWuzLOjgsOe4Umls5j43oPnt1HXan4rKTs9OMXH5U0l+RY0zRkVpVr7csgJCO6yXaFbA5Kk/O8UsrLbpKob/R9ppqVUuFuWd2jp68nHm0vazfJJcXSdsV+ejQdtklb6xuTb8Yj45PZY3V4Or9BYwU5BydZ9ZXWtEZk3VrkZyopbRaNah89ebs3cu/jc/PXl9UB+TkFvlFQI8tVpdAZ5DdrTWDK3j8GNa93jYBfI8Ha63VnT0lhQeokYLO7r8I0NQEqJC22m4nwcA51pqJKuq9lnXouvDXj2N49O7l6P14dEx+kXV9IeeK1dXF6M3o/QfyQTaoW3/htblAXh0Rctm10ivyK1MexatVFcctDbXZ5yQWdyyfVC3c1yAYNlpRG53YFaZnBNtFtQuKSdrF/G/mNXkIXRzgODWGtbsogEp44orWUWTO0/0c+UFeFPMn6SEx4wunW8vR5bV0vpuAM3fxdj33hL5RIU55ajtx6MXRVrTTVvm2mJs5/BPWo/gaVxAaA+2msxA0bFs02kmv7QoygVO4ZJYvqjgdr/6wLXj0Q+2mk24UA+Xux5CKaY0bvrDNFeB7srDmCJEwBN98SI/R1tPoCHBGeZhOM8kDiYEYlblqzfwAnJ75G2aRGqtNAKGjXDeNViD68G/bJQ/hVStrAY/Btgr8AkG0TbMK5eOZVGiHEzY2y6Qp8pLBMqJuAtVZcxJ2k8+lX7TTUPI8FVOMmlswq5ViS60KY/Vn5L5omPNoC4/Wspm2TeGxMZGmFalywnseWKFnQ/NFs5pEvyd4G2KFNjer/74nd1lJPiU3YBpjSX0KIjMG8i15iDGlYVZWawRd/u5NysAA774jFYH3PDs6fPq0jH/XpkNuz3Euw20GiQ0mpepHI2ceXryAk7PT/pl8z5jiORqVR9qUSFLXWLISvpJEA3oGsIF34z+T4h5BuEdWJve7rZ7IfCU9vej0jrX1CRkTCwnY05BMBr61ZHWAHrnNfsCGve6bQBwZC+18ilYWYd9I+P1G7mzIqRPDhrXuPphQmVNkfvBm7gnrIM39oXzV1GS9SHOpJADGameQe21dGX00zC/KNCZD1eJaQzGA5qL4/6gxnEiO52lmiA2varRoa/xdtR3sD6jc+M9ar3uy0t0i8srOGAUfZ0nXM1KGFlJ5t1EZKCEhxmqOzsXb09CnJ7zWrZiEb2yBXpfwL0J0603rc6yZ85I7DF07GArpdSVcPtnfy/fy/fzg6UH5/GBv78kVCd8gW5NfyylTrMeWkA2QR8/29rNhKQzfroC/E+if8DrxaS80l8pq3a2X9+a7vCvcWwCr1zqWzBa1nPZ61jXmyv8g2jkfWFA3tZzm1+Wdm92ZbqsLas51Ebxya//KZ/lRfrgpeopAnbeS+9ygbVyVamKXb1D6gPw7AAD//6ZdJtx+EAAA"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_cloudinit_config.elk_config": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.consul_client_elk",
                        "data.template_file.elk_install"
                    ],
                    "primary": {
                        "id": "628212861",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "628212861",
                            "part.#": "2",
                            "part.0.content": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"elk\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "part.0.content_type": "",
                            "part.0.filename": "",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n\n# Install ELK\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\nwget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -\necho \"deb https://artifacts.elastic.co/packages/6.x/apt stable main\" | sudo tee -a /etc/apt/sources.list.d/elastic-6.x.list\nsudo apt-get -qq update\nsudo apt-get install -y openjdk-8-jre-headless openjdk-8-jdk-headless\nsudo apt-get install -y elasticsearch logstash kibana\nsudo systemctl daemon-reload\nsudo systemctl enable elasticsearch logstash kibana\nsudo systemctl start elasticsearch logstash kibana\n\n# Configure Kibana\ncat \u003c\u003c EOF | sudo tee --append /etc/kibana/kibana.yml\n\nserver.name: kibana\nserver.host: \"0.0.0.0\"\nelasticsearch.url: \"http://localhost:9200\"\n\nEOF\n\nsudo systemctl restart kibana\n\n# Register in consul\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/elasticsearch-9200.json\n{\n  \"service\": {\n    \"name\": \"elasticsearch-9200\",\n    \"id\": \"elasticsearch-9200\",\n    \"port\": 9200,\n    \"check\": {\n      \"name\": \"Port 9200 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:9200/_cluster/health?pretty=true\"\n    }\n  }\n}\n\nEOF\n\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/kibana-5601.json\n{\n  \"service\": {\n    \"name\": \"kibana-5601\",\n    \"id\": \"kibana-5601\",\n    \"port\": 5601,\n    \"check\": {\n      \"name\": \"Port 5601 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:5601\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n",
                            "part.1.content_type": "",
                            "part.1.filename": "",
                            "part.1.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/7xWbW8buRH+TsD/YboJci2u3LVTx23U7BWOLbuC41iQklwDwxAocqRlxCXXJFeWmua/F9wXWauTg7QoasNYc+bhMy8ccubMaI/a0w/rAnuQl8rLglmf5HKF4q8wNaUWzK7T6Hpw3X978/H9+enoc0TCin5C66TRPTiKDw/IAaF0G3RANtyWaTdDS/uaGyH1vAd/nkq/BaiMe1z5pFBM6gNyLXP8Df+z3yWls8lU6gT1EqbMZcShB4qEIM8MRJeWTadSz2EwdHEcR2Q4Gnw6/dCfDIbp89/z0irIvC96SXJ08jp++eo4br6JYh6dT3L0jArmWaIMZ4rKYnn8h5Z9oJ1nSgV+gQVqgZpLrA25Uhhghafz4ND9PZSFYB7hxS+JwGWiS6V2MOv7e5A1I5T6n7LoYBuTF+h5FgyeGe1KVZniAhKfF6QKh7p3BnitDBwhPNdLEosKmUMXZ8xlkhtbxNzkSY1MjuLj+LBZTKrFREldriYsFyfHgWhPzFsu1P5umd2Nkme5EfDzqsHUwnzZLKE6xyrD1Wk2IPIMxujLorHUbFoIaYEWkJjCJ3yvBj1vNLHY1dlSd3Z5xO6G8M9MzuMvzmj4BTaBwJs3/ZsL8pUAREws0XrpcMKEsFEPouePlRX9MUBC0UyErJRbrj4qOWqPldoUzvHMmEaJmtt14YOmPH/76Rh/fje9+PVPh0evP18NVwM7T9OGRTo2VTixmBuPE1whj3rgbYkddV15E54hX2zrFbIlToyeeLS51Mzjttait+vJFyN11IPbqLBmKQXalD048Gw+WeA6bQrGoV2iraRLpkpMA0l0F2iqn0gbgRPN8mAgQrWIGlWEuvLQcSsLX3votpwIkJo86sGMKYeVkHwj4STIMzizGC5V6dDCC5hbpj2YB43WZbIAM4OZUQKtq486wJgQnRrkmXnQQEeNsNcW5OOJdaujU0CVC1W1lBbbWg4OS4471eXWzmMumm9L12B3yizq31xE5Pajlv6OnGOdHWl0etaxAEI6bpZo18DmqD0Z4X0pLbpUo38wdkGNVlJj7JmdoyenM4+21bVCcjuu2e7IR4e2OVJyaU1ZtIvh4PxCKky3Qm8DKKQgI3SeWZ8aTWdMqtIi6eultEbnqH16eXN9+o/h6OZsnL4k/RXycUAPLaa3QGcQ7WeN4A5evIDNA2/zAH7Cgw1ruvchqdMDtJCCzp4OBGh986mQNu2+IcHACJVhIq14F1KFpxb+/nEIz69PB++Hg3NyJZUay7lmKh0PLgfvP5APMkdT+rE3xRh5+oqQ2+b9vCO/Mu1RvF2nVY+loTbbM6mKuyqfulq4VyAY5kZTWzmxq6yvEXSLahdUHdIu5v/SpEPGquZMnkETP/TfXTUOogAq4SeXlI4ic54exchfxkky/6m+OqzwiTOl5ehiJZ0nD3VPvQG6aW/Mejlj3LsYFXNe8pib5HJ4Sa/6n2kjcsgsz+BfsOm7C1xDeBBo09wETr/PWDC+YHN0yUm8Cn6FpIbM50zqqGUOd56y/b7HImno6Em8qsN5YlToytvJgK7BFKi/iAX9C/1ikWbIhELntsVisRE/ydJNijJz55nLYCGnTLP/pvr+I8K6GL+/pfO4XtUyzjy8eQP9m4tOtikrwvxV57ze3nzida4IqZtIHFpQb+NRLcuM8z2IDuPqNyIdn+LSqh5EzYxYvSsV/vXLw8OI7L2otn4Nt4IY4Vw6jxakblvP/jC6Y0jHERosViNJPYA09zfqwVdSt9hNd93d1TTbSIrv6wtjw8wRRI2knRi+kraPN0aGxvoKWN0WqHFtu49kmGuWTAXkK/coD9joqWwmE67KkKUkQ6Z89rfCovfrepSoGL6R8PetyfqPZLA+Avrq5PDoR1K3Be/mbI+iSVYQ/VCyAvB/k6zKiz0J+U0Zhqva1tvuM0/pAfl3AAAA//8nwRi86g0AAA=="
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.consul_client_docker": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "b8caa6e15c5c801d871e639860edd54f68d4bfa0ce17036c34f65aab9f382972",
                        "attributes": {
                            "id": "b8caa6e15c5c801d871e639860edd54f68d4bfa0ce17036c34f65aab9f382972",
                            "rendered": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"docker-server1\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "template": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/${consul_version}/consul_${consul_version}_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n  ${config}\n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "vars.%": "2",
                            "vars.config": "     \"node_name\": \"docker-server1\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    ",
                            "vars.consul_version": "1.4.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.consul_client_elk": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "3099c127306cea5361736e8ca77f9c4a5cb670548bc9201a8fea86cb58329b19",
                        "attributes": {
                            "id": "3099c127306cea5361736e8ca77f9c4a5cb670548bc9201a8fea86cb58329b19",
                            "rendered": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"elk\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "template": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/${consul_version}/consul_${consul_version}_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n  ${config}\n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "vars.%": "2",
                            "vars.config": "     \"node_name\": \"elk\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    ",
                            "vars.consul_version": "1.4.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.docker_install": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_instance.elk"
                    ],
                    "primary": {
                        "id": "8a19fe997e30078afee3f5898989750136b689d569ce7c5f497ba6dd34c5bca4",
                        "attributes": {
                            "id": "8a19fe997e30078afee3f5898989750136b689d569ce7c5f497ba6dd34c5bca4",
                            "rendered": "#!/usr/bin/env bash\n\n# Install Docker-ce\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\nsudo apt -qq update \u0026\u003e /dev/null\nsudo apt install -yqq apt-transport-https ca-certificates curl gnupg2 software-properties-common docker-ce \u0026\u003e /dev/null\n\n# Build \u0026 run the dummy container\nsudo mkdir /opt/docker\ncd /opt/docker\nsudo wget https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/Dockerfile\nsudo wget -O /opt/docker/my_dummy_exporter.py https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/my_dummy_exporter.py\nsudo docker build -t dummyapp .\nsudo docker run --name=dummyapp -v /opt/docker/my_dummy_exporter.py:/tmp/my_dummy_exporter.py -d -p 65433:65433 dummyapp\n\n# Register the dummy app in consul\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/dummy-65433.json\n{\n  \"service\": {\n    \"name\": \"dummy-65433\",\n    \"id\": \"dummy-65433\",\n    \"port\": 65433,\n    \"check\": {\n      \"name\": \"Port 65433 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:65433\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n\n# Build \u0026 run the filebeat container\ncat \u003c\u003c EOF | sudo tee /opt/docker/filebeat.yml\nfilebeat.config:\n  prospectors:\n    path: /usr/share/filebeat/prospectors.d/*.yml\n    reload.enabled: false\n  modules:\n    path: /usr/share/filebeat/modules.d/*.yml\n    reload.enabled: false\n\nfilebeat.autodiscover:\n  providers:\n    - type: docker\n      hints.enabled: true\n\nprocessors:\n- add_cloud_metadata: ~\n\noutput.elasticsearch:\n  hosts: ['10.0.1.232:9200']\n\nsetup.kibana:\n  host: \"10.0.1.232:5601\"\n\nEOF\n\nsudo docker run -d \\\n  --name=filebeat \\\n  --user=root \\\n  -v /opt/docker/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers:ro \\\n  -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n  docker.elastic.co/beats/filebeat:6.5.4 filebeat -e -strict.perms=false\n",
                            "template": "#!/usr/bin/env bash\n\n# Install Docker-ce\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\nsudo apt -qq update \u0026\u003e /dev/null\nsudo apt install -yqq apt-transport-https ca-certificates curl gnupg2 software-properties-common docker-ce \u0026\u003e /dev/null\n\n# Build \u0026 run the dummy container\nsudo mkdir /opt/docker\ncd /opt/docker\nsudo wget https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/Dockerfile\nsudo wget -O /opt/docker/my_dummy_exporter.py https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/my_dummy_exporter.py\nsudo docker build -t dummyapp .\nsudo docker run --name=dummyapp -v /opt/docker/my_dummy_exporter.py:/tmp/my_dummy_exporter.py -d -p 65433:65433 dummyapp\n\n# Register the dummy app in consul\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/dummy-65433.json\n{\n  \"service\": {\n    \"name\": \"dummy-65433\",\n    \"id\": \"dummy-65433\",\n    \"port\": 65433,\n    \"check\": {\n      \"name\": \"Port 65433 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:65433\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n\n# Build \u0026 run the filebeat container\ncat \u003c\u003c EOF | sudo tee /opt/docker/filebeat.yml\nfilebeat.config:\n  prospectors:\n    path: /usr/share/filebeat/prospectors.d/*.yml\n    reload.enabled: false\n  modules:\n    path: /usr/share/filebeat/modules.d/*.yml\n    reload.enabled: false\n\nfilebeat.autodiscover:\n  providers:\n    - type: docker\n      hints.enabled: true\n\nprocessors:\n- add_cloud_metadata: ~\n\noutput.elasticsearch:\n  hosts: ['${elk_priv_ip}:9200']\n\nsetup.kibana:\n  host: \"${elk_priv_ip}:5601\"\n\nEOF\n\nsudo docker run -d \\\n  --name=filebeat \\\n  --user=root \\\n  -v /opt/docker/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers:ro \\\n  -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n  docker.elastic.co/beats/filebeat:6.5.4 filebeat -e -strict.perms=false\n",
                            "vars.%": "1",
                            "vars.elk_priv_ip": "10.0.1.232"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.elk_install": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "4b7f0eac6ea562a7c2c47284b44895dfffff91a92c2792bf7bf096e184a0ae66",
                        "attributes": {
                            "id": "4b7f0eac6ea562a7c2c47284b44895dfffff91a92c2792bf7bf096e184a0ae66",
                            "rendered": "#!/bin/bash\n\n# Install ELK\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\nwget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -\necho \"deb https://artifacts.elastic.co/packages/6.x/apt stable main\" | sudo tee -a /etc/apt/sources.list.d/elastic-6.x.list\nsudo apt-get -qq update\nsudo apt-get install -y openjdk-8-jre-headless openjdk-8-jdk-headless\nsudo apt-get install -y elasticsearch logstash kibana\nsudo systemctl daemon-reload\nsudo systemctl enable elasticsearch logstash kibana\nsudo systemctl start elasticsearch logstash kibana\n\n# Configure Kibana\ncat \u003c\u003c EOF | sudo tee --append /etc/kibana/kibana.yml\n\nserver.name: kibana\nserver.host: \"0.0.0.0\"\nelasticsearch.url: \"http://localhost:9200\"\n\nEOF\n\nsudo systemctl restart kibana\n\n# Register in consul\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/elasticsearch-9200.json\n{\n  \"service\": {\n    \"name\": \"elasticsearch-9200\",\n    \"id\": \"elasticsearch-9200\",\n    \"port\": 9200,\n    \"check\": {\n      \"name\": \"Port 9200 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:9200/_cluster/health?pretty=true\"\n    }\n  }\n}\n\nEOF\n\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/kibana-5601.json\n{\n  \"service\": {\n    \"name\": \"kibana-5601\",\n    \"id\": \"kibana-5601\",\n    \"port\": 5601,\n    \"check\": {\n      \"name\": \"Port 5601 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:5601\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n",
                            "template": "#!/bin/bash\n\n# Install ELK\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\nwget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -\necho \"deb https://artifacts.elastic.co/packages/6.x/apt stable main\" | sudo tee -a /etc/apt/sources.list.d/elastic-6.x.list\nsudo apt-get -qq update\nsudo apt-get install -y openjdk-8-jre-headless openjdk-8-jdk-headless\nsudo apt-get install -y elasticsearch logstash kibana\nsudo systemctl daemon-reload\nsudo systemctl enable elasticsearch logstash kibana\nsudo systemctl start elasticsearch logstash kibana\n\n# Configure Kibana\ncat \u003c\u003c EOF | sudo tee --append /etc/kibana/kibana.yml\n\nserver.name: kibana\nserver.host: \"0.0.0.0\"\nelasticsearch.url: \"http://localhost:9200\"\n\nEOF\n\nsudo systemctl restart kibana\n\n# Register in consul\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/elasticsearch-9200.json\n{\n  \"service\": {\n    \"name\": \"elasticsearch-9200\",\n    \"id\": \"elasticsearch-9200\",\n    \"port\": 9200,\n    \"check\": {\n      \"name\": \"Port 9200 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:9200/_cluster/health?pretty=true\"\n    }\n  }\n}\n\nEOF\n\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/kibana-5601.json\n{\n  \"service\": {\n    \"name\": \"kibana-5601\",\n    \"id\": \"kibana-5601\",\n    \"port\": 5601,\n    \"check\": {\n      \"name\": \"Port 5601 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:5601\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                }
            },
            "depends_on": []
        }
    ]
}

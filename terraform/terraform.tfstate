{
    "version": 3,
    "terraform_version": "0.11.11",
    "serial": 21,
    "lineage": "d2e60b36-d1c9-0ca8-beea-59cd75ca4776",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {
                "Consul": {
                    "sensitive": false,
                    "type": "string",
                    "value": "http://184.73.60.110:8500"
                },
                "DummyExporterService1": {
                    "sensitive": false,
                    "type": "string",
                    "value": "curl http://3.89.121.56:65433"
                },
                "DummyExporterService2": {
                    "sensitive": false,
                    "type": "string",
                    "value": "curl http://3.88.219.251:65433"
                },
                "ElasticSearch": {
                    "sensitive": false,
                    "type": "string",
                    "value": "curl http://54.162.62.66:9200"
                },
                "Grafana": {
                    "sensitive": false,
                    "type": "string",
                    "value": "http://54.234.148.49:3000"
                },
                "Kibana": {
                    "sensitive": false,
                    "type": "string",
                    "value": "curl http://54.162.62.66:5601/app/infra#/logs"
                },
                "Prometheus": {
                    "sensitive": false,
                    "type": "string",
                    "value": "curl http://3.87.220.206:9090"
                }
            },
            "resources": {
                "aws_iam_instance_profile.consul_auto_join": {
                    "type": "aws_iam_instance_profile",
                    "depends_on": [
                        "aws_iam_role.consul_auto_join"
                    ],
                    "primary": {
                        "id": "consul_auto_join",
                        "attributes": {
                            "arn": "arn:aws:iam::230617609085:instance-profile/consul_auto_join",
                            "create_date": "2019-02-03T08:05:30Z",
                            "id": "consul_auto_join",
                            "name": "consul_auto_join",
                            "path": "/",
                            "role": "consul_auto_join",
                            "roles.#": "0",
                            "unique_id": "AIPAI5B7BNDBMJTWHBRHK"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_policy.consul_auto_join": {
                    "type": "aws_iam_policy",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:iam::230617609085:policy/consul_auto_join",
                        "attributes": {
                            "arn": "arn:aws:iam::230617609085:policy/consul_auto_join",
                            "description": "Allows Consul nodes to describe instances for joining",
                            "id": "arn:aws:iam::230617609085:policy/consul_auto_join",
                            "name": "consul_auto_join",
                            "path": "/",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:DescribeInstances\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_policy_attachment.consul_auto_join": {
                    "type": "aws_iam_policy_attachment",
                    "depends_on": [
                        "aws_iam_policy.consul_auto_join",
                        "aws_iam_role.consul_auto_join"
                    ],
                    "primary": {
                        "id": "consul_auto_join",
                        "attributes": {
                            "groups.#": "0",
                            "id": "consul_auto_join",
                            "name": "consul_auto_join",
                            "policy_arn": "arn:aws:iam::230617609085:policy/consul_auto_join",
                            "roles.#": "1",
                            "roles.4186901782": "consul_auto_join",
                            "users.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role.consul_auto_join": {
                    "type": "aws_iam_role",
                    "depends_on": [],
                    "primary": {
                        "id": "consul_auto_join",
                        "attributes": {
                            "arn": "arn:aws:iam::230617609085:role/consul_auto_join",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2019-02-03T08:05:28Z",
                            "description": "",
                            "force_detach_policies": "false",
                            "id": "consul_auto_join",
                            "max_session_duration": "3600",
                            "name": "consul_auto_join",
                            "path": "/",
                            "tags.%": "0",
                            "unique_id": "AROAIXRCZXPESV4Q6AZOE"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.consul_server.0": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.consul_auto_join",
                        "aws_security_group.sg_consul",
                        "aws_subnet.public_subnet1",
                        "data.template_file.consul_server.*"
                    ],
                    "primary": {
                        "id": "i-04bc493319bdc5975",
                        "attributes": {
                            "ami": "ami-0f9cf087c1f27d9b1",
                            "arn": "arn:aws:ec2:us-east-1:230617609085:instance/i-04bc493319bdc5975",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-east-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "1",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "consul_auto_join",
                            "id": "i-04bc493319bdc5975",
                            "instance_state": "running",
                            "instance_type": "t2.micro",
                            "ipv6_addresses.#": "0",
                            "key_name": "aws_ec2",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-07130ab4ad18cf780",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-07130ab4ad18cf780",
                            "private_dns": "ip-10-0-1-82.ec2.internal",
                            "private_ip": "10.0.1.82",
                            "public_dns": "ec2-184-73-60-110.compute-1.amazonaws.com",
                            "public_ip": "184.73.60.110",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-0bf87b3e0c73f0871",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-0c7856ef2f0c3fe28",
                            "tags.%": "2",
                            "tags.Name": "consul-server1",
                            "tags.consul_server": "true",
                            "tenancy": "default",
                            "user_data": "40157a2cd05a7414b1cbc5c7b2631b0cff60c2d3",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "1",
                            "vpc_security_group_ids.2864993921": "sg-08a20fb8a792b67a8"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.consul_server.1": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.consul_auto_join",
                        "aws_security_group.sg_consul",
                        "aws_subnet.public_subnet1",
                        "data.template_file.consul_server.*"
                    ],
                    "primary": {
                        "id": "i-038e427b5f20327fa",
                        "attributes": {
                            "ami": "ami-0f9cf087c1f27d9b1",
                            "arn": "arn:aws:ec2:us-east-1:230617609085:instance/i-038e427b5f20327fa",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-east-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "1",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "consul_auto_join",
                            "id": "i-038e427b5f20327fa",
                            "instance_state": "running",
                            "instance_type": "t2.micro",
                            "ipv6_addresses.#": "0",
                            "key_name": "aws_ec2",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-035ff4bda1ab6cc51",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-035ff4bda1ab6cc51",
                            "private_dns": "ip-10-0-1-152.ec2.internal",
                            "private_ip": "10.0.1.152",
                            "public_dns": "ec2-52-91-230-61.compute-1.amazonaws.com",
                            "public_ip": "52.91.230.61",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-0b7b7f77fab6ff034",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-0c7856ef2f0c3fe28",
                            "tags.%": "2",
                            "tags.Name": "consul-server2",
                            "tags.consul_server": "true",
                            "tenancy": "default",
                            "user_data": "2d9db0721b36db756ea585c6b153214731ee81c5",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "1",
                            "vpc_security_group_ids.2864993921": "sg-08a20fb8a792b67a8"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.consul_server.2": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.consul_auto_join",
                        "aws_security_group.sg_consul",
                        "aws_subnet.public_subnet1",
                        "data.template_file.consul_server.*"
                    ],
                    "primary": {
                        "id": "i-0779cdbc9c58f047c",
                        "attributes": {
                            "ami": "ami-0f9cf087c1f27d9b1",
                            "arn": "arn:aws:ec2:us-east-1:230617609085:instance/i-0779cdbc9c58f047c",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-east-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "1",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "consul_auto_join",
                            "id": "i-0779cdbc9c58f047c",
                            "instance_state": "running",
                            "instance_type": "t2.micro",
                            "ipv6_addresses.#": "0",
                            "key_name": "aws_ec2",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-01151b935526433aa",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-01151b935526433aa",
                            "private_dns": "ip-10-0-1-42.ec2.internal",
                            "private_ip": "10.0.1.42",
                            "public_dns": "ec2-54-237-225-158.compute-1.amazonaws.com",
                            "public_ip": "54.237.225.158",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-05b1f64880e2bc9d7",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-0c7856ef2f0c3fe28",
                            "tags.%": "2",
                            "tags.Name": "consul-server3",
                            "tags.consul_server": "true",
                            "tenancy": "default",
                            "user_data": "644ae34583652c2963c18c8716129ea2dfbc74cb",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "1",
                            "vpc_security_group_ids.2864993921": "sg-08a20fb8a792b67a8"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.docker_server.0": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.consul_auto_join",
                        "aws_instance.consul_server",
                        "aws_instance.elk",
                        "aws_instance.prometheus",
                        "aws_security_group.sg_consul",
                        "aws_security_group.sg_default",
                        "aws_subnet.public_subnet1",
                        "data.template_cloudinit_config.docker_server_config.*"
                    ],
                    "primary": {
                        "id": "i-0e52fbb95e7f33302",
                        "attributes": {
                            "ami": "ami-0f9cf087c1f27d9b1",
                            "arn": "arn:aws:ec2:us-east-1:230617609085:instance/i-0e52fbb95e7f33302",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-east-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "1",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "consul_auto_join",
                            "id": "i-0e52fbb95e7f33302",
                            "instance_state": "running",
                            "instance_type": "t2.micro",
                            "ipv6_addresses.#": "0",
                            "key_name": "aws_ec2",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-019867d6a82fc0c73",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-019867d6a82fc0c73",
                            "private_dns": "ip-10-0-1-211.ec2.internal",
                            "private_ip": "10.0.1.211",
                            "public_dns": "ec2-3-89-121-56.compute-1.amazonaws.com",
                            "public_ip": "3.89.121.56",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-01784997b47e8f508",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-0c7856ef2f0c3fe28",
                            "tags.%": "1",
                            "tags.Name": "docker-server1",
                            "tenancy": "default",
                            "user_data": "0bb6547388ff07f9b629dac4160d61da9a6eb034",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "2",
                            "vpc_security_group_ids.2864993921": "sg-08a20fb8a792b67a8",
                            "vpc_security_group_ids.3402693364": "sg-029cb0268e3f901ce"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.docker_server.1": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.consul_auto_join",
                        "aws_instance.consul_server",
                        "aws_instance.elk",
                        "aws_instance.prometheus",
                        "aws_security_group.sg_consul",
                        "aws_security_group.sg_default",
                        "aws_subnet.public_subnet1",
                        "data.template_cloudinit_config.docker_server_config.*"
                    ],
                    "primary": {
                        "id": "i-0f1f61565c920e2e0",
                        "attributes": {
                            "ami": "ami-0f9cf087c1f27d9b1",
                            "arn": "arn:aws:ec2:us-east-1:230617609085:instance/i-0f1f61565c920e2e0",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-east-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "1",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "consul_auto_join",
                            "id": "i-0f1f61565c920e2e0",
                            "instance_state": "running",
                            "instance_type": "t2.micro",
                            "ipv6_addresses.#": "0",
                            "key_name": "aws_ec2",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-06ed4825fcf0628d4",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-06ed4825fcf0628d4",
                            "private_dns": "ip-10-0-1-13.ec2.internal",
                            "private_ip": "10.0.1.13",
                            "public_dns": "ec2-3-88-219-251.compute-1.amazonaws.com",
                            "public_ip": "3.88.219.251",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-04a09aa404a2f7fac",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-0c7856ef2f0c3fe28",
                            "tags.%": "1",
                            "tags.Name": "docker-server2",
                            "tenancy": "default",
                            "user_data": "9eb0a22d4997c97ae2c84f4d1b6aeabe7869a008",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "2",
                            "vpc_security_group_ids.2864993921": "sg-08a20fb8a792b67a8",
                            "vpc_security_group_ids.3402693364": "sg-029cb0268e3f901ce"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.elk": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.consul_auto_join",
                        "aws_instance.consul_server",
                        "aws_security_group.sg_consul",
                        "aws_security_group.sg_default",
                        "aws_subnet.public_subnet1",
                        "data.template_cloudinit_config.elk_config"
                    ],
                    "primary": {
                        "id": "i-0a0163464884a8f2f",
                        "attributes": {
                            "ami": "ami-0f9cf087c1f27d9b1",
                            "arn": "arn:aws:ec2:us-east-1:230617609085:instance/i-0a0163464884a8f2f",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-east-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "2",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "unlimited",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "consul_auto_join",
                            "id": "i-0a0163464884a8f2f",
                            "instance_state": "running",
                            "instance_type": "t3.medium",
                            "ipv6_addresses.#": "0",
                            "key_name": "aws_ec2",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-04a49b725c277aab9",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-04a49b725c277aab9",
                            "private_dns": "ip-10-0-1-52.ec2.internal",
                            "private_ip": "10.0.1.52",
                            "public_dns": "ec2-54-162-62-66.compute-1.amazonaws.com",
                            "public_ip": "54.162.62.66",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-085e0ca977d424f49",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-0c7856ef2f0c3fe28",
                            "tags.%": "1",
                            "tags.Name": "elk",
                            "tenancy": "default",
                            "user_data": "de8400e023c46ebed267523310aa1869aa9d7a5e",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "2",
                            "vpc_security_group_ids.2864993921": "sg-08a20fb8a792b67a8",
                            "vpc_security_group_ids.3402693364": "sg-029cb0268e3f901ce"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.grafana": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.consul_auto_join",
                        "aws_instance.consul_server",
                        "aws_instance.prometheus",
                        "aws_security_group.sg_consul",
                        "aws_security_group.sg_default",
                        "aws_subnet.public_subnet1",
                        "data.template_cloudinit_config.grafana_config"
                    ],
                    "primary": {
                        "id": "i-002040c3e79d7ef47",
                        "attributes": {
                            "ami": "ami-0f9cf087c1f27d9b1",
                            "arn": "arn:aws:ec2:us-east-1:230617609085:instance/i-002040c3e79d7ef47",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-east-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "1",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "consul_auto_join",
                            "id": "i-002040c3e79d7ef47",
                            "instance_state": "running",
                            "instance_type": "t2.micro",
                            "ipv6_addresses.#": "0",
                            "key_name": "aws_ec2",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-0a04755b5adaf18e3",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-0a04755b5adaf18e3",
                            "private_dns": "ip-10-0-1-182.ec2.internal",
                            "private_ip": "10.0.1.182",
                            "public_dns": "ec2-54-234-148-49.compute-1.amazonaws.com",
                            "public_ip": "54.234.148.49",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-00e32d34646f047d2",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-0c7856ef2f0c3fe28",
                            "tags.%": "1",
                            "tags.Name": "grafana",
                            "tenancy": "default",
                            "user_data": "f8102ec4bc814a180fa6108f64827d4655cb6696",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "2",
                            "vpc_security_group_ids.2864993921": "sg-08a20fb8a792b67a8",
                            "vpc_security_group_ids.3402693364": "sg-029cb0268e3f901ce"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.prometheus": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.consul_auto_join",
                        "aws_instance.consul_server",
                        "aws_security_group.sg_consul",
                        "aws_security_group.sg_default",
                        "aws_subnet.public_subnet1",
                        "data.template_cloudinit_config.prometheus_config"
                    ],
                    "primary": {
                        "id": "i-0a2a7ffa4338657f5",
                        "attributes": {
                            "ami": "ami-0f9cf087c1f27d9b1",
                            "arn": "arn:aws:ec2:us-east-1:230617609085:instance/i-0a2a7ffa4338657f5",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-east-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "1",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "consul_auto_join",
                            "id": "i-0a2a7ffa4338657f5",
                            "instance_state": "running",
                            "instance_type": "t2.micro",
                            "ipv6_addresses.#": "0",
                            "key_name": "aws_ec2",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-06c4b5de48665f64b",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-06c4b5de48665f64b",
                            "private_dns": "ip-10-0-1-88.ec2.internal",
                            "private_ip": "10.0.1.88",
                            "public_dns": "ec2-3-87-220-206.compute-1.amazonaws.com",
                            "public_ip": "3.87.220.206",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-0585f876dfa555354",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-0c7856ef2f0c3fe28",
                            "tags.%": "1",
                            "tags.Name": "prometheus",
                            "tenancy": "default",
                            "user_data": "6bae9728de3f18645f5433e32a52af3bc3abd47c",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "2",
                            "vpc_security_group_ids.2864993921": "sg-08a20fb8a792b67a8",
                            "vpc_security_group_ids.3402693364": "sg-029cb0268e3f901ce"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_internet_gateway.igw": {
                    "type": "aws_internet_gateway",
                    "depends_on": [
                        "aws_vpc.MyVPC"
                    ],
                    "primary": {
                        "id": "igw-03aef6345e88371f3",
                        "attributes": {
                            "id": "igw-03aef6345e88371f3",
                            "owner_id": "230617609085",
                            "tags.%": "0",
                            "vpc_id": "vpc-0ba450a0420b927b3"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_route_table.rtb_public": {
                    "type": "aws_route_table",
                    "depends_on": [
                        "aws_internet_gateway.igw",
                        "aws_vpc.MyVPC"
                    ],
                    "primary": {
                        "id": "rtb-00a2540575799062e",
                        "attributes": {
                            "id": "rtb-00a2540575799062e",
                            "owner_id": "230617609085",
                            "propagating_vgws.#": "0",
                            "route.#": "1",
                            "route.3440319716.cidr_block": "0.0.0.0/0",
                            "route.3440319716.egress_only_gateway_id": "",
                            "route.3440319716.gateway_id": "igw-03aef6345e88371f3",
                            "route.3440319716.instance_id": "",
                            "route.3440319716.ipv6_cidr_block": "",
                            "route.3440319716.nat_gateway_id": "",
                            "route.3440319716.network_interface_id": "",
                            "route.3440319716.transit_gateway_id": "",
                            "route.3440319716.vpc_peering_connection_id": "",
                            "tags.%": "1",
                            "tags.Name": "rtb_public",
                            "vpc_id": "vpc-0ba450a0420b927b3"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_route_table_association.rta-public_subnet1": {
                    "type": "aws_route_table_association",
                    "depends_on": [
                        "aws_route_table.rtb_public",
                        "aws_subnet.public_subnet1"
                    ],
                    "primary": {
                        "id": "rtbassoc-01b851f960e4ef0af",
                        "attributes": {
                            "id": "rtbassoc-01b851f960e4ef0af",
                            "route_table_id": "rtb-00a2540575799062e",
                            "subnet_id": "subnet-0c7856ef2f0c3fe28"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group.sg_consul": {
                    "type": "aws_security_group",
                    "depends_on": [
                        "aws_vpc.MyVPC"
                    ],
                    "primary": {
                        "id": "sg-08a20fb8a792b67a8",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:230617609085:security-group/sg-08a20fb8a792b67a8",
                            "description": "Allow ssh \u0026 consul inbound traffic",
                            "egress.#": "1",
                            "egress.2049434831.cidr_blocks.#": "1",
                            "egress.2049434831.cidr_blocks.0": "0.0.0.0/0",
                            "egress.2049434831.description": "Allow all outside security group",
                            "egress.2049434831.from_port": "0",
                            "egress.2049434831.ipv6_cidr_blocks.#": "0",
                            "egress.2049434831.prefix_list_ids.#": "0",
                            "egress.2049434831.protocol": "-1",
                            "egress.2049434831.security_groups.#": "0",
                            "egress.2049434831.self": "false",
                            "egress.2049434831.to_port": "0",
                            "id": "sg-08a20fb8a792b67a8",
                            "ingress.#": "3",
                            "ingress.3406622939.cidr_blocks.#": "1",
                            "ingress.3406622939.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.3406622939.description": "Allow consul UI access from the world",
                            "ingress.3406622939.from_port": "8500",
                            "ingress.3406622939.ipv6_cidr_blocks.#": "0",
                            "ingress.3406622939.prefix_list_ids.#": "0",
                            "ingress.3406622939.protocol": "tcp",
                            "ingress.3406622939.security_groups.#": "0",
                            "ingress.3406622939.self": "false",
                            "ingress.3406622939.to_port": "8500",
                            "ingress.4044943731.cidr_blocks.#": "1",
                            "ingress.4044943731.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.4044943731.description": "Allow ssh from the world",
                            "ingress.4044943731.from_port": "22",
                            "ingress.4044943731.ipv6_cidr_blocks.#": "0",
                            "ingress.4044943731.prefix_list_ids.#": "0",
                            "ingress.4044943731.protocol": "tcp",
                            "ingress.4044943731.security_groups.#": "0",
                            "ingress.4044943731.self": "false",
                            "ingress.4044943731.to_port": "22",
                            "ingress.994307033.cidr_blocks.#": "0",
                            "ingress.994307033.description": "Allow all inside security group",
                            "ingress.994307033.from_port": "0",
                            "ingress.994307033.ipv6_cidr_blocks.#": "0",
                            "ingress.994307033.prefix_list_ids.#": "0",
                            "ingress.994307033.protocol": "-1",
                            "ingress.994307033.security_groups.#": "0",
                            "ingress.994307033.self": "true",
                            "ingress.994307033.to_port": "0",
                            "name": "sg_consul",
                            "owner_id": "230617609085",
                            "revoke_rules_on_delete": "false",
                            "tags.%": "0",
                            "vpc_id": "vpc-0ba450a0420b927b3"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group.sg_default": {
                    "type": "aws_security_group",
                    "depends_on": [
                        "aws_vpc.MyVPC"
                    ],
                    "primary": {
                        "id": "sg-029cb0268e3f901ce",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:230617609085:security-group/sg-029cb0268e3f901ce",
                            "description": "Managed by Terraform",
                            "egress.#": "1",
                            "egress.482069346.cidr_blocks.#": "1",
                            "egress.482069346.cidr_blocks.0": "0.0.0.0/0",
                            "egress.482069346.description": "",
                            "egress.482069346.from_port": "0",
                            "egress.482069346.ipv6_cidr_blocks.#": "0",
                            "egress.482069346.prefix_list_ids.#": "0",
                            "egress.482069346.protocol": "-1",
                            "egress.482069346.security_groups.#": "0",
                            "egress.482069346.self": "false",
                            "egress.482069346.to_port": "0",
                            "id": "sg-029cb0268e3f901ce",
                            "ingress.#": "11",
                            "ingress.1746620816.cidr_blocks.#": "1",
                            "ingress.1746620816.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.1746620816.description": "",
                            "ingress.1746620816.from_port": "9100",
                            "ingress.1746620816.ipv6_cidr_blocks.#": "0",
                            "ingress.1746620816.prefix_list_ids.#": "0",
                            "ingress.1746620816.protocol": "tcp",
                            "ingress.1746620816.security_groups.#": "0",
                            "ingress.1746620816.self": "false",
                            "ingress.1746620816.to_port": "9100",
                            "ingress.1994621032.cidr_blocks.#": "1",
                            "ingress.1994621032.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.1994621032.description": "",
                            "ingress.1994621032.from_port": "3000",
                            "ingress.1994621032.ipv6_cidr_blocks.#": "0",
                            "ingress.1994621032.prefix_list_ids.#": "0",
                            "ingress.1994621032.protocol": "tcp",
                            "ingress.1994621032.security_groups.#": "0",
                            "ingress.1994621032.self": "false",
                            "ingress.1994621032.to_port": "3000",
                            "ingress.2214680975.cidr_blocks.#": "1",
                            "ingress.2214680975.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2214680975.description": "",
                            "ingress.2214680975.from_port": "80",
                            "ingress.2214680975.ipv6_cidr_blocks.#": "0",
                            "ingress.2214680975.prefix_list_ids.#": "0",
                            "ingress.2214680975.protocol": "tcp",
                            "ingress.2214680975.security_groups.#": "0",
                            "ingress.2214680975.self": "false",
                            "ingress.2214680975.to_port": "80",
                            "ingress.2319052179.cidr_blocks.#": "1",
                            "ingress.2319052179.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2319052179.description": "",
                            "ingress.2319052179.from_port": "9000",
                            "ingress.2319052179.ipv6_cidr_blocks.#": "0",
                            "ingress.2319052179.prefix_list_ids.#": "0",
                            "ingress.2319052179.protocol": "tcp",
                            "ingress.2319052179.security_groups.#": "0",
                            "ingress.2319052179.self": "false",
                            "ingress.2319052179.to_port": "9000",
                            "ingress.2500694996.cidr_blocks.#": "1",
                            "ingress.2500694996.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2500694996.description": "",
                            "ingress.2500694996.from_port": "9200",
                            "ingress.2500694996.ipv6_cidr_blocks.#": "0",
                            "ingress.2500694996.prefix_list_ids.#": "0",
                            "ingress.2500694996.protocol": "tcp",
                            "ingress.2500694996.security_groups.#": "0",
                            "ingress.2500694996.self": "false",
                            "ingress.2500694996.to_port": "9200",
                            "ingress.2541437006.cidr_blocks.#": "1",
                            "ingress.2541437006.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2541437006.description": "",
                            "ingress.2541437006.from_port": "22",
                            "ingress.2541437006.ipv6_cidr_blocks.#": "0",
                            "ingress.2541437006.prefix_list_ids.#": "0",
                            "ingress.2541437006.protocol": "tcp",
                            "ingress.2541437006.security_groups.#": "0",
                            "ingress.2541437006.self": "false",
                            "ingress.2541437006.to_port": "22",
                            "ingress.2937129820.cidr_blocks.#": "1",
                            "ingress.2937129820.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2937129820.description": "",
                            "ingress.2937129820.from_port": "5044",
                            "ingress.2937129820.ipv6_cidr_blocks.#": "0",
                            "ingress.2937129820.prefix_list_ids.#": "0",
                            "ingress.2937129820.protocol": "tcp",
                            "ingress.2937129820.security_groups.#": "0",
                            "ingress.2937129820.self": "false",
                            "ingress.2937129820.to_port": "5044",
                            "ingress.3431095222.cidr_blocks.#": "1",
                            "ingress.3431095222.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.3431095222.description": "",
                            "ingress.3431095222.from_port": "5601",
                            "ingress.3431095222.ipv6_cidr_blocks.#": "0",
                            "ingress.3431095222.prefix_list_ids.#": "0",
                            "ingress.3431095222.protocol": "tcp",
                            "ingress.3431095222.security_groups.#": "0",
                            "ingress.3431095222.self": "false",
                            "ingress.3431095222.to_port": "5601",
                            "ingress.476094592.cidr_blocks.#": "1",
                            "ingress.476094592.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.476094592.description": "",
                            "ingress.476094592.from_port": "65433",
                            "ingress.476094592.ipv6_cidr_blocks.#": "0",
                            "ingress.476094592.prefix_list_ids.#": "0",
                            "ingress.476094592.protocol": "tcp",
                            "ingress.476094592.security_groups.#": "0",
                            "ingress.476094592.self": "false",
                            "ingress.476094592.to_port": "65433",
                            "ingress.501830036.cidr_blocks.#": "1",
                            "ingress.501830036.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.501830036.description": "",
                            "ingress.501830036.from_port": "9090",
                            "ingress.501830036.ipv6_cidr_blocks.#": "0",
                            "ingress.501830036.prefix_list_ids.#": "0",
                            "ingress.501830036.protocol": "tcp",
                            "ingress.501830036.security_groups.#": "0",
                            "ingress.501830036.self": "false",
                            "ingress.501830036.to_port": "9090",
                            "ingress.516175195.cidr_blocks.#": "1",
                            "ingress.516175195.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.516175195.description": "",
                            "ingress.516175195.from_port": "8080",
                            "ingress.516175195.ipv6_cidr_blocks.#": "0",
                            "ingress.516175195.prefix_list_ids.#": "0",
                            "ingress.516175195.protocol": "tcp",
                            "ingress.516175195.security_groups.#": "0",
                            "ingress.516175195.self": "false",
                            "ingress.516175195.to_port": "8080",
                            "name": "sg_default",
                            "owner_id": "230617609085",
                            "revoke_rules_on_delete": "false",
                            "tags.%": "0",
                            "vpc_id": "vpc-0ba450a0420b927b3"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_subnet.public_subnet1": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.MyVPC",
                        "data.aws_availability_zones.available"
                    ],
                    "primary": {
                        "id": "subnet-0c7856ef2f0c3fe28",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:230617609085:subnet/subnet-0c7856ef2f0c3fe28",
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-east-1a",
                            "availability_zone_id": "use1-az2",
                            "cidr_block": "10.0.1.0/24",
                            "id": "subnet-0c7856ef2f0c3fe28",
                            "ipv6_cidr_block": "",
                            "ipv6_cidr_block_association_id": "",
                            "map_public_ip_on_launch": "true",
                            "owner_id": "230617609085",
                            "tags.%": "1",
                            "tags.Name": "public_subnet1",
                            "vpc_id": "vpc-0ba450a0420b927b3"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_vpc.MyVPC": {
                    "type": "aws_vpc",
                    "depends_on": [],
                    "primary": {
                        "id": "vpc-0ba450a0420b927b3",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:230617609085:vpc/vpc-0ba450a0420b927b3",
                            "assign_generated_ipv6_cidr_block": "false",
                            "cidr_block": "10.0.0.0/16",
                            "default_network_acl_id": "acl-067ee65295ba0aef0",
                            "default_route_table_id": "rtb-0c21bc157618fc4f1",
                            "default_security_group_id": "sg-0935ce84895b283ae",
                            "dhcp_options_id": "dopt-e3c88598",
                            "enable_classiclink": "false",
                            "enable_classiclink_dns_support": "false",
                            "enable_dns_hostnames": "true",
                            "enable_dns_support": "true",
                            "id": "vpc-0ba450a0420b927b3",
                            "instance_tenancy": "default",
                            "ipv6_association_id": "",
                            "ipv6_cidr_block": "",
                            "main_route_table_id": "rtb-0c21bc157618fc4f1",
                            "owner_id": "230617609085",
                            "tags.%": "1",
                            "tags.Name": "MyVPC"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "data.aws_availability_zones.available": {
                    "type": "aws_availability_zones",
                    "depends_on": [],
                    "primary": {
                        "id": "2019-02-03 08:05:23.23990747 +0000 UTC",
                        "attributes": {
                            "id": "2019-02-03 08:05:23.23990747 +0000 UTC",
                            "names.#": "6",
                            "names.0": "us-east-1a",
                            "names.1": "us-east-1b",
                            "names.2": "us-east-1c",
                            "names.3": "us-east-1d",
                            "names.4": "us-east-1e",
                            "names.5": "us-east-1f",
                            "zone_ids.#": "6",
                            "zone_ids.0": "use1-az2",
                            "zone_ids.1": "use1-az4",
                            "zone_ids.2": "use1-az6",
                            "zone_ids.3": "use1-az1",
                            "zone_ids.4": "use1-az3",
                            "zone_ids.5": "use1-az5"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "data.template_cloudinit_config.docker_server_config.0": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.consul_client_docker.*",
                        "data.template_file.docker_install"
                    ],
                    "primary": {
                        "id": "735971959",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "735971959",
                            "part.#": "2",
                            "part.0.content": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"docker-server1\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "part.0.content_type": "",
                            "part.0.filename": "",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/usr/bin/env bash\n\n# Install Docker-ce\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\nsudo apt -qq update \u0026\u003e /dev/null\nsudo apt install -yqq apt-transport-https ca-certificates curl gnupg2 software-properties-common docker-ce \u0026\u003e /dev/null\n\n\n# Build \u0026 run the dummy container\nsudo mkdir /opt/docker\ncd /opt/docker\nsudo wget https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/Dockerfile\nsudo wget -O /opt/docker/my_dummy_exporter.py https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/my_dummy_exporter.py\nsudo docker build -t dummyapp .\nsudo docker run --name=dummyapp -v /opt/docker/my_dummy_exporter.py:/tmp/my_dummy_exporter.py -d -p 65433:65433 dummyapp\n\n\n# Register the dummy app in consul\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/dummy-65433.json\n{\n  \"service\": {\n    \"name\": \"dummy-65433\",\n    \"id\": \"dummy-65433\",\n    \"port\": 65433,\n    \"check\": {\n      \"name\": \"dummy_app port 65433 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:65433\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n\n\n# Build \u0026 run the filebeat container\ncat \u003c\u003c EOF | sudo tee /opt/docker/filebeat.yml\nfilebeat.config:\n  prospectors:\n    path: /usr/share/filebeat/prospectors.d/*.yml\n    reload.enabled: false\n  modules:\n    path: /usr/share/filebeat/modules.d/*.yml\n    reload.enabled: false\n\nfilebeat.autodiscover:\n  providers:\n    - type: docker\n      hints.enabled: true\n\nprocessors:\n- add_cloud_metadata: ~\n\n#output.elasticsearch:\n#  hosts: [\"10.0.1.52:9200\"]\n\noutput.logstash:\n  hosts: [\"10.0.1.52:5044\"]\n\nsetup.kibana:\n  host: \"10.0.1.52:5601\"\n\nEOF\n\n\nsudo docker run -d \\\n  --name=filebeat \\\n  --user=root \\\n  -v /opt/docker/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers:ro \\\n  -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n  docker.elastic.co/beats/filebeat:6.5.4 filebeat -e -strict.perms=false\n",
                            "part.1.content_type": "",
                            "part.1.filename": "",
                            "part.1.merge_type": "",
                            "rendered": "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"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_cloudinit_config.docker_server_config.1": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.consul_client_docker.*",
                        "data.template_file.docker_install"
                    ],
                    "primary": {
                        "id": "1552235943",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "1552235943",
                            "part.#": "2",
                            "part.0.content": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"docker-server2\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "part.0.content_type": "",
                            "part.0.filename": "",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/usr/bin/env bash\n\n# Install Docker-ce\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\nsudo apt -qq update \u0026\u003e /dev/null\nsudo apt install -yqq apt-transport-https ca-certificates curl gnupg2 software-properties-common docker-ce \u0026\u003e /dev/null\n\n\n# Build \u0026 run the dummy container\nsudo mkdir /opt/docker\ncd /opt/docker\nsudo wget https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/Dockerfile\nsudo wget -O /opt/docker/my_dummy_exporter.py https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/my_dummy_exporter.py\nsudo docker build -t dummyapp .\nsudo docker run --name=dummyapp -v /opt/docker/my_dummy_exporter.py:/tmp/my_dummy_exporter.py -d -p 65433:65433 dummyapp\n\n\n# Register the dummy app in consul\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/dummy-65433.json\n{\n  \"service\": {\n    \"name\": \"dummy-65433\",\n    \"id\": \"dummy-65433\",\n    \"port\": 65433,\n    \"check\": {\n      \"name\": \"dummy_app port 65433 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:65433\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n\n\n# Build \u0026 run the filebeat container\ncat \u003c\u003c EOF | sudo tee /opt/docker/filebeat.yml\nfilebeat.config:\n  prospectors:\n    path: /usr/share/filebeat/prospectors.d/*.yml\n    reload.enabled: false\n  modules:\n    path: /usr/share/filebeat/modules.d/*.yml\n    reload.enabled: false\n\nfilebeat.autodiscover:\n  providers:\n    - type: docker\n      hints.enabled: true\n\nprocessors:\n- add_cloud_metadata: ~\n\n#output.elasticsearch:\n#  hosts: [\"10.0.1.52:9200\"]\n\noutput.logstash:\n  hosts: [\"10.0.1.52:5044\"]\n\nsetup.kibana:\n  host: \"10.0.1.52:5601\"\n\nEOF\n\n\nsudo docker run -d \\\n  --name=filebeat \\\n  --user=root \\\n  -v /opt/docker/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers:ro \\\n  -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n  docker.elastic.co/beats/filebeat:6.5.4 filebeat -e -strict.perms=false\n",
                            "part.1.content_type": "",
                            "part.1.filename": "",
                            "part.1.merge_type": "",
                            "rendered": "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"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_cloudinit_config.elk_config": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.consul_client_elk"
                    ],
                    "primary": {
                        "id": "3992830545",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "3992830545",
                            "part.#": "2",
                            "part.0.content": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"elk\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "part.0.content_type": "",
                            "part.0.filename": "",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n\n# Install ELK\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\nwget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -\necho \"deb https://artifacts.elastic.co/packages/6.x/apt stable main\" | sudo tee -a /etc/apt/sources.list.d/elastic-6.x.list\nsudo apt-get -qq update\nsudo apt-get install -y openjdk-8-jre-headless openjdk-8-jdk-headless\nsudo apt-get install -y elasticsearch logstash kibana\nsudo systemctl daemon-reload\nsudo systemctl enable elasticsearch logstash kibana\nsudo systemctl start elasticsearch logstash kibana\n\n\n# Configure LogStash\ncat \u003c\u003c EOF | sudo tee /etc/logstash/conf.d/demo-metrics-pipeline.conf\ninput {\n  beats {\n    port =\u003e 5044\n  }\n}\n\n# The filter part of this file is commented out to indicate that it\n# is optional.\n# filter {\n#\n# }\n\noutput {\n  elasticsearch {\n    hosts =\u003e \"localhost:9200\"\n    manage_template =\u003e false\n    index =\u003e \"%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}\"\n  }\n}\n\nEOF\n\n\n# Configure Kibana\ncat \u003c\u003c EOF | sudo tee --append /etc/kibana/kibana.yml\n\nserver.name: kibana\nserver.host: \"0.0.0.0\"\nelasticsearch.url: \"http://localhost:9200\"\n\nEOF\n\nsudo systemctl restart kibana\n\n\n# Register in consul\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/elasticsearch-9200.json\n{\n  \"service\": {\n    \"name\": \"elasticsearch-9200\",\n    \"id\": \"elasticsearch-9200\",\n    \"port\": 9200,\n    \"check\": {\n      \"name\": \"elasticsearch port 9200 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:9200/_cluster/health?pretty=true\"\n    }\n  }\n}\n\nEOF\n\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/kibana-5601.json\n{\n  \"service\": {\n    \"name\": \"kibana-5601\",\n    \"id\": \"kibana-5601\",\n    \"port\": 5601,\n    \"check\": {\n      \"name\": \"kibana port 5601 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:5601\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n",
                            "part.1.content_type": "",
                            "part.1.filename": "",
                            "part.1.merge_type": "",
                            "rendered": "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"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_cloudinit_config.grafana_config": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.consul_client_grafana",
                        "data.template_file.grafana_install"
                    ],
                    "primary": {
                        "id": "2754736157",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "2754736157",
                            "part.#": "2",
                            "part.0.content": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"grafana\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "part.0.content_type": "",
                            "part.0.filename": "",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n\n# Install Grafana\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\necho \"deb https://packages.grafana.com/oss/deb stable main\" \u003e /etc/apt/sources.list.d/grafana.list\ncurl https://packages.grafana.com/gpg.key | sudo apt-key add -\nsudo apt -qq update\nsudo apt install -y grafana\nsudo systemctl enable grafana-server.service\n\nsudo sed -i 's/;admin_user = admin/admin_user = admin/g' /etc/grafana/grafana.ini\nsudo sed -i 's/;admin_password = admin/admin_password = admin/g' /etc/grafana/grafana.ini\n\ncat \u003c\u003c EOF | sudo tee /etc/grafana/provisioning/datasources/datasource.yml\napiVersion: 1\ndatasources:\n - name: Prometheus\n   type: prometheus\n   access: proxy\n   orgId: 1\n   url: http://10.0.1.88:9090\n   isDefault: true\n   version: 1\neditable: false\nEOF\n\ncat \u003c\u003c EOF | sudo tee /etc/grafana/provisioning/dashboards/all.yml\napiVersion: 1\n\nproviders:\n- name: 'default'\n  orgId: 1\n  folder: ''\n  type: file\n  disableDeletion: false\n  updateIntervalSeconds: 10 #how often Grafana will scan for changed dashboards\n  options:\n    path: /var/lib/grafana/dashboards\nEOF\n\nsudo mkdir /var/lib/grafana/dashboards\ncat \u003c\u003c EOF | sudo tee /var/lib/grafana/dashboards/Dummy_Exporter_Request_Count.json\n{\n  \"annotations\": {\n    \"list\": [\n      {\n        \"builtIn\": 1,\n        \"datasource\": \"-- Grafana --\",\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations \u0026 Alerts\",\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"editable\": true,\n  \"gnetId\": null,\n  \"graphTooltip\": 0,\n  \"id\": 1,\n  \"links\": [],\n  \"panels\": [\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"fill\": 1,\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 2,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"rate(DummyService_requests[2m])\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"# of requests per sec\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    }\n  ],\n  \"schemaVersion\": 16,\n  \"style\": \"dark\",\n  \"tags\": [],\n  \"templating\": {\n    \"list\": []\n  },\n  \"time\": {\n    \"from\": \"now-15m\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n      \"5s\",\n      \"10s\",\n      \"30s\",\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"1d\"\n    ],\n    \"time_options\": [\n      \"5m\",\n      \"15m\",\n      \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\",\n      \"2d\",\n      \"7d\",\n      \"30d\"\n    ]\n  },\n  \"timezone\": \"\",\n  \"title\": \"Dummy Exporter Request Count\",\n  \"uid\": \"MX74Y8Qik\",\n  \"version\": 2\n}\n\nEOF\n\nsudo systemctl restart grafana-server\n\n# Register Grafana in consul\ncat \u003c\u003c EOF | sudo tee  /etc/consul.d/grafana-3000.json\n{\n  \"service\": {\n    \"name\": \"grafana-3000\",\n    \"id\": \"grafana-3000\",\n    \"port\": 3000,\n    \"check\": {\n      \"name\": \"grafana port 3000 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:3000\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n",
                            "part.1.content_type": "",
                            "part.1.filename": "",
                            "part.1.merge_type": "",
                            "rendered": "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"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_cloudinit_config.prometheus_config": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.consul_client_prometheus"
                    ],
                    "primary": {
                        "id": "625500804",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "625500804",
                            "part.#": "2",
                            "part.0.content": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"prometheus\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "part.0.content_type": "",
                            "part.0.filename": "",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\nsudo apt -qq update\nsudo apt-get install -y prometheus\ncat \u003c\u003c EOF | sudo tee --append /etc/prometheus/prometheus.yml\n\n  - job_name: 'consul'\n    scrape_interval: 5s\n    consul_sd_configs:\n      - datacenter: opsschool\n        server: 'localhost:8500'\n\nEOF\nsudo systemctl restart prometheus\n\n# Register Prometheus in consul\ncat \u003c\u003c EOF | sudo tee  /etc/consul.d/prometheus-9090.json\n{\n  \"service\": {\n    \"name\": \"prometheus-9090\",\n    \"id\": \"prometheus-9090\",\n    \"port\": 9090,\n    \"check\": {\n      \"name\": \"prometheus port 9090 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:9090\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n",
                            "part.1.content_type": "",
                            "part.1.filename": "",
                            "part.1.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/7xWf08bPRL+3xLfYW6p4E7veRd68N6xx1aiELiopUQJtFchtHLWk8TFay+2N5Dr9buf7N3Nr9L780VCiWcez4w9j5/JuVYOlaO3iwpTKGvpRMWMS0rxgvyfMNa14swssui6f917f3P36eJs+DUifkU/o7FCqxQO44MdskMoXQftkGVsw5SdoKE9VWgu1DSFv4+FWwOE5A5fXFJJJtQOuRYl/hR/909JbU0yFipBNYcxszNi0QFFQrCYaYiuDBuPhZpCf2DjOI7IYNj/fHbby/uD7M2fi9pImDlXpUly+PtJ/Pb4KG4/E8kcWpeU6BjlzLFE6oJJKqr50V+66H1lHZPSx+dYoeKoCoFNIltzDaxydOoLenqCuuLMIey9SzjOE1VLuYVZPD2BaCJCrf4jqg1sm/ISXTHzCc+1srUMqQoOiSsrEo5D7UcNReP0MfzxbJokBiUyizaeMTsThTZVXOgyaZDJYXwUH7SLPCxyKVT9krOS/37kA71y5rUSmnrX0m6fspiVmsNvLy2mMZbzdgmhj+GGQzdbENmFEbq6ajO1mx65MEArSHTlkuJVD7qi9cR822dqtbHLIW5u8F8mYhp/s1rBO1geBE5PezeX5DsBiBifo3HCYs44N1EK0ZsVs6K/eognTc5FcK6VunIWqBwGt66sLWZat05UhVlUznvqi/efj/C3j+PLL387ODz5+mHw0jfTLGujCMvGEnODpXaY4wsWUQrO1LjhbpiXFzMsHtf9Etkcc61yh6YUijlc9xp0ZpF/00JFKdxHldFzwdFk7NmCY9P8ERdZSxiLZo4mWOdM1pj5INGDDxP+IqU55oqVPoGPVKKbYW2jFhGhCoXawojKNYXatVo8pMkRpTBh0mIwkh/EN4TswrlB/7Zqiwb2YGqYcqCfFRo7ExXoCUy05Ghs03EPY5xvULGY6WcFdNga046Xq8ZtkmSDR6GEQJraYEdpX7AocItkdmEdlrz97MK12C22Rb2by4jc3ynhHsgFNrcjtMrONzIAF7bQczQLYFNUjgzxqRYGbabQPWvzSLWSQmHsmJmiI2cTh6bzdUZyP2qiPZA7i6btLLkyuq66xaB/cSkkZmtH7w5QCU6GaB0zLtOKTpiQtUHSU3NhtCpRuezq5vrs34Phzfkoe0t6L1iMPHpgMLsHOoHo9agRPMDeHix13pQe/IsKllGzV/WkuR6gleB08uuDAG0EgHJhsk0p8QmGKDXjWYj7KKRXXPjX3QDeXJ/1Pw36F+SDkHIkporJbNS/6n+6JbeiRF27kdPVCIvsmJD7VkYfyBemHPL3iyyMWuq52fUkkDvQp2FL4SRwhqVW1IQitp3NM4JNUm2DQpO2MX/IrPY3FmZ0WxJyoAL2bVJbisw6ehhj8TZOkul+81hY5RKra1OgjaWwbjkw1wbq5hDt5iddwEpmSMEcnJ5C7+YS/gvL90gpq/zQbnKt4Gtf40UpCQGg8E2Pg4ClsN9c3X6QIFsYVmEuvJLPmUzh2AZ7J4w8b7hk01YLKaykP4Wl8HdKCY3MpbAfyDvT1qX/OD442CeBDVutNM2LWz8q2YUhToV1aGCwNINQndq9fhdbE3AVkJ4cnByEUdgMvpYwUQrfSSPtP6l62NJKeyT4/3FW2vgp502tpZtR30k3OX4KD35X2BN+20CzpZs1UdcKv+nYruwe623tz73V9YaCAuoH8f8/yKsPr3lx3S1uvxdKd8j/AgAA///0uvtCOgsAAA=="
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.consul_client_docker.0": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "b8caa6e15c5c801d871e639860edd54f68d4bfa0ce17036c34f65aab9f382972",
                        "attributes": {
                            "id": "b8caa6e15c5c801d871e639860edd54f68d4bfa0ce17036c34f65aab9f382972",
                            "rendered": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"docker-server1\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "template": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/${consul_version}/consul_${consul_version}_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n  ${config}\n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "vars.%": "2",
                            "vars.config": "     \"node_name\": \"docker-server1\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    ",
                            "vars.consul_version": "1.4.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.consul_client_docker.1": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "884cb8bf8d43f835817514cd2d4852b50aab7cf8d0fffa1721e561fb10f8ebb2",
                        "attributes": {
                            "id": "884cb8bf8d43f835817514cd2d4852b50aab7cf8d0fffa1721e561fb10f8ebb2",
                            "rendered": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"docker-server2\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "template": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/${consul_version}/consul_${consul_version}_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n  ${config}\n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "vars.%": "2",
                            "vars.config": "     \"node_name\": \"docker-server2\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    ",
                            "vars.consul_version": "1.4.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.consul_client_elk": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "3099c127306cea5361736e8ca77f9c4a5cb670548bc9201a8fea86cb58329b19",
                        "attributes": {
                            "id": "3099c127306cea5361736e8ca77f9c4a5cb670548bc9201a8fea86cb58329b19",
                            "rendered": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"elk\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "template": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/${consul_version}/consul_${consul_version}_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n  ${config}\n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "vars.%": "2",
                            "vars.config": "     \"node_name\": \"elk\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    ",
                            "vars.consul_version": "1.4.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.consul_client_grafana": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "3a819ad4966e5681e57df2c49204846999a883604000b838660a42fb2d3fe8ab",
                        "attributes": {
                            "id": "3a819ad4966e5681e57df2c49204846999a883604000b838660a42fb2d3fe8ab",
                            "rendered": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"grafana\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "template": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/${consul_version}/consul_${consul_version}_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n  ${config}\n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "vars.%": "2",
                            "vars.config": "     \"node_name\": \"grafana\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    ",
                            "vars.consul_version": "1.4.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.consul_client_prometheus": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "cbd26308444ba0218b984b77b68babee87c6b86c8f84a0fdc4827e5b1416064d",
                        "attributes": {
                            "id": "cbd26308444ba0218b984b77b68babee87c6b86c8f84a0fdc4827e5b1416064d",
                            "rendered": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"prometheus\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "template": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/${consul_version}/consul_${consul_version}_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n  ${config}\n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "vars.%": "2",
                            "vars.config": "     \"node_name\": \"prometheus\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    ",
                            "vars.consul_version": "1.4.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.consul_server.0": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "01f0fffe88359dc15d1082cb6f29022318feb18079d2e387c198953ddf6ee795",
                        "attributes": {
                            "id": "01f0fffe88359dc15d1082cb6f29022318feb18079d2e387c198953ddf6ee795",
                            "rendered": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"consul-server1\",\n     \"server\": true,\n     \"bootstrap_expect\": 3,\n     \"ui\": true,\n     \"client_addr\": \"0.0.0.0\"\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "template": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/${consul_version}/consul_${consul_version}_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n  ${config}\n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "vars.%": "2",
                            "vars.config": "     \"node_name\": \"consul-server1\",\n     \"server\": true,\n     \"bootstrap_expect\": 3,\n     \"ui\": true,\n     \"client_addr\": \"0.0.0.0\"\n    ",
                            "vars.consul_version": "1.4.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.consul_server.1": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "45797ebc60f2213f561115c9b2701eaf6be5e28a06c407ebdc7cc360d8c10cf0",
                        "attributes": {
                            "id": "45797ebc60f2213f561115c9b2701eaf6be5e28a06c407ebdc7cc360d8c10cf0",
                            "rendered": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"consul-server2\",\n     \"server\": true,\n     \"bootstrap_expect\": 3,\n     \"ui\": true,\n     \"client_addr\": \"0.0.0.0\"\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "template": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/${consul_version}/consul_${consul_version}_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n  ${config}\n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "vars.%": "2",
                            "vars.config": "     \"node_name\": \"consul-server2\",\n     \"server\": true,\n     \"bootstrap_expect\": 3,\n     \"ui\": true,\n     \"client_addr\": \"0.0.0.0\"\n    ",
                            "vars.consul_version": "1.4.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.consul_server.2": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "a7577b9c010155c499f9ac73235118771880bcc5d05100659d6ec5d5eca26afe",
                        "attributes": {
                            "id": "a7577b9c010155c499f9ac73235118771880bcc5d05100659d6ec5d5eca26afe",
                            "rendered": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"consul-server3\",\n     \"server\": true,\n     \"bootstrap_expect\": 3,\n     \"ui\": true,\n     \"client_addr\": \"0.0.0.0\"\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "template": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/${consul_version}/consul_${consul_version}_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n  ${config}\n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "vars.%": "2",
                            "vars.config": "     \"node_name\": \"consul-server3\",\n     \"server\": true,\n     \"bootstrap_expect\": 3,\n     \"ui\": true,\n     \"client_addr\": \"0.0.0.0\"\n    ",
                            "vars.consul_version": "1.4.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.docker_install": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_instance.elk"
                    ],
                    "primary": {
                        "id": "8e5b9b1533d8e1c591085b42c26bd3c15d89f7e9ad38a299affb6b553a66000b",
                        "attributes": {
                            "id": "8e5b9b1533d8e1c591085b42c26bd3c15d89f7e9ad38a299affb6b553a66000b",
                            "rendered": "#!/usr/bin/env bash\n\n# Install Docker-ce\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\nsudo apt -qq update \u0026\u003e /dev/null\nsudo apt install -yqq apt-transport-https ca-certificates curl gnupg2 software-properties-common docker-ce \u0026\u003e /dev/null\n\n\n# Build \u0026 run the dummy container\nsudo mkdir /opt/docker\ncd /opt/docker\nsudo wget https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/Dockerfile\nsudo wget -O /opt/docker/my_dummy_exporter.py https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/my_dummy_exporter.py\nsudo docker build -t dummyapp .\nsudo docker run --name=dummyapp -v /opt/docker/my_dummy_exporter.py:/tmp/my_dummy_exporter.py -d -p 65433:65433 dummyapp\n\n\n# Register the dummy app in consul\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/dummy-65433.json\n{\n  \"service\": {\n    \"name\": \"dummy-65433\",\n    \"id\": \"dummy-65433\",\n    \"port\": 65433,\n    \"check\": {\n      \"name\": \"dummy_app port 65433 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:65433\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n\n\n# Build \u0026 run the filebeat container\ncat \u003c\u003c EOF | sudo tee /opt/docker/filebeat.yml\nfilebeat.config:\n  prospectors:\n    path: /usr/share/filebeat/prospectors.d/*.yml\n    reload.enabled: false\n  modules:\n    path: /usr/share/filebeat/modules.d/*.yml\n    reload.enabled: false\n\nfilebeat.autodiscover:\n  providers:\n    - type: docker\n      hints.enabled: true\n\nprocessors:\n- add_cloud_metadata: ~\n\n#output.elasticsearch:\n#  hosts: [\"10.0.1.52:9200\"]\n\noutput.logstash:\n  hosts: [\"10.0.1.52:5044\"]\n\nsetup.kibana:\n  host: \"10.0.1.52:5601\"\n\nEOF\n\n\nsudo docker run -d \\\n  --name=filebeat \\\n  --user=root \\\n  -v /opt/docker/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers:ro \\\n  -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n  docker.elastic.co/beats/filebeat:6.5.4 filebeat -e -strict.perms=false\n",
                            "template": "#!/usr/bin/env bash\n\n# Install Docker-ce\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\nsudo apt -qq update \u0026\u003e /dev/null\nsudo apt install -yqq apt-transport-https ca-certificates curl gnupg2 software-properties-common docker-ce \u0026\u003e /dev/null\n\n\n# Build \u0026 run the dummy container\nsudo mkdir /opt/docker\ncd /opt/docker\nsudo wget https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/Dockerfile\nsudo wget -O /opt/docker/my_dummy_exporter.py https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/my_dummy_exporter.py\nsudo docker build -t dummyapp .\nsudo docker run --name=dummyapp -v /opt/docker/my_dummy_exporter.py:/tmp/my_dummy_exporter.py -d -p 65433:65433 dummyapp\n\n\n# Register the dummy app in consul\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/dummy-65433.json\n{\n  \"service\": {\n    \"name\": \"dummy-65433\",\n    \"id\": \"dummy-65433\",\n    \"port\": 65433,\n    \"check\": {\n      \"name\": \"dummy_app port 65433 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:65433\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n\n\n# Build \u0026 run the filebeat container\ncat \u003c\u003c EOF | sudo tee /opt/docker/filebeat.yml\nfilebeat.config:\n  prospectors:\n    path: /usr/share/filebeat/prospectors.d/*.yml\n    reload.enabled: false\n  modules:\n    path: /usr/share/filebeat/modules.d/*.yml\n    reload.enabled: false\n\nfilebeat.autodiscover:\n  providers:\n    - type: docker\n      hints.enabled: true\n\nprocessors:\n- add_cloud_metadata: ~\n\n#output.elasticsearch:\n#  hosts: [\"${elk_priv_ip}:9200\"]\n\noutput.logstash:\n  hosts: [\"${elk_priv_ip}:5044\"]\n\nsetup.kibana:\n  host: \"${elk_priv_ip}:5601\"\n\nEOF\n\n\nsudo docker run -d \\\n  --name=filebeat \\\n  --user=root \\\n  -v /opt/docker/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers:ro \\\n  -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n  docker.elastic.co/beats/filebeat:6.5.4 filebeat -e -strict.perms=false\n",
                            "vars.%": "1",
                            "vars.elk_priv_ip": "10.0.1.52"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.grafana_install": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_instance.prometheus"
                    ],
                    "primary": {
                        "id": "ae3400528ef0ded266a886078ce889b5ac9edf08203c9f699fe3502991abdcf3",
                        "attributes": {
                            "id": "ae3400528ef0ded266a886078ce889b5ac9edf08203c9f699fe3502991abdcf3",
                            "rendered": "#!/bin/bash\n\n# Install Grafana\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\necho \"deb https://packages.grafana.com/oss/deb stable main\" \u003e /etc/apt/sources.list.d/grafana.list\ncurl https://packages.grafana.com/gpg.key | sudo apt-key add -\nsudo apt -qq update\nsudo apt install -y grafana\nsudo systemctl enable grafana-server.service\n\nsudo sed -i 's/;admin_user = admin/admin_user = admin/g' /etc/grafana/grafana.ini\nsudo sed -i 's/;admin_password = admin/admin_password = admin/g' /etc/grafana/grafana.ini\n\ncat \u003c\u003c EOF | sudo tee /etc/grafana/provisioning/datasources/datasource.yml\napiVersion: 1\ndatasources:\n - name: Prometheus\n   type: prometheus\n   access: proxy\n   orgId: 1\n   url: http://10.0.1.88:9090\n   isDefault: true\n   version: 1\neditable: false\nEOF\n\ncat \u003c\u003c EOF | sudo tee /etc/grafana/provisioning/dashboards/all.yml\napiVersion: 1\n\nproviders:\n- name: 'default'\n  orgId: 1\n  folder: ''\n  type: file\n  disableDeletion: false\n  updateIntervalSeconds: 10 #how often Grafana will scan for changed dashboards\n  options:\n    path: /var/lib/grafana/dashboards\nEOF\n\nsudo mkdir /var/lib/grafana/dashboards\ncat \u003c\u003c EOF | sudo tee /var/lib/grafana/dashboards/Dummy_Exporter_Request_Count.json\n{\n  \"annotations\": {\n    \"list\": [\n      {\n        \"builtIn\": 1,\n        \"datasource\": \"-- Grafana --\",\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations \u0026 Alerts\",\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"editable\": true,\n  \"gnetId\": null,\n  \"graphTooltip\": 0,\n  \"id\": 1,\n  \"links\": [],\n  \"panels\": [\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"fill\": 1,\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 2,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"rate(DummyService_requests[2m])\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"# of requests per sec\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    }\n  ],\n  \"schemaVersion\": 16,\n  \"style\": \"dark\",\n  \"tags\": [],\n  \"templating\": {\n    \"list\": []\n  },\n  \"time\": {\n    \"from\": \"now-15m\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n      \"5s\",\n      \"10s\",\n      \"30s\",\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"1d\"\n    ],\n    \"time_options\": [\n      \"5m\",\n      \"15m\",\n      \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\",\n      \"2d\",\n      \"7d\",\n      \"30d\"\n    ]\n  },\n  \"timezone\": \"\",\n  \"title\": \"Dummy Exporter Request Count\",\n  \"uid\": \"MX74Y8Qik\",\n  \"version\": 2\n}\n\nEOF\n\nsudo systemctl restart grafana-server\n\n# Register Grafana in consul\ncat \u003c\u003c EOF | sudo tee  /etc/consul.d/grafana-3000.json\n{\n  \"service\": {\n    \"name\": \"grafana-3000\",\n    \"id\": \"grafana-3000\",\n    \"port\": 3000,\n    \"check\": {\n      \"name\": \"grafana port 3000 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:3000\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n",
                            "template": "#!/bin/bash\n\n# Install Grafana\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\necho \"deb https://packages.grafana.com/oss/deb stable main\" \u003e /etc/apt/sources.list.d/grafana.list\ncurl https://packages.grafana.com/gpg.key | sudo apt-key add -\nsudo apt -qq update\nsudo apt install -y grafana\nsudo systemctl enable grafana-server.service\n\nsudo sed -i 's/;admin_user = admin/admin_user = admin/g' /etc/grafana/grafana.ini\nsudo sed -i 's/;admin_password = admin/admin_password = admin/g' /etc/grafana/grafana.ini\n\ncat \u003c\u003c EOF | sudo tee /etc/grafana/provisioning/datasources/datasource.yml\napiVersion: 1\ndatasources:\n - name: Prometheus\n   type: prometheus\n   access: proxy\n   orgId: 1\n   url: http://${prom_priv_ip}:9090\n   isDefault: true\n   version: 1\neditable: false\nEOF\n\ncat \u003c\u003c EOF | sudo tee /etc/grafana/provisioning/dashboards/all.yml\napiVersion: 1\n\nproviders:\n- name: 'default'\n  orgId: 1\n  folder: ''\n  type: file\n  disableDeletion: false\n  updateIntervalSeconds: 10 #how often Grafana will scan for changed dashboards\n  options:\n    path: /var/lib/grafana/dashboards\nEOF\n\nsudo mkdir /var/lib/grafana/dashboards\ncat \u003c\u003c EOF | sudo tee /var/lib/grafana/dashboards/Dummy_Exporter_Request_Count.json\n{\n  \"annotations\": {\n    \"list\": [\n      {\n        \"builtIn\": 1,\n        \"datasource\": \"-- Grafana --\",\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations \u0026 Alerts\",\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"editable\": true,\n  \"gnetId\": null,\n  \"graphTooltip\": 0,\n  \"id\": 1,\n  \"links\": [],\n  \"panels\": [\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"fill\": 1,\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 2,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"rate(DummyService_requests[2m])\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"# of requests per sec\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    }\n  ],\n  \"schemaVersion\": 16,\n  \"style\": \"dark\",\n  \"tags\": [],\n  \"templating\": {\n    \"list\": []\n  },\n  \"time\": {\n    \"from\": \"now-15m\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n      \"5s\",\n      \"10s\",\n      \"30s\",\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"1d\"\n    ],\n    \"time_options\": [\n      \"5m\",\n      \"15m\",\n      \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\",\n      \"2d\",\n      \"7d\",\n      \"30d\"\n    ]\n  },\n  \"timezone\": \"\",\n  \"title\": \"Dummy Exporter Request Count\",\n  \"uid\": \"MX74Y8Qik\",\n  \"version\": 2\n}\n\nEOF\n\nsudo systemctl restart grafana-server\n\n# Register Grafana in consul\ncat \u003c\u003c EOF | sudo tee  /etc/consul.d/grafana-3000.json\n{\n  \"service\": {\n    \"name\": \"grafana-3000\",\n    \"id\": \"grafana-3000\",\n    \"port\": 3000,\n    \"check\": {\n      \"name\": \"grafana port 3000 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:3000\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n",
                            "vars.%": "1",
                            "vars.prom_priv_ip": "10.0.1.88"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                }
            },
            "depends_on": []
        }
    ]
}

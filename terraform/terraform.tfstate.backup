{
    "version": 3,
    "terraform_version": "0.11.11",
    "serial": 19,
    "lineage": "d2e60b36-d1c9-0ca8-beea-59cd75ca4776",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {
                "Consul": {
                    "sensitive": false,
                    "type": "string",
                    "value": "http://54.162.245.56:8500"
                },
                "Grafana": {
                    "sensitive": false,
                    "type": "string",
                    "value": "http://35.175.137.111:3000"
                },
                "Prometheus": {
                    "sensitive": false,
                    "type": "string",
                    "value": "curl \"3.87.56.14:9090\""
                }
            },
            "resources": {
                "aws_iam_instance_profile.consul_auto_join": {
                    "type": "aws_iam_instance_profile",
                    "depends_on": [
                        "aws_iam_role.consul_auto_join"
                    ],
                    "primary": {
                        "id": "consul_auto_join",
                        "attributes": {
                            "arn": "arn:aws:iam::230617609085:instance-profile/consul_auto_join",
                            "create_date": "2019-01-31T13:14:06Z",
                            "id": "consul_auto_join",
                            "name": "consul_auto_join",
                            "path": "/",
                            "role": "consul_auto_join",
                            "roles.#": "1",
                            "roles.4186901782": "consul_auto_join",
                            "unique_id": "AIPAIMGV3FSBWJHGPVNGG"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_policy.consul_auto_join": {
                    "type": "aws_iam_policy",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:iam::230617609085:policy/consul_auto_join",
                        "attributes": {
                            "arn": "arn:aws:iam::230617609085:policy/consul_auto_join",
                            "description": "Allows Consul nodes to describe instances for joining",
                            "id": "arn:aws:iam::230617609085:policy/consul_auto_join",
                            "name": "consul_auto_join",
                            "path": "/",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:DescribeInstances\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_policy_attachment.consul_auto_join": {
                    "type": "aws_iam_policy_attachment",
                    "depends_on": [
                        "aws_iam_policy.consul_auto_join",
                        "aws_iam_role.consul_auto_join"
                    ],
                    "primary": {
                        "id": "consul_auto_join",
                        "attributes": {
                            "groups.#": "0",
                            "id": "consul_auto_join",
                            "name": "consul_auto_join",
                            "policy_arn": "arn:aws:iam::230617609085:policy/consul_auto_join",
                            "roles.#": "1",
                            "roles.4186901782": "consul_auto_join",
                            "users.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role.consul_auto_join": {
                    "type": "aws_iam_role",
                    "depends_on": [],
                    "primary": {
                        "id": "consul_auto_join",
                        "attributes": {
                            "arn": "arn:aws:iam::230617609085:role/consul_auto_join",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2019-01-31T13:13:35Z",
                            "description": "",
                            "force_detach_policies": "false",
                            "id": "consul_auto_join",
                            "max_session_duration": "3600",
                            "name": "consul_auto_join",
                            "path": "/",
                            "tags.%": "0",
                            "unique_id": "AROAJRDRF5VUVJWHEOP22"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.consul_server.0": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.consul_auto_join",
                        "aws_security_group.sg_consul",
                        "aws_subnet.public_subnet1",
                        "data.template_file.consul_server.*"
                    ],
                    "primary": {
                        "id": "i-0b0c7a55b4223c1d7",
                        "attributes": {
                            "ami": "ami-0f9cf087c1f27d9b1",
                            "arn": "arn:aws:ec2:us-east-1:230617609085:instance/i-0b0c7a55b4223c1d7",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-east-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "1",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "consul_auto_join",
                            "id": "i-0b0c7a55b4223c1d7",
                            "instance_state": "running",
                            "instance_type": "t2.micro",
                            "ipv6_addresses.#": "0",
                            "key_name": "aws_ec2",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-074ce324eea853401",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-074ce324eea853401",
                            "private_dns": "ip-10-0-1-218.ec2.internal",
                            "private_ip": "10.0.1.218",
                            "public_dns": "ec2-54-162-245-56.compute-1.amazonaws.com",
                            "public_ip": "54.162.245.56",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-0ea0e57e3af082c39",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-066cf7d346f5e84af",
                            "tags.%": "2",
                            "tags.Name": "consul-server1",
                            "tags.consul_server": "true",
                            "tenancy": "default",
                            "user_data": "40157a2cd05a7414b1cbc5c7b2631b0cff60c2d3",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "1",
                            "vpc_security_group_ids.2261640441": "sg-0ba3c5affc019bb82"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.consul_server.1": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.consul_auto_join",
                        "aws_security_group.sg_consul",
                        "aws_subnet.public_subnet1",
                        "data.template_file.consul_server.*"
                    ],
                    "primary": {
                        "id": "i-0a0abc45f6a1f5319",
                        "attributes": {
                            "ami": "ami-0f9cf087c1f27d9b1",
                            "arn": "arn:aws:ec2:us-east-1:230617609085:instance/i-0a0abc45f6a1f5319",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-east-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "1",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "consul_auto_join",
                            "id": "i-0a0abc45f6a1f5319",
                            "instance_state": "running",
                            "instance_type": "t2.micro",
                            "ipv6_addresses.#": "0",
                            "key_name": "aws_ec2",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-0a0c6af755cb7beab",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-0a0c6af755cb7beab",
                            "private_dns": "ip-10-0-1-187.ec2.internal",
                            "private_ip": "10.0.1.187",
                            "public_dns": "ec2-3-87-217-216.compute-1.amazonaws.com",
                            "public_ip": "3.87.217.216",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-0a49b870014218905",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-066cf7d346f5e84af",
                            "tags.%": "2",
                            "tags.Name": "consul-server2",
                            "tags.consul_server": "true",
                            "tenancy": "default",
                            "user_data": "2d9db0721b36db756ea585c6b153214731ee81c5",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "1",
                            "vpc_security_group_ids.2261640441": "sg-0ba3c5affc019bb82"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.consul_server.2": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.consul_auto_join",
                        "aws_security_group.sg_consul",
                        "aws_subnet.public_subnet1",
                        "data.template_file.consul_server.*"
                    ],
                    "primary": {
                        "id": "i-036f3186b0c2f82d2",
                        "attributes": {
                            "ami": "ami-0f9cf087c1f27d9b1",
                            "arn": "arn:aws:ec2:us-east-1:230617609085:instance/i-036f3186b0c2f82d2",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-east-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "1",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "consul_auto_join",
                            "id": "i-036f3186b0c2f82d2",
                            "instance_state": "running",
                            "instance_type": "t2.micro",
                            "ipv6_addresses.#": "0",
                            "key_name": "aws_ec2",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-08c8acec3d0cb54e8",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-08c8acec3d0cb54e8",
                            "private_dns": "ip-10-0-1-37.ec2.internal",
                            "private_ip": "10.0.1.37",
                            "public_dns": "ec2-3-83-123-36.compute-1.amazonaws.com",
                            "public_ip": "3.83.123.36",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-01c235108008d061a",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-066cf7d346f5e84af",
                            "tags.%": "2",
                            "tags.Name": "consul-server3",
                            "tags.consul_server": "true",
                            "tenancy": "default",
                            "user_data": "644ae34583652c2963c18c8716129ea2dfbc74cb",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "1",
                            "vpc_security_group_ids.2261640441": "sg-0ba3c5affc019bb82"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.docker_server": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.consul_auto_join",
                        "aws_instance.consul_server",
                        "aws_instance.elk",
                        "aws_instance.prometheus",
                        "aws_security_group.sg_consul",
                        "aws_security_group.sg_default",
                        "aws_subnet.public_subnet1",
                        "data.template_cloudinit_config.docker_server_config.*"
                    ],
                    "primary": {
                        "id": "i-0fc7902bdb0a828b0",
                        "attributes": {
                            "ami": "ami-0f9cf087c1f27d9b1",
                            "arn": "arn:aws:ec2:us-east-1:230617609085:instance/i-0fc7902bdb0a828b0",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-east-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "1",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "consul_auto_join",
                            "id": "i-0fc7902bdb0a828b0",
                            "instance_state": "running",
                            "instance_type": "t2.micro",
                            "ipv6_addresses.#": "0",
                            "key_name": "aws_ec2",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-0b8deddf7733d8e57",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-0b8deddf7733d8e57",
                            "private_dns": "ip-10-0-1-91.ec2.internal",
                            "private_ip": "10.0.1.91",
                            "public_dns": "ec2-18-205-158-171.compute-1.amazonaws.com",
                            "public_ip": "18.205.158.171",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-018ecc5381e6471a5",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-066cf7d346f5e84af",
                            "tags.%": "1",
                            "tags.Name": "docker-server1",
                            "tenancy": "default",
                            "user_data": "aaa9843b0f9e36a527c572626cf789e40b3c1504",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "2",
                            "vpc_security_group_ids.2261640441": "sg-0ba3c5affc019bb82",
                            "vpc_security_group_ids.3973135621": "sg-0de798dda9e34e688"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.elk": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.consul_auto_join",
                        "aws_instance.consul_server",
                        "aws_security_group.sg_consul",
                        "aws_security_group.sg_default",
                        "aws_subnet.public_subnet1",
                        "data.template_cloudinit_config.elk_config"
                    ],
                    "primary": {
                        "id": "i-08e347ffb41b830af",
                        "attributes": {
                            "ami": "ami-0f9cf087c1f27d9b1",
                            "arn": "arn:aws:ec2:us-east-1:230617609085:instance/i-08e347ffb41b830af",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-east-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "2",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "unlimited",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "consul_auto_join",
                            "id": "i-08e347ffb41b830af",
                            "instance_state": "running",
                            "instance_type": "t3.medium",
                            "ipv6_addresses.#": "0",
                            "key_name": "aws_ec2",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-00f029ed15b7b04b5",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-00f029ed15b7b04b5",
                            "private_dns": "ip-10-0-1-230.ec2.internal",
                            "private_ip": "10.0.1.230",
                            "public_dns": "ec2-35-171-157-222.compute-1.amazonaws.com",
                            "public_ip": "35.171.157.222",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-07f59e03989eb7a0e",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-066cf7d346f5e84af",
                            "tags.%": "1",
                            "tags.Name": "elk",
                            "tenancy": "default",
                            "user_data": "468b56980708b87ad29956bc8ceaec80d2f7f281",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "2",
                            "vpc_security_group_ids.2261640441": "sg-0ba3c5affc019bb82",
                            "vpc_security_group_ids.3973135621": "sg-0de798dda9e34e688"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.grafana": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.consul_auto_join",
                        "aws_instance.consul_server",
                        "aws_instance.prometheus",
                        "aws_security_group.sg_consul",
                        "aws_security_group.sg_default",
                        "aws_subnet.public_subnet1",
                        "data.template_cloudinit_config.grafana_config"
                    ],
                    "primary": {
                        "id": "i-0c3f2dbfb5cf7e545",
                        "attributes": {
                            "ami": "ami-0f9cf087c1f27d9b1",
                            "arn": "arn:aws:ec2:us-east-1:230617609085:instance/i-0c3f2dbfb5cf7e545",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-east-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "1",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "consul_auto_join",
                            "id": "i-0c3f2dbfb5cf7e545",
                            "instance_state": "running",
                            "instance_type": "t2.micro",
                            "ipv6_addresses.#": "0",
                            "key_name": "aws_ec2",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-053deea0b463013cc",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-053deea0b463013cc",
                            "private_dns": "ip-10-0-1-41.ec2.internal",
                            "private_ip": "10.0.1.41",
                            "public_dns": "ec2-35-175-137-111.compute-1.amazonaws.com",
                            "public_ip": "35.175.137.111",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-0dfc03f9a6626848e",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-066cf7d346f5e84af",
                            "tags.%": "1",
                            "tags.Name": "grafana",
                            "tenancy": "default",
                            "user_data": "af5cc536526e28a8e20c3e347418bfefd4e104d6",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "2",
                            "vpc_security_group_ids.2261640441": "sg-0ba3c5affc019bb82",
                            "vpc_security_group_ids.3973135621": "sg-0de798dda9e34e688"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.prometheus": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.consul_auto_join",
                        "aws_instance.consul_server",
                        "aws_security_group.sg_consul",
                        "aws_security_group.sg_default",
                        "aws_subnet.public_subnet1",
                        "data.template_cloudinit_config.prometheus_config"
                    ],
                    "primary": {
                        "id": "i-0e52f3196bdccdfe7",
                        "attributes": {
                            "ami": "ami-0f9cf087c1f27d9b1",
                            "arn": "arn:aws:ec2:us-east-1:230617609085:instance/i-0e52f3196bdccdfe7",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-east-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "1",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "consul_auto_join",
                            "id": "i-0e52f3196bdccdfe7",
                            "instance_state": "running",
                            "instance_type": "t2.micro",
                            "ipv6_addresses.#": "0",
                            "key_name": "aws_ec2",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-020d513c566b5f4af",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-020d513c566b5f4af",
                            "private_dns": "ip-10-0-1-101.ec2.internal",
                            "private_ip": "10.0.1.101",
                            "public_dns": "ec2-3-87-56-14.compute-1.amazonaws.com",
                            "public_ip": "3.87.56.14",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-08913ce56c9e09036",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-066cf7d346f5e84af",
                            "tags.%": "1",
                            "tags.Name": "prometheus",
                            "tenancy": "default",
                            "user_data": "9786304286772cc9b3963487a042697c9c27b2d0",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "2",
                            "vpc_security_group_ids.2261640441": "sg-0ba3c5affc019bb82",
                            "vpc_security_group_ids.3973135621": "sg-0de798dda9e34e688"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_internet_gateway.igw": {
                    "type": "aws_internet_gateway",
                    "depends_on": [
                        "aws_vpc.MyVPC"
                    ],
                    "primary": {
                        "id": "igw-0ba49807fe4adec47",
                        "attributes": {
                            "id": "igw-0ba49807fe4adec47",
                            "owner_id": "230617609085",
                            "tags.%": "0",
                            "vpc_id": "vpc-012f51a80e5735ccf"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_route_table.rtb_public": {
                    "type": "aws_route_table",
                    "depends_on": [
                        "aws_internet_gateway.igw",
                        "aws_vpc.MyVPC"
                    ],
                    "primary": {
                        "id": "rtb-0dec6a895999533ca",
                        "attributes": {
                            "id": "rtb-0dec6a895999533ca",
                            "owner_id": "230617609085",
                            "propagating_vgws.#": "0",
                            "route.#": "1",
                            "route.3198052502.cidr_block": "0.0.0.0/0",
                            "route.3198052502.egress_only_gateway_id": "",
                            "route.3198052502.gateway_id": "igw-0ba49807fe4adec47",
                            "route.3198052502.instance_id": "",
                            "route.3198052502.ipv6_cidr_block": "",
                            "route.3198052502.nat_gateway_id": "",
                            "route.3198052502.network_interface_id": "",
                            "route.3198052502.transit_gateway_id": "",
                            "route.3198052502.vpc_peering_connection_id": "",
                            "tags.%": "1",
                            "tags.Name": "rtb_public",
                            "vpc_id": "vpc-012f51a80e5735ccf"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_route_table_association.rta-public_subnet1": {
                    "type": "aws_route_table_association",
                    "depends_on": [
                        "aws_route_table.rtb_public",
                        "aws_subnet.public_subnet1"
                    ],
                    "primary": {
                        "id": "rtbassoc-04bad12c0eb48fcdd",
                        "attributes": {
                            "id": "rtbassoc-04bad12c0eb48fcdd",
                            "route_table_id": "rtb-0dec6a895999533ca",
                            "subnet_id": "subnet-066cf7d346f5e84af"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group.sg_consul": {
                    "type": "aws_security_group",
                    "depends_on": [
                        "aws_vpc.MyVPC"
                    ],
                    "primary": {
                        "id": "sg-0ba3c5affc019bb82",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:230617609085:security-group/sg-0ba3c5affc019bb82",
                            "description": "Allow ssh \u0026 consul inbound traffic",
                            "egress.#": "1",
                            "egress.2049434831.cidr_blocks.#": "1",
                            "egress.2049434831.cidr_blocks.0": "0.0.0.0/0",
                            "egress.2049434831.description": "Allow all outside security group",
                            "egress.2049434831.from_port": "0",
                            "egress.2049434831.ipv6_cidr_blocks.#": "0",
                            "egress.2049434831.prefix_list_ids.#": "0",
                            "egress.2049434831.protocol": "-1",
                            "egress.2049434831.security_groups.#": "0",
                            "egress.2049434831.self": "false",
                            "egress.2049434831.to_port": "0",
                            "id": "sg-0ba3c5affc019bb82",
                            "ingress.#": "3",
                            "ingress.3406622939.cidr_blocks.#": "1",
                            "ingress.3406622939.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.3406622939.description": "Allow consul UI access from the world",
                            "ingress.3406622939.from_port": "8500",
                            "ingress.3406622939.ipv6_cidr_blocks.#": "0",
                            "ingress.3406622939.prefix_list_ids.#": "0",
                            "ingress.3406622939.protocol": "tcp",
                            "ingress.3406622939.security_groups.#": "0",
                            "ingress.3406622939.self": "false",
                            "ingress.3406622939.to_port": "8500",
                            "ingress.4044943731.cidr_blocks.#": "1",
                            "ingress.4044943731.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.4044943731.description": "Allow ssh from the world",
                            "ingress.4044943731.from_port": "22",
                            "ingress.4044943731.ipv6_cidr_blocks.#": "0",
                            "ingress.4044943731.prefix_list_ids.#": "0",
                            "ingress.4044943731.protocol": "tcp",
                            "ingress.4044943731.security_groups.#": "0",
                            "ingress.4044943731.self": "false",
                            "ingress.4044943731.to_port": "22",
                            "ingress.994307033.cidr_blocks.#": "0",
                            "ingress.994307033.description": "Allow all inside security group",
                            "ingress.994307033.from_port": "0",
                            "ingress.994307033.ipv6_cidr_blocks.#": "0",
                            "ingress.994307033.prefix_list_ids.#": "0",
                            "ingress.994307033.protocol": "-1",
                            "ingress.994307033.security_groups.#": "0",
                            "ingress.994307033.self": "true",
                            "ingress.994307033.to_port": "0",
                            "name": "sg_consul",
                            "owner_id": "230617609085",
                            "revoke_rules_on_delete": "false",
                            "tags.%": "0",
                            "vpc_id": "vpc-012f51a80e5735ccf"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group.sg_default": {
                    "type": "aws_security_group",
                    "depends_on": [
                        "aws_vpc.MyVPC"
                    ],
                    "primary": {
                        "id": "sg-0de798dda9e34e688",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:230617609085:security-group/sg-0de798dda9e34e688",
                            "description": "Managed by Terraform",
                            "egress.#": "1",
                            "egress.482069346.cidr_blocks.#": "1",
                            "egress.482069346.cidr_blocks.0": "0.0.0.0/0",
                            "egress.482069346.description": "",
                            "egress.482069346.from_port": "0",
                            "egress.482069346.ipv6_cidr_blocks.#": "0",
                            "egress.482069346.prefix_list_ids.#": "0",
                            "egress.482069346.protocol": "-1",
                            "egress.482069346.security_groups.#": "0",
                            "egress.482069346.self": "false",
                            "egress.482069346.to_port": "0",
                            "id": "sg-0de798dda9e34e688",
                            "ingress.#": "11",
                            "ingress.1746620816.cidr_blocks.#": "1",
                            "ingress.1746620816.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.1746620816.description": "",
                            "ingress.1746620816.from_port": "9100",
                            "ingress.1746620816.ipv6_cidr_blocks.#": "0",
                            "ingress.1746620816.prefix_list_ids.#": "0",
                            "ingress.1746620816.protocol": "tcp",
                            "ingress.1746620816.security_groups.#": "0",
                            "ingress.1746620816.self": "false",
                            "ingress.1746620816.to_port": "9100",
                            "ingress.1994621032.cidr_blocks.#": "1",
                            "ingress.1994621032.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.1994621032.description": "",
                            "ingress.1994621032.from_port": "3000",
                            "ingress.1994621032.ipv6_cidr_blocks.#": "0",
                            "ingress.1994621032.prefix_list_ids.#": "0",
                            "ingress.1994621032.protocol": "tcp",
                            "ingress.1994621032.security_groups.#": "0",
                            "ingress.1994621032.self": "false",
                            "ingress.1994621032.to_port": "3000",
                            "ingress.2214680975.cidr_blocks.#": "1",
                            "ingress.2214680975.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2214680975.description": "",
                            "ingress.2214680975.from_port": "80",
                            "ingress.2214680975.ipv6_cidr_blocks.#": "0",
                            "ingress.2214680975.prefix_list_ids.#": "0",
                            "ingress.2214680975.protocol": "tcp",
                            "ingress.2214680975.security_groups.#": "0",
                            "ingress.2214680975.self": "false",
                            "ingress.2214680975.to_port": "80",
                            "ingress.2319052179.cidr_blocks.#": "1",
                            "ingress.2319052179.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2319052179.description": "",
                            "ingress.2319052179.from_port": "9000",
                            "ingress.2319052179.ipv6_cidr_blocks.#": "0",
                            "ingress.2319052179.prefix_list_ids.#": "0",
                            "ingress.2319052179.protocol": "tcp",
                            "ingress.2319052179.security_groups.#": "0",
                            "ingress.2319052179.self": "false",
                            "ingress.2319052179.to_port": "9000",
                            "ingress.2500694996.cidr_blocks.#": "1",
                            "ingress.2500694996.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2500694996.description": "",
                            "ingress.2500694996.from_port": "9200",
                            "ingress.2500694996.ipv6_cidr_blocks.#": "0",
                            "ingress.2500694996.prefix_list_ids.#": "0",
                            "ingress.2500694996.protocol": "tcp",
                            "ingress.2500694996.security_groups.#": "0",
                            "ingress.2500694996.self": "false",
                            "ingress.2500694996.to_port": "9200",
                            "ingress.2541437006.cidr_blocks.#": "1",
                            "ingress.2541437006.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2541437006.description": "",
                            "ingress.2541437006.from_port": "22",
                            "ingress.2541437006.ipv6_cidr_blocks.#": "0",
                            "ingress.2541437006.prefix_list_ids.#": "0",
                            "ingress.2541437006.protocol": "tcp",
                            "ingress.2541437006.security_groups.#": "0",
                            "ingress.2541437006.self": "false",
                            "ingress.2541437006.to_port": "22",
                            "ingress.2937129820.cidr_blocks.#": "1",
                            "ingress.2937129820.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2937129820.description": "",
                            "ingress.2937129820.from_port": "5044",
                            "ingress.2937129820.ipv6_cidr_blocks.#": "0",
                            "ingress.2937129820.prefix_list_ids.#": "0",
                            "ingress.2937129820.protocol": "tcp",
                            "ingress.2937129820.security_groups.#": "0",
                            "ingress.2937129820.self": "false",
                            "ingress.2937129820.to_port": "5044",
                            "ingress.3431095222.cidr_blocks.#": "1",
                            "ingress.3431095222.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.3431095222.description": "",
                            "ingress.3431095222.from_port": "5601",
                            "ingress.3431095222.ipv6_cidr_blocks.#": "0",
                            "ingress.3431095222.prefix_list_ids.#": "0",
                            "ingress.3431095222.protocol": "tcp",
                            "ingress.3431095222.security_groups.#": "0",
                            "ingress.3431095222.self": "false",
                            "ingress.3431095222.to_port": "5601",
                            "ingress.476094592.cidr_blocks.#": "1",
                            "ingress.476094592.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.476094592.description": "",
                            "ingress.476094592.from_port": "65433",
                            "ingress.476094592.ipv6_cidr_blocks.#": "0",
                            "ingress.476094592.prefix_list_ids.#": "0",
                            "ingress.476094592.protocol": "tcp",
                            "ingress.476094592.security_groups.#": "0",
                            "ingress.476094592.self": "false",
                            "ingress.476094592.to_port": "65433",
                            "ingress.501830036.cidr_blocks.#": "1",
                            "ingress.501830036.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.501830036.description": "",
                            "ingress.501830036.from_port": "9090",
                            "ingress.501830036.ipv6_cidr_blocks.#": "0",
                            "ingress.501830036.prefix_list_ids.#": "0",
                            "ingress.501830036.protocol": "tcp",
                            "ingress.501830036.security_groups.#": "0",
                            "ingress.501830036.self": "false",
                            "ingress.501830036.to_port": "9090",
                            "ingress.516175195.cidr_blocks.#": "1",
                            "ingress.516175195.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.516175195.description": "",
                            "ingress.516175195.from_port": "8080",
                            "ingress.516175195.ipv6_cidr_blocks.#": "0",
                            "ingress.516175195.prefix_list_ids.#": "0",
                            "ingress.516175195.protocol": "tcp",
                            "ingress.516175195.security_groups.#": "0",
                            "ingress.516175195.self": "false",
                            "ingress.516175195.to_port": "8080",
                            "name": "sg_default",
                            "owner_id": "230617609085",
                            "revoke_rules_on_delete": "false",
                            "tags.%": "0",
                            "vpc_id": "vpc-012f51a80e5735ccf"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_subnet.public_subnet1": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.MyVPC",
                        "data.aws_availability_zones.available"
                    ],
                    "primary": {
                        "id": "subnet-066cf7d346f5e84af",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:230617609085:subnet/subnet-066cf7d346f5e84af",
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-east-1a",
                            "availability_zone_id": "use1-az2",
                            "cidr_block": "10.0.1.0/24",
                            "id": "subnet-066cf7d346f5e84af",
                            "ipv6_cidr_block": "",
                            "ipv6_cidr_block_association_id": "",
                            "map_public_ip_on_launch": "true",
                            "owner_id": "230617609085",
                            "tags.%": "1",
                            "tags.Name": "public_subnet1",
                            "vpc_id": "vpc-012f51a80e5735ccf"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_vpc.MyVPC": {
                    "type": "aws_vpc",
                    "depends_on": [],
                    "primary": {
                        "id": "vpc-012f51a80e5735ccf",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:230617609085:vpc/vpc-012f51a80e5735ccf",
                            "assign_generated_ipv6_cidr_block": "false",
                            "cidr_block": "10.0.0.0/16",
                            "default_network_acl_id": "acl-098b720f3f0818423",
                            "default_route_table_id": "rtb-00df0ce2de499d01b",
                            "default_security_group_id": "sg-0758b96d51d82f6c8",
                            "dhcp_options_id": "dopt-e3c88598",
                            "enable_classiclink": "false",
                            "enable_classiclink_dns_support": "false",
                            "enable_dns_hostnames": "true",
                            "enable_dns_support": "true",
                            "id": "vpc-012f51a80e5735ccf",
                            "instance_tenancy": "default",
                            "ipv6_association_id": "",
                            "ipv6_cidr_block": "",
                            "main_route_table_id": "rtb-00df0ce2de499d01b",
                            "owner_id": "230617609085",
                            "tags.%": "1",
                            "tags.Name": "MyVPC"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "data.aws_availability_zones.available": {
                    "type": "aws_availability_zones",
                    "depends_on": [],
                    "primary": {
                        "id": "2019-01-31 15:36:36.492884425 +0000 UTC",
                        "attributes": {
                            "id": "2019-01-31 15:36:36.492884425 +0000 UTC",
                            "names.#": "6",
                            "names.0": "us-east-1a",
                            "names.1": "us-east-1b",
                            "names.2": "us-east-1c",
                            "names.3": "us-east-1d",
                            "names.4": "us-east-1e",
                            "names.5": "us-east-1f",
                            "zone_ids.#": "6",
                            "zone_ids.0": "use1-az2",
                            "zone_ids.1": "use1-az4",
                            "zone_ids.2": "use1-az6",
                            "zone_ids.3": "use1-az1",
                            "zone_ids.4": "use1-az3",
                            "zone_ids.5": "use1-az5"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "data.template_cloudinit_config.docker_server_config": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.consul_client_docker.*",
                        "data.template_file.docker_install"
                    ],
                    "primary": {
                        "id": "169759310",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "169759310",
                            "part.#": "2",
                            "part.0.content": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"docker-server1\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "part.0.content_type": "",
                            "part.0.filename": "",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/usr/bin/env bash\n\n# Install Docker-ce\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\nsudo apt -qq update \u0026\u003e /dev/null\nsudo apt install -yqq apt-transport-https ca-certificates curl gnupg2 software-properties-common docker-ce \u0026\u003e /dev/null\n\n\n# Build \u0026 run the dummy container\nsudo mkdir /opt/docker\ncd /opt/docker\nsudo wget https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/Dockerfile\nsudo wget -O /opt/docker/my_dummy_exporter.py https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/my_dummy_exporter.py\nsudo docker build -t dummyapp .\nsudo docker run --name=dummyapp -v /opt/docker/my_dummy_exporter.py:/tmp/my_dummy_exporter.py -d -p 65433:65433 dummyapp\n\n\n# Register the dummy app in consul\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/dummy-65433.json\n{\n  \"service\": {\n    \"name\": \"dummy-65433\",\n    \"id\": \"dummy-65433\",\n    \"port\": 65433,\n    \"check\": {\n      \"name\": \"Port 65433 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:65433\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n\n\n# Build \u0026 run the filebeat container\ncat \u003c\u003c EOF | sudo tee /opt/docker/filebeat.yml\nfilebeat.config:\n  prospectors:\n    path: /usr/share/filebeat/prospectors.d/*.yml\n    reload.enabled: false\n  modules:\n    path: /usr/share/filebeat/modules.d/*.yml\n    reload.enabled: false\n\nfilebeat.autodiscover:\n  providers:\n    - type: docker\n      hints.enabled: true\n\nprocessors:\n- add_cloud_metadata: ~\n\n#output.elasticsearch:\n#  hosts: [\"10.0.1.230:9200\"]\n\noutput.logstash:\n  hosts: [\"10.0.1.230:5044\"]\n\nsetup.kibana:\n  host: \"10.0.1.230:5601\"\n\nEOF\n\n\nsudo docker run -d \\\n  --name=filebeat \\\n  --user=root \\\n  -v /opt/docker/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers:ro \\\n  -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n  docker.elastic.co/beats/filebeat:6.5.4 filebeat -e -strict.perms=false\n",
                            "part.1.content_type": "",
                            "part.1.filename": "",
                            "part.1.merge_type": "",
                            "rendered": "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"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_cloudinit_config.elk_config": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.consul_client_elk"
                    ],
                    "primary": {
                        "id": "3926855737",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "3926855737",
                            "part.#": "2",
                            "part.0.content": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"elk\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "part.0.content_type": "",
                            "part.0.filename": "",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n\n# Install ELK\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\nwget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -\necho \"deb https://artifacts.elastic.co/packages/6.x/apt stable main\" | sudo tee -a /etc/apt/sources.list.d/elastic-6.x.list\nsudo apt-get -qq update\nsudo apt-get install -y openjdk-8-jre-headless openjdk-8-jdk-headless\nsudo apt-get install -y elasticsearch logstash kibana\nsudo systemctl daemon-reload\nsudo systemctl enable elasticsearch logstash kibana\nsudo systemctl start elasticsearch logstash kibana\n\n\n# Configure LogStash\ncat \u003c\u003c EOF | sudo tee /etc/logstash/conf.d/demo-metrics-pipeline.conf\ninput {\n  beats {\n    port =\u003e 5044\n  }\n}\n\n# The filter part of this file is commented out to indicate that it\n# is optional.\n# filter {\n#\n# }\n\noutput {\n  elasticsearch {\n    hosts =\u003e \"localhost:9200\"\n    manage_template =\u003e false\n    index =\u003e \"%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}\"\n  }\n}\n\nEOF\n\n\n# Configure Kibana\ncat \u003c\u003c EOF | sudo tee --append /etc/kibana/kibana.yml\n\nserver.name: kibana\nserver.host: \"0.0.0.0\"\nelasticsearch.url: \"http://localhost:9200\"\n\nEOF\n\nsudo systemctl restart kibana\n\n\n# Register in consul\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/elasticsearch-9200.json\n{\n  \"service\": {\n    \"name\": \"elasticsearch-9200\",\n    \"id\": \"elasticsearch-9200\",\n    \"port\": 9200,\n    \"check\": {\n      \"name\": \"Port 9200 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:9200/_cluster/health?pretty=true\"\n    }\n  }\n}\n\nEOF\n\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/kibana-5601.json\n{\n  \"service\": {\n    \"name\": \"kibana-5601\",\n    \"id\": \"kibana-5601\",\n    \"port\": 5601,\n    \"check\": {\n      \"name\": \"Port 5601 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:5601\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n",
                            "part.1.content_type": "",
                            "part.1.filename": "",
                            "part.1.merge_type": "",
                            "rendered": "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"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_cloudinit_config.grafana_config": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.consul_client_grafana",
                        "data.template_file.grafana_install"
                    ],
                    "primary": {
                        "id": "4092257269",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "4092257269",
                            "part.#": "2",
                            "part.0.content": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"grafana\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "part.0.content_type": "",
                            "part.0.filename": "",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n\n# Install Grafana\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\necho \"deb https://packages.grafana.com/oss/deb stable main\" \u003e /etc/apt/sources.list.d/grafana.list\ncurl https://packages.grafana.com/gpg.key | sudo apt-key add -\nsudo apt -qq update\nsudo apt install -y grafana\nsudo systemctl enable grafana-server.service\n\nsudo sed -i 's/;admin_user = admin/admin_user = admin/g' /etc/grafana/grafana.ini\nsudo sed -i 's/;admin_password = admin/admin_password = admin/g' /etc/grafana/grafana.ini\n\ncat \u003c\u003c EOF | sudo tee /etc/grafana/provisioning/datasources/datasource.yml\napiVersion: 1\ndatasources:\n - name: Prometheus\n   type: prometheus\n   access: proxy\n   orgId: 1\n   url: http://10.0.1.101:9090\n   isDefault: true\n   version: 1\neditable: false\nEOF\n\ncat \u003c\u003c EOF | sudo tee /etc/grafana/provisioning/dashboards/all.yml\napiVersion: 1\n\nproviders:\n- name: 'default'\n  orgId: 1\n  folder: ''\n  type: file\n  disableDeletion: false\n  updateIntervalSeconds: 10 #how often Grafana will scan for changed dashboards\n  options:\n    path: /var/lib/grafana/dashboards\nEOF\n\nsudo mkdir /var/lib/grafana/dashboards\ncat \u003c\u003c EOF | sudo tee /var/lib/grafana/dashboards/Dummy_Exporter_Request_Count.json\n{\n  \"annotations\": {\n    \"list\": [\n      {\n        \"builtIn\": 1,\n        \"datasource\": \"-- Grafana --\",\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations \u0026 Alerts\",\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"editable\": true,\n  \"gnetId\": null,\n  \"graphTooltip\": 0,\n  \"id\": 1,\n  \"links\": [],\n  \"panels\": [\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"fill\": 1,\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 2,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"rate(DummyService_requests[2m])\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"# of requests per sec\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    }\n  ],\n  \"schemaVersion\": 16,\n  \"style\": \"dark\",\n  \"tags\": [],\n  \"templating\": {\n    \"list\": []\n  },\n  \"time\": {\n    \"from\": \"now-15m\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n      \"5s\",\n      \"10s\",\n      \"30s\",\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"1d\"\n    ],\n    \"time_options\": [\n      \"5m\",\n      \"15m\",\n      \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\",\n      \"2d\",\n      \"7d\",\n      \"30d\"\n    ]\n  },\n  \"timezone\": \"\",\n  \"title\": \"Dummy Exporter Request Count\",\n  \"uid\": \"MX74Y8Qik\",\n  \"version\": 2\n}\n\nEOF\n\nsudo systemctl restart grafana-server\n\n# Register Grafana in consul\ncat \u003c\u003c EOF | sudo tee  /etc/consul.d/grafana-3000.json\n{\n  \"service\": {\n    \"name\": \"grafana-3000\",\n    \"id\": \"grafana-3000\",\n    \"port\": 3000,\n    \"check\": {\n      \"name\": \"Port 3000 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:3000\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n",
                            "part.1.content_type": "",
                            "part.1.filename": "",
                            "part.1.merge_type": "",
                            "rendered": "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"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_cloudinit_config.prometheus_config": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.consul_client_prometheus"
                    ],
                    "primary": {
                        "id": "754224082",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "754224082",
                            "part.#": "2",
                            "part.0.content": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"prometheus\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "part.0.content_type": "",
                            "part.0.filename": "",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\nsudo apt -qq update\nsudo apt-get install -y prometheus\ncat \u003c\u003c EOF | sudo tee --append /etc/prometheus/prometheus.yml\n\n  - job_name: 'consul'\n    scrape_interval: 5s\n    consul_sd_configs:\n      - datacenter: opsschool\n        server: 'localhost:8500'\n\nEOF\nsudo systemctl restart prometheus\n\n# Register Prometheus in consul\ncat \u003c\u003c EOF | sudo tee  /etc/consul.d/prometheus-9090.json\n{\n  \"service\": {\n    \"name\": \"prometheus-9090\",\n    \"id\": \"prometheus-9090\",\n    \"port\": 9090,\n    \"check\": {\n      \"name\": \"Port 9090 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:9090\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n",
                            "part.1.content_type": "",
                            "part.1.filename": "",
                            "part.1.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/7xWf2/bvBH+n0C+w00pkg3vKCVd8m7RogJp4mRGm8awk3ZFEAi0eLbZUKRCUk68rt99ICX5V9P9+QYIbN09eu5IPnzO51o5VI7eLipMoaylExUzLinFC/J/wljXijOzyKLr/nXv/c3dp4uz4deI+Cf6GY0VWqVwGB/skB1C6Tpohyy5DVN2gob2VKG5UNMU/j4Wbg0Qijt8cUklmVA75FqU+BP/7p+S2ppkLFSCag5jZmfEogOKhGAx0xBdGTYeCzWF/sDGcRyRwbD/+ey2l/cH2Zs/F7WRMHOuSpPk8PeT+O3xUdx+JpI5tC4p0THKmWOJ1AWTVFTzo7907H1lHZPS83OsUHFUhcCmkK25BlY5OvUNPT1BXXHmEPbeJRzniaql3MIsnp5ANIxQq/+IagPblrxEV8x8wXOtbC1DqYJD4sqKhOVQ+1FD0SQ9h1+eTZPEoERm0cYzZmei0KaKC10mDTI5jI/ig/YhDw+5FKp+yVnJfz/yRK+sea2Fpt+1sturLGal5vDbS4tpguW8fYRwjmGHw2m2ILILI3R11VZqX3rkwgCtINGVS4pXM+iKNhPz7Zyp1cZbDnHzBf9lIqbxN6sVvIPlQuD0tHdzSb4TgIjxORonLOaMcxOlEL1ZKSv6q4d40eRchORaq6tkgcphSOvK2mKmdZtEVZhF5Xymvnj/+Qh/+zi+/PK3g8OTrx8GL30zzbKWRVg2lpgbLLXDHF+wiFJwpsaNdKO8vJhh8biel8jmmGuVOzSlUMzhetagM4v8mxYqSuE+qoyeC44mY88WHJvmj7jIWsFYNHM0ITpnssbMk0QPnib8RUpzzBUrfQHPVKKbYW2jFhGhCo3awojKNY3atV48pKkRpTBh0mIIkh/EHwjZhXOD/m7VFg3swdQw5UA/KzR2JirQE5hoydHY5sQ9jHG+IcVipp8V0GEbTDtdrg5uUyQbOgotBNHUBjtJ+4ZFgVsiswvrsOTtZ0fXYrfUFvVuLiNyf6eEeyAX2OyO0Co736gAXNhCz9EsgE1ROTLEp1oYtJlC96zNI9VKCoWxY2aKjpxNHJou1wXJ/ahheyB3Fk17suTK6LrqHgb9i0shMVtbereASnAyROuYcZlWdMKErA2SnpoLo1WJymVXN9dn/x4Mb85H2VvSe8Fi5NEDg9k90AlEr7NG8AB7e7D0eVN68C86WLJmr/pJsz1AK8Hp5NcLAdoYAOXCZJtW4gsMUWrGs8D7KKR3XPjX3QDeXJ/1Pw36F+SDkHIkporJbNS/6n+6JbeiRF27kdPVCIvsmJD71kYfyBemHPL3iyyMWuq12Z1JEHeQT6OWwkngDEutqAlNbCebawSbotoGhUPaxvwhs9rvWJjRbUvIgQrYt0ltKTLr6GGMxds4Sab7zWVhlUusrk2BNpbCuuXAXBuom0O0m590ASubIQVzcHoKvZtL+C8s7yOlrPJDu6m1gq99jRelJASAwjc9DgaWwn6zdfvBgmxhWIW58E4+ZzKFYxvinTHyvNGSTVsvpLCy/hSWxt85JTQ2l8J+EO9MW5f+4/jgYJ8ENWwdpWlu3PpSyS4McSqsQwODZRiE6tzu9b3YmoArQnpycHIQRmEz+FrBRCl8J421/+Tq4ZXW2iPB/0+y0sZPOR9qI92M+k66ydHSD7RxARh+0ECD6wZM1O2/Rx7bVdxjfaz9jbfa09BFQP0g/v8HefW2Ndes27rtS0LpDvlfAAAA//8GFbJXLwsAAA=="
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.consul_client_docker": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "b8caa6e15c5c801d871e639860edd54f68d4bfa0ce17036c34f65aab9f382972",
                        "attributes": {
                            "id": "b8caa6e15c5c801d871e639860edd54f68d4bfa0ce17036c34f65aab9f382972",
                            "rendered": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"docker-server1\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "template": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/${consul_version}/consul_${consul_version}_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n  ${config}\n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "vars.%": "2",
                            "vars.config": "     \"node_name\": \"docker-server1\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    ",
                            "vars.consul_version": "1.4.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.consul_client_elk": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "3099c127306cea5361736e8ca77f9c4a5cb670548bc9201a8fea86cb58329b19",
                        "attributes": {
                            "id": "3099c127306cea5361736e8ca77f9c4a5cb670548bc9201a8fea86cb58329b19",
                            "rendered": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"elk\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "template": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/${consul_version}/consul_${consul_version}_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n  ${config}\n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "vars.%": "2",
                            "vars.config": "     \"node_name\": \"elk\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    ",
                            "vars.consul_version": "1.4.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.consul_client_grafana": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "3a819ad4966e5681e57df2c49204846999a883604000b838660a42fb2d3fe8ab",
                        "attributes": {
                            "id": "3a819ad4966e5681e57df2c49204846999a883604000b838660a42fb2d3fe8ab",
                            "rendered": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"grafana\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "template": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/${consul_version}/consul_${consul_version}_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n  ${config}\n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "vars.%": "2",
                            "vars.config": "     \"node_name\": \"grafana\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    ",
                            "vars.consul_version": "1.4.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.consul_client_prometheus": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "cbd26308444ba0218b984b77b68babee87c6b86c8f84a0fdc4827e5b1416064d",
                        "attributes": {
                            "id": "cbd26308444ba0218b984b77b68babee87c6b86c8f84a0fdc4827e5b1416064d",
                            "rendered": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"prometheus\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "template": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/${consul_version}/consul_${consul_version}_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n  ${config}\n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "vars.%": "2",
                            "vars.config": "     \"node_name\": \"prometheus\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    ",
                            "vars.consul_version": "1.4.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.consul_server.0": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "01f0fffe88359dc15d1082cb6f29022318feb18079d2e387c198953ddf6ee795",
                        "attributes": {
                            "id": "01f0fffe88359dc15d1082cb6f29022318feb18079d2e387c198953ddf6ee795",
                            "rendered": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"consul-server1\",\n     \"server\": true,\n     \"bootstrap_expect\": 3,\n     \"ui\": true,\n     \"client_addr\": \"0.0.0.0\"\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "template": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/${consul_version}/consul_${consul_version}_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n  ${config}\n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "vars.%": "2",
                            "vars.config": "     \"node_name\": \"consul-server1\",\n     \"server\": true,\n     \"bootstrap_expect\": 3,\n     \"ui\": true,\n     \"client_addr\": \"0.0.0.0\"\n    ",
                            "vars.consul_version": "1.4.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.consul_server.1": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "45797ebc60f2213f561115c9b2701eaf6be5e28a06c407ebdc7cc360d8c10cf0",
                        "attributes": {
                            "id": "45797ebc60f2213f561115c9b2701eaf6be5e28a06c407ebdc7cc360d8c10cf0",
                            "rendered": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"consul-server2\",\n     \"server\": true,\n     \"bootstrap_expect\": 3,\n     \"ui\": true,\n     \"client_addr\": \"0.0.0.0\"\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "template": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/${consul_version}/consul_${consul_version}_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n  ${config}\n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "vars.%": "2",
                            "vars.config": "     \"node_name\": \"consul-server2\",\n     \"server\": true,\n     \"bootstrap_expect\": 3,\n     \"ui\": true,\n     \"client_addr\": \"0.0.0.0\"\n    ",
                            "vars.consul_version": "1.4.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.consul_server.2": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "a7577b9c010155c499f9ac73235118771880bcc5d05100659d6ec5d5eca26afe",
                        "attributes": {
                            "id": "a7577b9c010155c499f9ac73235118771880bcc5d05100659d6ec5d5eca26afe",
                            "rendered": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"consul-server3\",\n     \"server\": true,\n     \"bootstrap_expect\": 3,\n     \"ui\": true,\n     \"client_addr\": \"0.0.0.0\"\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "template": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/${consul_version}/consul_${consul_version}_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n  ${config}\n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n",
                            "vars.%": "2",
                            "vars.config": "     \"node_name\": \"consul-server3\",\n     \"server\": true,\n     \"bootstrap_expect\": 3,\n     \"ui\": true,\n     \"client_addr\": \"0.0.0.0\"\n    ",
                            "vars.consul_version": "1.4.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.docker_install": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_instance.elk"
                    ],
                    "primary": {
                        "id": "cfa01499e941e1192cb50c6f10b434bf836a30a06e17663f6b31a2428fabc8cf",
                        "attributes": {
                            "id": "cfa01499e941e1192cb50c6f10b434bf836a30a06e17663f6b31a2428fabc8cf",
                            "rendered": "#!/usr/bin/env bash\n\n# Install Docker-ce\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\nsudo apt -qq update \u0026\u003e /dev/null\nsudo apt install -yqq apt-transport-https ca-certificates curl gnupg2 software-properties-common docker-ce \u0026\u003e /dev/null\n\n\n# Build \u0026 run the dummy container\nsudo mkdir /opt/docker\ncd /opt/docker\nsudo wget https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/Dockerfile\nsudo wget -O /opt/docker/my_dummy_exporter.py https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/my_dummy_exporter.py\nsudo docker build -t dummyapp .\nsudo docker run --name=dummyapp -v /opt/docker/my_dummy_exporter.py:/tmp/my_dummy_exporter.py -d -p 65433:65433 dummyapp\n\n\n# Register the dummy app in consul\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/dummy-65433.json\n{\n  \"service\": {\n    \"name\": \"dummy-65433\",\n    \"id\": \"dummy-65433\",\n    \"port\": 65433,\n    \"check\": {\n      \"name\": \"Port 65433 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:65433\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n\n\n# Build \u0026 run the filebeat container\ncat \u003c\u003c EOF | sudo tee /opt/docker/filebeat.yml\nfilebeat.config:\n  prospectors:\n    path: /usr/share/filebeat/prospectors.d/*.yml\n    reload.enabled: false\n  modules:\n    path: /usr/share/filebeat/modules.d/*.yml\n    reload.enabled: false\n\nfilebeat.autodiscover:\n  providers:\n    - type: docker\n      hints.enabled: true\n\nprocessors:\n- add_cloud_metadata: ~\n\n#output.elasticsearch:\n#  hosts: [\"10.0.1.230:9200\"]\n\noutput.logstash:\n  hosts: [\"10.0.1.230:5044\"]\n\nsetup.kibana:\n  host: \"10.0.1.230:5601\"\n\nEOF\n\n\nsudo docker run -d \\\n  --name=filebeat \\\n  --user=root \\\n  -v /opt/docker/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers:ro \\\n  -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n  docker.elastic.co/beats/filebeat:6.5.4 filebeat -e -strict.perms=false\n",
                            "template": "#!/usr/bin/env bash\n\n# Install Docker-ce\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\nsudo apt -qq update \u0026\u003e /dev/null\nsudo apt install -yqq apt-transport-https ca-certificates curl gnupg2 software-properties-common docker-ce \u0026\u003e /dev/null\n\n\n# Build \u0026 run the dummy container\nsudo mkdir /opt/docker\ncd /opt/docker\nsudo wget https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/Dockerfile\nsudo wget -O /opt/docker/my_dummy_exporter.py https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/my_dummy_exporter.py\nsudo docker build -t dummyapp .\nsudo docker run --name=dummyapp -v /opt/docker/my_dummy_exporter.py:/tmp/my_dummy_exporter.py -d -p 65433:65433 dummyapp\n\n\n# Register the dummy app in consul\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/dummy-65433.json\n{\n  \"service\": {\n    \"name\": \"dummy-65433\",\n    \"id\": \"dummy-65433\",\n    \"port\": 65433,\n    \"check\": {\n      \"name\": \"Port 65433 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:65433\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n\n\n# Build \u0026 run the filebeat container\ncat \u003c\u003c EOF | sudo tee /opt/docker/filebeat.yml\nfilebeat.config:\n  prospectors:\n    path: /usr/share/filebeat/prospectors.d/*.yml\n    reload.enabled: false\n  modules:\n    path: /usr/share/filebeat/modules.d/*.yml\n    reload.enabled: false\n\nfilebeat.autodiscover:\n  providers:\n    - type: docker\n      hints.enabled: true\n\nprocessors:\n- add_cloud_metadata: ~\n\n#output.elasticsearch:\n#  hosts: [\"${elk_priv_ip}:9200\"]\n\noutput.logstash:\n  hosts: [\"${elk_priv_ip}:5044\"]\n\nsetup.kibana:\n  host: \"${elk_priv_ip}:5601\"\n\nEOF\n\n\nsudo docker run -d \\\n  --name=filebeat \\\n  --user=root \\\n  -v /opt/docker/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers:ro \\\n  -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n  docker.elastic.co/beats/filebeat:6.5.4 filebeat -e -strict.perms=false\n",
                            "vars.%": "1",
                            "vars.elk_priv_ip": "10.0.1.230"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.grafana_install": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_instance.prometheus"
                    ],
                    "primary": {
                        "id": "25c4afdb7aba698fc1a5714760baf0e8780692f44ce9c31e7892c8e00bcd92ed",
                        "attributes": {
                            "id": "25c4afdb7aba698fc1a5714760baf0e8780692f44ce9c31e7892c8e00bcd92ed",
                            "rendered": "#!/bin/bash\n\n# Install Grafana\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\necho \"deb https://packages.grafana.com/oss/deb stable main\" \u003e /etc/apt/sources.list.d/grafana.list\ncurl https://packages.grafana.com/gpg.key | sudo apt-key add -\nsudo apt -qq update\nsudo apt install -y grafana\nsudo systemctl enable grafana-server.service\n\nsudo sed -i 's/;admin_user = admin/admin_user = admin/g' /etc/grafana/grafana.ini\nsudo sed -i 's/;admin_password = admin/admin_password = admin/g' /etc/grafana/grafana.ini\n\ncat \u003c\u003c EOF | sudo tee /etc/grafana/provisioning/datasources/datasource.yml\napiVersion: 1\ndatasources:\n - name: Prometheus\n   type: prometheus\n   access: proxy\n   orgId: 1\n   url: http://10.0.1.101:9090\n   isDefault: true\n   version: 1\neditable: false\nEOF\n\ncat \u003c\u003c EOF | sudo tee /etc/grafana/provisioning/dashboards/all.yml\napiVersion: 1\n\nproviders:\n- name: 'default'\n  orgId: 1\n  folder: ''\n  type: file\n  disableDeletion: false\n  updateIntervalSeconds: 10 #how often Grafana will scan for changed dashboards\n  options:\n    path: /var/lib/grafana/dashboards\nEOF\n\nsudo mkdir /var/lib/grafana/dashboards\ncat \u003c\u003c EOF | sudo tee /var/lib/grafana/dashboards/Dummy_Exporter_Request_Count.json\n{\n  \"annotations\": {\n    \"list\": [\n      {\n        \"builtIn\": 1,\n        \"datasource\": \"-- Grafana --\",\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations \u0026 Alerts\",\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"editable\": true,\n  \"gnetId\": null,\n  \"graphTooltip\": 0,\n  \"id\": 1,\n  \"links\": [],\n  \"panels\": [\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"fill\": 1,\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 2,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"rate(DummyService_requests[2m])\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"# of requests per sec\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    }\n  ],\n  \"schemaVersion\": 16,\n  \"style\": \"dark\",\n  \"tags\": [],\n  \"templating\": {\n    \"list\": []\n  },\n  \"time\": {\n    \"from\": \"now-15m\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n      \"5s\",\n      \"10s\",\n      \"30s\",\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"1d\"\n    ],\n    \"time_options\": [\n      \"5m\",\n      \"15m\",\n      \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\",\n      \"2d\",\n      \"7d\",\n      \"30d\"\n    ]\n  },\n  \"timezone\": \"\",\n  \"title\": \"Dummy Exporter Request Count\",\n  \"uid\": \"MX74Y8Qik\",\n  \"version\": 2\n}\n\nEOF\n\nsudo systemctl restart grafana-server\n\n# Register Grafana in consul\ncat \u003c\u003c EOF | sudo tee  /etc/consul.d/grafana-3000.json\n{\n  \"service\": {\n    \"name\": \"grafana-3000\",\n    \"id\": \"grafana-3000\",\n    \"port\": 3000,\n    \"check\": {\n      \"name\": \"Port 3000 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:3000\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n",
                            "template": "#!/bin/bash\n\n# Install Grafana\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\necho \"deb https://packages.grafana.com/oss/deb stable main\" \u003e /etc/apt/sources.list.d/grafana.list\ncurl https://packages.grafana.com/gpg.key | sudo apt-key add -\nsudo apt -qq update\nsudo apt install -y grafana\nsudo systemctl enable grafana-server.service\n\nsudo sed -i 's/;admin_user = admin/admin_user = admin/g' /etc/grafana/grafana.ini\nsudo sed -i 's/;admin_password = admin/admin_password = admin/g' /etc/grafana/grafana.ini\n\ncat \u003c\u003c EOF | sudo tee /etc/grafana/provisioning/datasources/datasource.yml\napiVersion: 1\ndatasources:\n - name: Prometheus\n   type: prometheus\n   access: proxy\n   orgId: 1\n   url: http://${prom_priv_ip}:9090\n   isDefault: true\n   version: 1\neditable: false\nEOF\n\ncat \u003c\u003c EOF | sudo tee /etc/grafana/provisioning/dashboards/all.yml\napiVersion: 1\n\nproviders:\n- name: 'default'\n  orgId: 1\n  folder: ''\n  type: file\n  disableDeletion: false\n  updateIntervalSeconds: 10 #how often Grafana will scan for changed dashboards\n  options:\n    path: /var/lib/grafana/dashboards\nEOF\n\nsudo mkdir /var/lib/grafana/dashboards\ncat \u003c\u003c EOF | sudo tee /var/lib/grafana/dashboards/Dummy_Exporter_Request_Count.json\n{\n  \"annotations\": {\n    \"list\": [\n      {\n        \"builtIn\": 1,\n        \"datasource\": \"-- Grafana --\",\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations \u0026 Alerts\",\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"editable\": true,\n  \"gnetId\": null,\n  \"graphTooltip\": 0,\n  \"id\": 1,\n  \"links\": [],\n  \"panels\": [\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"fill\": 1,\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 2,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"rate(DummyService_requests[2m])\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"# of requests per sec\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    }\n  ],\n  \"schemaVersion\": 16,\n  \"style\": \"dark\",\n  \"tags\": [],\n  \"templating\": {\n    \"list\": []\n  },\n  \"time\": {\n    \"from\": \"now-15m\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n      \"5s\",\n      \"10s\",\n      \"30s\",\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"1d\"\n    ],\n    \"time_options\": [\n      \"5m\",\n      \"15m\",\n      \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\",\n      \"2d\",\n      \"7d\",\n      \"30d\"\n    ]\n  },\n  \"timezone\": \"\",\n  \"title\": \"Dummy Exporter Request Count\",\n  \"uid\": \"MX74Y8Qik\",\n  \"version\": 2\n}\n\nEOF\n\nsudo systemctl restart grafana-server\n\n# Register Grafana in consul\ncat \u003c\u003c EOF | sudo tee  /etc/consul.d/grafana-3000.json\n{\n  \"service\": {\n    \"name\": \"grafana-3000\",\n    \"id\": \"grafana-3000\",\n    \"port\": 3000,\n    \"check\": {\n      \"name\": \"Port 3000 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:3000\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n",
                            "vars.%": "1",
                            "vars.prom_priv_ip": "10.0.1.101"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                }
            },
            "depends_on": []
        }
    ]
}

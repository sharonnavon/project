{
    "version": 3,
    "terraform_version": "0.11.11",
    "serial": 29,
    "lineage": "d2e60b36-d1c9-0ca8-beea-59cd75ca4776",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {
                "Consul": {
                    "sensitive": false,
                    "type": "string",
                    "value": "http://35.175.243.112:8500"
                },
                "DummyExporterService1": {
                    "sensitive": false,
                    "type": "string",
                    "value": "curl http://18.212.16.87:65433"
                },
                "DummyExporterService2": {
                    "sensitive": false,
                    "type": "string",
                    "value": "curl http://3.87.62.190:65433"
                },
                "ElasticSearch": {
                    "sensitive": false,
                    "type": "string",
                    "value": "curl http://3.87.189.91:9200"
                },
                "Grafana": {
                    "sensitive": false,
                    "type": "string",
                    "value": "http://3.87.6.148:3000"
                },
                "Kibana": {
                    "sensitive": false,
                    "type": "string",
                    "value": "curl http://3.87.189.91:5601/app/infra#/logs"
                },
                "Prometheus": {
                    "sensitive": false,
                    "type": "string",
                    "value": "curl http://3.95.197.121:9090"
                }
            },
            "resources": {
                "aws_iam_instance_profile.consul_auto_join": {
                    "type": "aws_iam_instance_profile",
                    "depends_on": [
                        "aws_iam_role.consul_auto_join"
                    ],
                    "primary": {
                        "id": "consul_auto_join",
                        "attributes": {
                            "arn": "arn:aws:iam::230617609085:instance-profile/consul_auto_join",
                            "create_date": "2019-02-13T10:13:13Z",
                            "id": "consul_auto_join",
                            "name": "consul_auto_join",
                            "path": "/",
                            "role": "consul_auto_join",
                            "roles.#": "0",
                            "unique_id": "AIPAIHBCBFBPZO22Q4QWO"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_policy.consul_auto_join": {
                    "type": "aws_iam_policy",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:iam::230617609085:policy/consul_auto_join",
                        "attributes": {
                            "arn": "arn:aws:iam::230617609085:policy/consul_auto_join",
                            "description": "Allows Consul nodes to describe instances for joining",
                            "id": "arn:aws:iam::230617609085:policy/consul_auto_join",
                            "name": "consul_auto_join",
                            "path": "/",
                            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:DescribeInstances\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_policy_attachment.consul_auto_join": {
                    "type": "aws_iam_policy_attachment",
                    "depends_on": [
                        "aws_iam_policy.consul_auto_join",
                        "aws_iam_role.consul_auto_join"
                    ],
                    "primary": {
                        "id": "consul_auto_join",
                        "attributes": {
                            "groups.#": "0",
                            "id": "consul_auto_join",
                            "name": "consul_auto_join",
                            "policy_arn": "arn:aws:iam::230617609085:policy/consul_auto_join",
                            "roles.#": "1",
                            "roles.4186901782": "consul_auto_join",
                            "users.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_iam_role.consul_auto_join": {
                    "type": "aws_iam_role",
                    "depends_on": [],
                    "primary": {
                        "id": "consul_auto_join",
                        "attributes": {
                            "arn": "arn:aws:iam::230617609085:role/consul_auto_join",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2019-02-13T10:13:12Z",
                            "description": "",
                            "force_detach_policies": "false",
                            "id": "consul_auto_join",
                            "max_session_duration": "3600",
                            "name": "consul_auto_join",
                            "path": "/",
                            "tags.%": "0",
                            "unique_id": "AROAJ3BDDVAI4GD6QMV2G"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.consul_server.0": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.consul_auto_join",
                        "aws_security_group.sg_consul",
                        "aws_subnet.public_subnet1",
                        "data.template_file.consul_server.*"
                    ],
                    "primary": {
                        "id": "i-0bd97b20bc37b6590",
                        "attributes": {
                            "ami": "ami-0f9cf087c1f27d9b1",
                            "arn": "arn:aws:ec2:us-east-1:230617609085:instance/i-0bd97b20bc37b6590",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-east-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "1",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "consul_auto_join",
                            "id": "i-0bd97b20bc37b6590",
                            "instance_state": "running",
                            "instance_type": "t2.micro",
                            "ipv6_addresses.#": "0",
                            "key_name": "aws_ec2",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-043336e7376979462",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-043336e7376979462",
                            "private_dns": "ip-10-0-1-108.ec2.internal",
                            "private_ip": "10.0.1.108",
                            "public_dns": "ec2-35-175-243-112.compute-1.amazonaws.com",
                            "public_ip": "35.175.243.112",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-079e0aae8be00642a",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-0d063389dbead953f",
                            "tags.%": "2",
                            "tags.Name": "consul-server1",
                            "tags.consul_server": "true",
                            "tenancy": "default",
                            "user_data": "bc6fe765ca912bae3be622c5e62a804860a372ca",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "1",
                            "vpc_security_group_ids.3554099034": "sg-0a7194a45db528190"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.consul_server.1": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.consul_auto_join",
                        "aws_security_group.sg_consul",
                        "aws_subnet.public_subnet1",
                        "data.template_file.consul_server.*"
                    ],
                    "primary": {
                        "id": "i-07c125c649de0cbfe",
                        "attributes": {
                            "ami": "ami-0f9cf087c1f27d9b1",
                            "arn": "arn:aws:ec2:us-east-1:230617609085:instance/i-07c125c649de0cbfe",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-east-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "1",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "consul_auto_join",
                            "id": "i-07c125c649de0cbfe",
                            "instance_state": "running",
                            "instance_type": "t2.micro",
                            "ipv6_addresses.#": "0",
                            "key_name": "aws_ec2",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-0ac9522197206af30",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-0ac9522197206af30",
                            "private_dns": "ip-10-0-1-7.ec2.internal",
                            "private_ip": "10.0.1.7",
                            "public_dns": "ec2-18-205-151-198.compute-1.amazonaws.com",
                            "public_ip": "18.205.151.198",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-0cbad79dc2f30b3cd",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-0d063389dbead953f",
                            "tags.%": "2",
                            "tags.Name": "consul-server2",
                            "tags.consul_server": "true",
                            "tenancy": "default",
                            "user_data": "7c827317c30cdfc15e6822784513f1850c229344",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "1",
                            "vpc_security_group_ids.3554099034": "sg-0a7194a45db528190"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.consul_server.2": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.consul_auto_join",
                        "aws_security_group.sg_consul",
                        "aws_subnet.public_subnet1",
                        "data.template_file.consul_server.*"
                    ],
                    "primary": {
                        "id": "i-01efb107b3ef9838e",
                        "attributes": {
                            "ami": "ami-0f9cf087c1f27d9b1",
                            "arn": "arn:aws:ec2:us-east-1:230617609085:instance/i-01efb107b3ef9838e",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-east-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "1",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "consul_auto_join",
                            "id": "i-01efb107b3ef9838e",
                            "instance_state": "running",
                            "instance_type": "t2.micro",
                            "ipv6_addresses.#": "0",
                            "key_name": "aws_ec2",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-0fca2eb32619d5593",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-0fca2eb32619d5593",
                            "private_dns": "ip-10-0-1-139.ec2.internal",
                            "private_ip": "10.0.1.139",
                            "public_dns": "ec2-3-92-184-222.compute-1.amazonaws.com",
                            "public_ip": "3.92.184.222",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-0e799f78e23922082",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-0d063389dbead953f",
                            "tags.%": "2",
                            "tags.Name": "consul-server3",
                            "tags.consul_server": "true",
                            "tenancy": "default",
                            "user_data": "2c38190005a07ba79f6e0dec602423cffadc99c6",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "1",
                            "vpc_security_group_ids.3554099034": "sg-0a7194a45db528190"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.docker_server.0": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.consul_auto_join",
                        "aws_instance.consul_server",
                        "aws_instance.elk",
                        "aws_instance.prometheus",
                        "aws_security_group.sg_consul",
                        "aws_security_group.sg_default",
                        "aws_subnet.public_subnet1",
                        "data.template_cloudinit_config.docker_server_config.*"
                    ],
                    "primary": {
                        "id": "i-0763091bd2081f823",
                        "attributes": {
                            "ami": "ami-0f9cf087c1f27d9b1",
                            "arn": "arn:aws:ec2:us-east-1:230617609085:instance/i-0763091bd2081f823",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-east-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "1",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "consul_auto_join",
                            "id": "i-0763091bd2081f823",
                            "instance_state": "running",
                            "instance_type": "t2.micro",
                            "ipv6_addresses.#": "0",
                            "key_name": "aws_ec2",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-0407506735c2f4cb8",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-0407506735c2f4cb8",
                            "private_dns": "ip-10-0-1-97.ec2.internal",
                            "private_ip": "10.0.1.97",
                            "public_dns": "ec2-18-212-16-87.compute-1.amazonaws.com",
                            "public_ip": "18.212.16.87",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-0ca60203825edffb7",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-0d063389dbead953f",
                            "tags.%": "1",
                            "tags.Name": "docker-server1",
                            "tenancy": "default",
                            "user_data": "dd8ac9a5b92e0e610866ffa19dab4e466e41a856",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "2",
                            "vpc_security_group_ids.1015217236": "sg-0e81fbacab744bcc7",
                            "vpc_security_group_ids.3554099034": "sg-0a7194a45db528190"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.docker_server.1": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.consul_auto_join",
                        "aws_instance.consul_server",
                        "aws_instance.elk",
                        "aws_instance.prometheus",
                        "aws_security_group.sg_consul",
                        "aws_security_group.sg_default",
                        "aws_subnet.public_subnet1",
                        "data.template_cloudinit_config.docker_server_config.*"
                    ],
                    "primary": {
                        "id": "i-026e013cf9574e00f",
                        "attributes": {
                            "ami": "ami-0f9cf087c1f27d9b1",
                            "arn": "arn:aws:ec2:us-east-1:230617609085:instance/i-026e013cf9574e00f",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-east-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "1",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "consul_auto_join",
                            "id": "i-026e013cf9574e00f",
                            "instance_state": "running",
                            "instance_type": "t2.micro",
                            "ipv6_addresses.#": "0",
                            "key_name": "aws_ec2",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-0ae635d5d98436a59",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-0ae635d5d98436a59",
                            "private_dns": "ip-10-0-1-72.ec2.internal",
                            "private_ip": "10.0.1.72",
                            "public_dns": "ec2-3-87-62-190.compute-1.amazonaws.com",
                            "public_ip": "3.87.62.190",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-0f8ca7f8db5f2100b",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-0d063389dbead953f",
                            "tags.%": "1",
                            "tags.Name": "docker-server2",
                            "tenancy": "default",
                            "user_data": "ff917ec34ec610fe96e201d30871c5d0ed4d9d64",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "2",
                            "vpc_security_group_ids.1015217236": "sg-0e81fbacab744bcc7",
                            "vpc_security_group_ids.3554099034": "sg-0a7194a45db528190"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.elk": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.consul_auto_join",
                        "aws_instance.consul_server",
                        "aws_security_group.sg_consul",
                        "aws_security_group.sg_default",
                        "aws_subnet.public_subnet1",
                        "data.template_cloudinit_config.elk_config"
                    ],
                    "primary": {
                        "id": "i-0b180cb620769c900",
                        "attributes": {
                            "ami": "ami-0f9cf087c1f27d9b1",
                            "arn": "arn:aws:ec2:us-east-1:230617609085:instance/i-0b180cb620769c900",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-east-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "2",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "unlimited",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "consul_auto_join",
                            "id": "i-0b180cb620769c900",
                            "instance_state": "running",
                            "instance_type": "t3.medium",
                            "ipv6_addresses.#": "0",
                            "key_name": "aws_ec2",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-0e79d9518a96d98bd",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-0e79d9518a96d98bd",
                            "private_dns": "ip-10-0-1-110.ec2.internal",
                            "private_ip": "10.0.1.110",
                            "public_dns": "ec2-3-87-189-91.compute-1.amazonaws.com",
                            "public_ip": "3.87.189.91",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-08db16886298cfe6a",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-0d063389dbead953f",
                            "tags.%": "1",
                            "tags.Name": "elk",
                            "tenancy": "default",
                            "user_data": "fcdf819a0b45457c7bde5bf91e2aac77b197b68f",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "2",
                            "vpc_security_group_ids.1015217236": "sg-0e81fbacab744bcc7",
                            "vpc_security_group_ids.3554099034": "sg-0a7194a45db528190"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.grafana": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.consul_auto_join",
                        "aws_instance.consul_server",
                        "aws_instance.prometheus",
                        "aws_security_group.sg_consul",
                        "aws_security_group.sg_default",
                        "aws_subnet.public_subnet1",
                        "data.template_cloudinit_config.grafana_config"
                    ],
                    "primary": {
                        "id": "i-08e24b580851831f1",
                        "attributes": {
                            "ami": "ami-0f9cf087c1f27d9b1",
                            "arn": "arn:aws:ec2:us-east-1:230617609085:instance/i-08e24b580851831f1",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-east-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "1",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "consul_auto_join",
                            "id": "i-08e24b580851831f1",
                            "instance_state": "running",
                            "instance_type": "t2.micro",
                            "ipv6_addresses.#": "0",
                            "key_name": "aws_ec2",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-0aaeb1b2ae1b969de",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-0aaeb1b2ae1b969de",
                            "private_dns": "ip-10-0-1-183.ec2.internal",
                            "private_ip": "10.0.1.183",
                            "public_dns": "ec2-3-87-6-148.compute-1.amazonaws.com",
                            "public_ip": "3.87.6.148",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-00a1a222ac2bf475f",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-0d063389dbead953f",
                            "tags.%": "1",
                            "tags.Name": "grafana",
                            "tenancy": "default",
                            "user_data": "5f995016c144219dbd3565f8faf1c15dbb1364ed",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "2",
                            "vpc_security_group_ids.1015217236": "sg-0e81fbacab744bcc7",
                            "vpc_security_group_ids.3554099034": "sg-0a7194a45db528190"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_instance.prometheus": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.consul_auto_join",
                        "aws_instance.consul_server",
                        "aws_security_group.sg_consul",
                        "aws_security_group.sg_default",
                        "aws_subnet.public_subnet1",
                        "data.template_cloudinit_config.prometheus_config"
                    ],
                    "primary": {
                        "id": "i-0a313af81bbaac03b",
                        "attributes": {
                            "ami": "ami-0f9cf087c1f27d9b1",
                            "arn": "arn:aws:ec2:us-east-1:230617609085:instance/i-0a313af81bbaac03b",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-east-1a",
                            "cpu_core_count": "1",
                            "cpu_threads_per_core": "1",
                            "credit_specification.#": "1",
                            "credit_specification.0.cpu_credits": "standard",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "get_password_data": "false",
                            "iam_instance_profile": "consul_auto_join",
                            "id": "i-0a313af81bbaac03b",
                            "instance_state": "running",
                            "instance_type": "t2.micro",
                            "ipv6_addresses.#": "0",
                            "key_name": "aws_ec2",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-0afdc2bcdd58e5622",
                            "password_data": "",
                            "placement_group": "",
                            "primary_network_interface_id": "eni-0afdc2bcdd58e5622",
                            "private_dns": "ip-10-0-1-128.ec2.internal",
                            "private_ip": "10.0.1.128",
                            "public_dns": "ec2-3-95-197-121.compute-1.amazonaws.com",
                            "public_ip": "3.95.197.121",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_id": "vol-08ae1f49ad9f07237",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-0d063389dbead953f",
                            "tags.%": "1",
                            "tags.Name": "prometheus",
                            "tenancy": "default",
                            "user_data": "b161c0861177370160ceb005d93003f6d0423126",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "2",
                            "vpc_security_group_ids.1015217236": "sg-0e81fbacab744bcc7",
                            "vpc_security_group_ids.3554099034": "sg-0a7194a45db528190"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 1200000000000,
                                "update": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_internet_gateway.igw": {
                    "type": "aws_internet_gateway",
                    "depends_on": [
                        "aws_vpc.MyVPC"
                    ],
                    "primary": {
                        "id": "igw-05ed87dd0975a82ff",
                        "attributes": {
                            "id": "igw-05ed87dd0975a82ff",
                            "owner_id": "230617609085",
                            "tags.%": "0",
                            "vpc_id": "vpc-033f719fd20f5be9a"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_route_table.rtb_public": {
                    "type": "aws_route_table",
                    "depends_on": [
                        "aws_internet_gateway.igw",
                        "aws_vpc.MyVPC"
                    ],
                    "primary": {
                        "id": "rtb-022237c700108310d",
                        "attributes": {
                            "id": "rtb-022237c700108310d",
                            "owner_id": "230617609085",
                            "propagating_vgws.#": "0",
                            "route.#": "1",
                            "route.3528021541.cidr_block": "0.0.0.0/0",
                            "route.3528021541.egress_only_gateway_id": "",
                            "route.3528021541.gateway_id": "igw-05ed87dd0975a82ff",
                            "route.3528021541.instance_id": "",
                            "route.3528021541.ipv6_cidr_block": "",
                            "route.3528021541.nat_gateway_id": "",
                            "route.3528021541.network_interface_id": "",
                            "route.3528021541.transit_gateway_id": "",
                            "route.3528021541.vpc_peering_connection_id": "",
                            "tags.%": "1",
                            "tags.Name": "rtb_public",
                            "vpc_id": "vpc-033f719fd20f5be9a"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_route_table_association.rta-public_subnet1": {
                    "type": "aws_route_table_association",
                    "depends_on": [
                        "aws_route_table.rtb_public",
                        "aws_subnet.public_subnet1"
                    ],
                    "primary": {
                        "id": "rtbassoc-098d63aceeaf7672b",
                        "attributes": {
                            "id": "rtbassoc-098d63aceeaf7672b",
                            "route_table_id": "rtb-022237c700108310d",
                            "subnet_id": "subnet-0d063389dbead953f"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group.sg_consul": {
                    "type": "aws_security_group",
                    "depends_on": [
                        "aws_vpc.MyVPC"
                    ],
                    "primary": {
                        "id": "sg-0a7194a45db528190",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:230617609085:security-group/sg-0a7194a45db528190",
                            "description": "Allow ssh \u0026 consul inbound traffic",
                            "egress.#": "1",
                            "egress.2049434831.cidr_blocks.#": "1",
                            "egress.2049434831.cidr_blocks.0": "0.0.0.0/0",
                            "egress.2049434831.description": "Allow all outside security group",
                            "egress.2049434831.from_port": "0",
                            "egress.2049434831.ipv6_cidr_blocks.#": "0",
                            "egress.2049434831.prefix_list_ids.#": "0",
                            "egress.2049434831.protocol": "-1",
                            "egress.2049434831.security_groups.#": "0",
                            "egress.2049434831.self": "false",
                            "egress.2049434831.to_port": "0",
                            "id": "sg-0a7194a45db528190",
                            "ingress.#": "3",
                            "ingress.3406622939.cidr_blocks.#": "1",
                            "ingress.3406622939.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.3406622939.description": "Allow consul UI access from the world",
                            "ingress.3406622939.from_port": "8500",
                            "ingress.3406622939.ipv6_cidr_blocks.#": "0",
                            "ingress.3406622939.prefix_list_ids.#": "0",
                            "ingress.3406622939.protocol": "tcp",
                            "ingress.3406622939.security_groups.#": "0",
                            "ingress.3406622939.self": "false",
                            "ingress.3406622939.to_port": "8500",
                            "ingress.4044943731.cidr_blocks.#": "1",
                            "ingress.4044943731.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.4044943731.description": "Allow ssh from the world",
                            "ingress.4044943731.from_port": "22",
                            "ingress.4044943731.ipv6_cidr_blocks.#": "0",
                            "ingress.4044943731.prefix_list_ids.#": "0",
                            "ingress.4044943731.protocol": "tcp",
                            "ingress.4044943731.security_groups.#": "0",
                            "ingress.4044943731.self": "false",
                            "ingress.4044943731.to_port": "22",
                            "ingress.994307033.cidr_blocks.#": "0",
                            "ingress.994307033.description": "Allow all inside security group",
                            "ingress.994307033.from_port": "0",
                            "ingress.994307033.ipv6_cidr_blocks.#": "0",
                            "ingress.994307033.prefix_list_ids.#": "0",
                            "ingress.994307033.protocol": "-1",
                            "ingress.994307033.security_groups.#": "0",
                            "ingress.994307033.self": "true",
                            "ingress.994307033.to_port": "0",
                            "name": "sg_consul",
                            "owner_id": "230617609085",
                            "revoke_rules_on_delete": "false",
                            "tags.%": "0",
                            "vpc_id": "vpc-033f719fd20f5be9a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_security_group.sg_default": {
                    "type": "aws_security_group",
                    "depends_on": [
                        "aws_vpc.MyVPC"
                    ],
                    "primary": {
                        "id": "sg-0e81fbacab744bcc7",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:230617609085:security-group/sg-0e81fbacab744bcc7",
                            "description": "Managed by Terraform",
                            "egress.#": "1",
                            "egress.482069346.cidr_blocks.#": "1",
                            "egress.482069346.cidr_blocks.0": "0.0.0.0/0",
                            "egress.482069346.description": "",
                            "egress.482069346.from_port": "0",
                            "egress.482069346.ipv6_cidr_blocks.#": "0",
                            "egress.482069346.prefix_list_ids.#": "0",
                            "egress.482069346.protocol": "-1",
                            "egress.482069346.security_groups.#": "0",
                            "egress.482069346.self": "false",
                            "egress.482069346.to_port": "0",
                            "id": "sg-0e81fbacab744bcc7",
                            "ingress.#": "11",
                            "ingress.1746620816.cidr_blocks.#": "1",
                            "ingress.1746620816.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.1746620816.description": "",
                            "ingress.1746620816.from_port": "9100",
                            "ingress.1746620816.ipv6_cidr_blocks.#": "0",
                            "ingress.1746620816.prefix_list_ids.#": "0",
                            "ingress.1746620816.protocol": "tcp",
                            "ingress.1746620816.security_groups.#": "0",
                            "ingress.1746620816.self": "false",
                            "ingress.1746620816.to_port": "9100",
                            "ingress.1994621032.cidr_blocks.#": "1",
                            "ingress.1994621032.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.1994621032.description": "",
                            "ingress.1994621032.from_port": "3000",
                            "ingress.1994621032.ipv6_cidr_blocks.#": "0",
                            "ingress.1994621032.prefix_list_ids.#": "0",
                            "ingress.1994621032.protocol": "tcp",
                            "ingress.1994621032.security_groups.#": "0",
                            "ingress.1994621032.self": "false",
                            "ingress.1994621032.to_port": "3000",
                            "ingress.2214680975.cidr_blocks.#": "1",
                            "ingress.2214680975.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2214680975.description": "",
                            "ingress.2214680975.from_port": "80",
                            "ingress.2214680975.ipv6_cidr_blocks.#": "0",
                            "ingress.2214680975.prefix_list_ids.#": "0",
                            "ingress.2214680975.protocol": "tcp",
                            "ingress.2214680975.security_groups.#": "0",
                            "ingress.2214680975.self": "false",
                            "ingress.2214680975.to_port": "80",
                            "ingress.2319052179.cidr_blocks.#": "1",
                            "ingress.2319052179.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2319052179.description": "",
                            "ingress.2319052179.from_port": "9000",
                            "ingress.2319052179.ipv6_cidr_blocks.#": "0",
                            "ingress.2319052179.prefix_list_ids.#": "0",
                            "ingress.2319052179.protocol": "tcp",
                            "ingress.2319052179.security_groups.#": "0",
                            "ingress.2319052179.self": "false",
                            "ingress.2319052179.to_port": "9000",
                            "ingress.2500694996.cidr_blocks.#": "1",
                            "ingress.2500694996.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2500694996.description": "",
                            "ingress.2500694996.from_port": "9200",
                            "ingress.2500694996.ipv6_cidr_blocks.#": "0",
                            "ingress.2500694996.prefix_list_ids.#": "0",
                            "ingress.2500694996.protocol": "tcp",
                            "ingress.2500694996.security_groups.#": "0",
                            "ingress.2500694996.self": "false",
                            "ingress.2500694996.to_port": "9200",
                            "ingress.2541437006.cidr_blocks.#": "1",
                            "ingress.2541437006.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2541437006.description": "",
                            "ingress.2541437006.from_port": "22",
                            "ingress.2541437006.ipv6_cidr_blocks.#": "0",
                            "ingress.2541437006.prefix_list_ids.#": "0",
                            "ingress.2541437006.protocol": "tcp",
                            "ingress.2541437006.security_groups.#": "0",
                            "ingress.2541437006.self": "false",
                            "ingress.2541437006.to_port": "22",
                            "ingress.2937129820.cidr_blocks.#": "1",
                            "ingress.2937129820.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.2937129820.description": "",
                            "ingress.2937129820.from_port": "5044",
                            "ingress.2937129820.ipv6_cidr_blocks.#": "0",
                            "ingress.2937129820.prefix_list_ids.#": "0",
                            "ingress.2937129820.protocol": "tcp",
                            "ingress.2937129820.security_groups.#": "0",
                            "ingress.2937129820.self": "false",
                            "ingress.2937129820.to_port": "5044",
                            "ingress.3431095222.cidr_blocks.#": "1",
                            "ingress.3431095222.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.3431095222.description": "",
                            "ingress.3431095222.from_port": "5601",
                            "ingress.3431095222.ipv6_cidr_blocks.#": "0",
                            "ingress.3431095222.prefix_list_ids.#": "0",
                            "ingress.3431095222.protocol": "tcp",
                            "ingress.3431095222.security_groups.#": "0",
                            "ingress.3431095222.self": "false",
                            "ingress.3431095222.to_port": "5601",
                            "ingress.476094592.cidr_blocks.#": "1",
                            "ingress.476094592.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.476094592.description": "",
                            "ingress.476094592.from_port": "65433",
                            "ingress.476094592.ipv6_cidr_blocks.#": "0",
                            "ingress.476094592.prefix_list_ids.#": "0",
                            "ingress.476094592.protocol": "tcp",
                            "ingress.476094592.security_groups.#": "0",
                            "ingress.476094592.self": "false",
                            "ingress.476094592.to_port": "65433",
                            "ingress.501830036.cidr_blocks.#": "1",
                            "ingress.501830036.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.501830036.description": "",
                            "ingress.501830036.from_port": "9090",
                            "ingress.501830036.ipv6_cidr_blocks.#": "0",
                            "ingress.501830036.prefix_list_ids.#": "0",
                            "ingress.501830036.protocol": "tcp",
                            "ingress.501830036.security_groups.#": "0",
                            "ingress.501830036.self": "false",
                            "ingress.501830036.to_port": "9090",
                            "ingress.516175195.cidr_blocks.#": "1",
                            "ingress.516175195.cidr_blocks.0": "0.0.0.0/0",
                            "ingress.516175195.description": "",
                            "ingress.516175195.from_port": "8080",
                            "ingress.516175195.ipv6_cidr_blocks.#": "0",
                            "ingress.516175195.prefix_list_ids.#": "0",
                            "ingress.516175195.protocol": "tcp",
                            "ingress.516175195.security_groups.#": "0",
                            "ingress.516175195.self": "false",
                            "ingress.516175195.to_port": "8080",
                            "name": "sg_default",
                            "owner_id": "230617609085",
                            "revoke_rules_on_delete": "false",
                            "tags.%": "0",
                            "vpc_id": "vpc-033f719fd20f5be9a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_subnet.public_subnet1": {
                    "type": "aws_subnet",
                    "depends_on": [
                        "aws_vpc.MyVPC",
                        "data.aws_availability_zones.available"
                    ],
                    "primary": {
                        "id": "subnet-0d063389dbead953f",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:230617609085:subnet/subnet-0d063389dbead953f",
                            "assign_ipv6_address_on_creation": "false",
                            "availability_zone": "us-east-1a",
                            "availability_zone_id": "use1-az2",
                            "cidr_block": "10.0.1.0/24",
                            "id": "subnet-0d063389dbead953f",
                            "ipv6_cidr_block": "",
                            "ipv6_cidr_block_association_id": "",
                            "map_public_ip_on_launch": "true",
                            "owner_id": "230617609085",
                            "tags.%": "1",
                            "tags.Name": "public_subnet1",
                            "vpc_id": "vpc-033f719fd20f5be9a"
                        },
                        "meta": {
                            "e2bfb730-ecaa-11e6-8f88-34363bc7c4c0": {
                                "create": 600000000000,
                                "delete": 600000000000
                            },
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "aws_vpc.MyVPC": {
                    "type": "aws_vpc",
                    "depends_on": [],
                    "primary": {
                        "id": "vpc-033f719fd20f5be9a",
                        "attributes": {
                            "arn": "arn:aws:ec2:us-east-1:230617609085:vpc/vpc-033f719fd20f5be9a",
                            "assign_generated_ipv6_cidr_block": "false",
                            "cidr_block": "10.0.0.0/16",
                            "default_network_acl_id": "acl-0057c54459172e9b4",
                            "default_route_table_id": "rtb-07d48e1ad40921c53",
                            "default_security_group_id": "sg-0ca88b41baab31aab",
                            "dhcp_options_id": "dopt-e3c88598",
                            "enable_classiclink": "false",
                            "enable_classiclink_dns_support": "false",
                            "enable_dns_hostnames": "true",
                            "enable_dns_support": "true",
                            "id": "vpc-033f719fd20f5be9a",
                            "instance_tenancy": "default",
                            "ipv6_association_id": "",
                            "ipv6_cidr_block": "",
                            "main_route_table_id": "rtb-07d48e1ad40921c53",
                            "owner_id": "230617609085",
                            "tags.%": "1",
                            "tags.Name": "MyVPC"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "data.aws_availability_zones.available": {
                    "type": "aws_availability_zones",
                    "depends_on": [],
                    "primary": {
                        "id": "2019-02-13 10:13:06.865949455 +0000 UTC",
                        "attributes": {
                            "id": "2019-02-13 10:13:06.865949455 +0000 UTC",
                            "names.#": "6",
                            "names.0": "us-east-1a",
                            "names.1": "us-east-1b",
                            "names.2": "us-east-1c",
                            "names.3": "us-east-1d",
                            "names.4": "us-east-1e",
                            "names.5": "us-east-1f",
                            "zone_ids.#": "6",
                            "zone_ids.0": "use1-az2",
                            "zone_ids.1": "use1-az4",
                            "zone_ids.2": "use1-az6",
                            "zone_ids.3": "use1-az1",
                            "zone_ids.4": "use1-az3",
                            "zone_ids.5": "use1-az5"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.aws"
                },
                "data.template_cloudinit_config.docker_server_config.0": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.consul_client_docker.*",
                        "data.template_file.docker_install"
                    ],
                    "primary": {
                        "id": "1209436776",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "1209436776",
                            "part.#": "2",
                            "part.0.content": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"docker-server1\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n\n\n# Install \u0026 configure DNS for consul resolution\nsudo apt-get install -y dnsmasq\ncat \u003c\u003c EOF | sudo tee /etc/dnsmasq.d/10-consul\n# Enable forward lookup of the 'consul' domain:\nserver=/consul/127.0.0.1#8600\n\nEOF\n\nsudo systemctl restart dnsmasq\n",
                            "part.0.content_type": "",
                            "part.0.filename": "",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/usr/bin/env bash\n\n# Install Docker-ce\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\nsudo apt -qq update \u0026\u003e /dev/null\nsudo apt install -yqq apt-transport-https ca-certificates curl gnupg2 software-properties-common docker-ce \u0026\u003e /dev/null\n\n\n# Build \u0026 run the dummy container\nsudo mkdir /opt/docker\ncd /opt/docker\nsudo wget https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/Dockerfile\nsudo wget -O /opt/docker/my_dummy_exporter.py https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/my_dummy_exporter.py\nsudo docker build -t dummyapp .\nsudo docker run --name=dummyapp -v /opt/docker/my_dummy_exporter.py:/tmp/my_dummy_exporter.py -d -p 65433:65433 dummyapp\n\n\n# Register the dummy app in consul\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/dummy-app.json\n{\n  \"service\": {\n    \"name\": \"dummy-app\",\n    \"id\": \"dummy-app\",\n    \"port\": 65433,\n    \"check\": {\n      \"name\": \"dummy_app port 65433 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:65433\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n\n\n# Build \u0026 run the filebeat container\ncat \u003c\u003c EOF | sudo tee /opt/docker/filebeat.yml\nfilebeat.config:\n  prospectors:\n    path: /usr/share/filebeat/prospectors.d/*.yml\n    reload.enabled: false\n  modules:\n    path: /usr/share/filebeat/modules.d/*.yml\n    reload.enabled: false\n\nfilebeat.autodiscover:\n  providers:\n    - type: docker\n      hints.enabled: true\n\nprocessors:\n- add_cloud_metadata: ~\n\n#output.elasticsearch:\n#  hosts: [\"10.0.1.110:9200\"]\n\noutput.logstash:\n   hosts: [\"logstash.service.consul:5044\"]\n#  hosts: [\"10.0.1.110:5044\"]\n\nsetup.kibana:\n   host: \"kibana.service.consul:5601\"\n#  host: \"10.0.1.110:5601\"\n\nEOF\n\n\nsudo docker run -d \\\n  --name=filebeat \\\n  --user=root \\\n  -v /opt/docker/filebeat.yml:/usr/share/filebeat/filebeat.yml \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers:ro \\\n  -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n  docker.elastic.co/beats/filebeat:6.5.4 filebeat -e -strict.perms=false\n",
                            "part.1.content_type": "",
                            "part.1.filename": "",
                            "part.1.merge_type": "",
                            "rendered": "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"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_cloudinit_config.docker_server_config.1": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.consul_client_docker.*",
                        "data.template_file.docker_install"
                    ],
                    "primary": {
                        "id": "4126487470",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "4126487470",
                            "part.#": "2",
                            "part.0.content": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"docker-server2\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n\n\n# Install \u0026 configure DNS for consul resolution\nsudo apt-get install -y dnsmasq\ncat \u003c\u003c EOF | sudo tee /etc/dnsmasq.d/10-consul\n# Enable forward lookup of the 'consul' domain:\nserver=/consul/127.0.0.1#8600\n\nEOF\n\nsudo systemctl restart dnsmasq\n",
                            "part.0.content_type": "",
                            "part.0.filename": "",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/usr/bin/env bash\n\n# Install Docker-ce\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\nsudo apt -qq update \u0026\u003e /dev/null\nsudo apt install -yqq apt-transport-https ca-certificates curl gnupg2 software-properties-common docker-ce \u0026\u003e /dev/null\n\n\n# Build \u0026 run the dummy container\nsudo mkdir /opt/docker\ncd /opt/docker\nsudo wget https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/Dockerfile\nsudo wget -O /opt/docker/my_dummy_exporter.py https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/my_dummy_exporter.py\nsudo docker build -t dummyapp .\nsudo docker run --name=dummyapp -v /opt/docker/my_dummy_exporter.py:/tmp/my_dummy_exporter.py -d -p 65433:65433 dummyapp\n\n\n# Register the dummy app in consul\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/dummy-app.json\n{\n  \"service\": {\n    \"name\": \"dummy-app\",\n    \"id\": \"dummy-app\",\n    \"port\": 65433,\n    \"check\": {\n      \"name\": \"dummy_app port 65433 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:65433\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n\n\n# Build \u0026 run the filebeat container\ncat \u003c\u003c EOF | sudo tee /opt/docker/filebeat.yml\nfilebeat.config:\n  prospectors:\n    path: /usr/share/filebeat/prospectors.d/*.yml\n    reload.enabled: false\n  modules:\n    path: /usr/share/filebeat/modules.d/*.yml\n    reload.enabled: false\n\nfilebeat.autodiscover:\n  providers:\n    - type: docker\n      hints.enabled: true\n\nprocessors:\n- add_cloud_metadata: ~\n\n#output.elasticsearch:\n#  hosts: [\"10.0.1.110:9200\"]\n\noutput.logstash:\n   hosts: [\"logstash.service.consul:5044\"]\n#  hosts: [\"10.0.1.110:5044\"]\n\nsetup.kibana:\n   host: \"kibana.service.consul:5601\"\n#  host: \"10.0.1.110:5601\"\n\nEOF\n\n\nsudo docker run -d \\\n  --name=filebeat \\\n  --user=root \\\n  -v /opt/docker/filebeat.yml:/usr/share/filebeat/filebeat.yml \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers:ro \\\n  -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n  docker.elastic.co/beats/filebeat:6.5.4 filebeat -e -strict.perms=false\n",
                            "part.1.content_type": "",
                            "part.1.filename": "",
                            "part.1.merge_type": "",
                            "rendered": "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"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_cloudinit_config.elk_config": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.consul_client_elk"
                    ],
                    "primary": {
                        "id": "2107156146",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "2107156146",
                            "part.#": "2",
                            "part.0.content": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"elk\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n\n\n# Install \u0026 configure DNS for consul resolution\nsudo apt-get install -y dnsmasq\ncat \u003c\u003c EOF | sudo tee /etc/dnsmasq.d/10-consul\n# Enable forward lookup of the 'consul' domain:\nserver=/consul/127.0.0.1#8600\n\nEOF\n\nsudo systemctl restart dnsmasq\n",
                            "part.0.content_type": "",
                            "part.0.filename": "",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n\n# Install ELK\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\nwget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -\necho \"deb https://artifacts.elastic.co/packages/6.x/apt stable main\" | sudo tee -a /etc/apt/sources.list.d/elastic-6.x.list\nsudo apt-get -qq update\nsudo apt-get install -y openjdk-8-jre-headless openjdk-8-jdk-headless\nsudo apt-get install -y elasticsearch logstash kibana\nsudo systemctl daemon-reload\nsudo systemctl enable elasticsearch logstash kibana\nsudo systemctl start elasticsearch logstash kibana\n\n\n# Configure Elasticsearch\ncat \u003c\u003c EOF | sudo tee --append /etc/elasticsearch/elasticsearch.yml\n\nnetwork.host: 0.0.0.0\nhttp.port: 9200\n\nEOF\n\n\n# Configure LogStash\ncat \u003c\u003c EOF | sudo tee /etc/logstash/conf.d/demo-metrics-pipeline.conf\ninput {\n  beats {\n    port =\u003e 5044\n  }\n}\n\n# The filter part of this file is commented out to indicate that it\n# is optional.\n# filter {\n#\n# }\n\noutput {\n  elasticsearch {\n    hosts =\u003e \"localhost:9200\"\n    manage_template =\u003e false\n    index =\u003e \"%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}\"\n  }\n}\n\nEOF\n\n\n# Configure Kibana\ncat \u003c\u003c EOF | sudo tee --append /etc/kibana/kibana.yml\n\nserver.name: kibana\nserver.host: \"0.0.0.0\"\nelasticsearch.url: \"http://localhost:9200\"\n\nEOF\n\nsudo systemctl restart kibana\n\n\n# Register in consul\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/elasticsearch.json\n{\n  \"service\": {\n    \"name\": \"elasticsearch\",\n    \"id\": \"elasticsearch\",\n    \"port\": 9200,\n    \"check\": {\n      \"name\": \"elasticsearch port 9200 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:9200/_cluster/health?pretty=true\"\n    }\n  }\n}\n\nEOF\n\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/logstash.json\n{\n  \"service\": {\n    \"name\": \"logstash\",\n    \"id\": \"logstash\",\n    \"port\": 5044,\n    \"check\": {\n      \"name\": \"logstash port 5044 tcp check\",\n      \"interval\": \"5s\",\n      \"TCP\": \"localhost:5044\"\n    }\n  }\n}\n\nEOF\n\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/kibana.json\n{\n  \"service\": {\n    \"name\": \"kibana\",\n    \"id\": \"kibana\",\n    \"port\": 5601,\n    \"check\": {\n      \"name\": \"kibana port 5601 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:5601\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n",
                            "part.1.content_type": "",
                            "part.1.filename": "",
                            "part.1.merge_type": "",
                            "rendered": "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"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_cloudinit_config.grafana_config": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.consul_client_grafana",
                        "data.template_file.grafana_install"
                    ],
                    "primary": {
                        "id": "3051357",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "3051357",
                            "part.#": "2",
                            "part.0.content": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"grafana\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n\n\n# Install \u0026 configure DNS for consul resolution\nsudo apt-get install -y dnsmasq\ncat \u003c\u003c EOF | sudo tee /etc/dnsmasq.d/10-consul\n# Enable forward lookup of the 'consul' domain:\nserver=/consul/127.0.0.1#8600\n\nEOF\n\nsudo systemctl restart dnsmasq\n",
                            "part.0.content_type": "",
                            "part.0.filename": "",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n\n# Install Grafana\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\necho \"deb https://packages.grafana.com/oss/deb stable main\" \u003e /etc/apt/sources.list.d/grafana.list\ncurl https://packages.grafana.com/gpg.key | sudo apt-key add -\nsudo apt -qq update\nsudo apt install -y grafana\nsudo systemctl enable grafana-server.service\n\nsudo sed -i 's/;admin_user = admin/admin_user = admin/g' /etc/grafana/grafana.ini\nsudo sed -i 's/;admin_password = admin/admin_password = admin/g' /etc/grafana/grafana.ini\n\ncat \u003c\u003c EOF | sudo tee /etc/grafana/provisioning/datasources/datasource.yml\napiVersion: 1\ndatasources:\n - name: Prometheus\n   type: prometheus\n   access: proxy\n   orgId: 1\n   url: http://prometheus.service.consul:9090\n#   url: http://10.0.1.128:9090\n   isDefault: true\n   version: 1\neditable: false\nEOF\n\ncat \u003c\u003c EOF | sudo tee /etc/grafana/provisioning/dashboards/all.yml\napiVersion: 1\n\nproviders:\n- name: 'default'\n  orgId: 1\n  folder: ''\n  type: file\n  disableDeletion: false\n  updateIntervalSeconds: 10 #how often Grafana will scan for changed dashboards\n  options:\n    path: /var/lib/grafana/dashboards\nEOF\n\nsudo mkdir /var/lib/grafana/dashboards\ncat \u003c\u003c EOF | sudo tee /var/lib/grafana/dashboards/Dummy_Exporter_Dashboard.json\n{\n  \"annotations\": {\n    \"list\": [\n      {\n        \"builtIn\": 1,\n        \"datasource\": \"-- Grafana --\",\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations \u0026 Alerts\",\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"editable\": true,\n  \"gnetId\": null,\n  \"graphTooltip\": 0,\n  \"links\": [],\n  \"panels\": [\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"fill\": 1,\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 4,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"rate(DummyService_errors[2m])\",\n          \"format\": \"time_series\",\n          \"hide\": false,\n          \"intervalFactor\": 1,\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Number of errors per sec\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"fill\": 1,\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 10\n      },\n      \"id\": 2,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"rate(DummyService_requests[2m])\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Number of requests per sec\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    }\n  ],\n  \"schemaVersion\": 16,\n  \"style\": \"dark\",\n  \"tags\": [],\n  \"templating\": {\n    \"list\": []\n  },\n  \"time\": {\n    \"from\": \"now-15m\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n      \"5s\",\n      \"10s\",\n      \"30s\",\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"1d\"\n    ],\n    \"time_options\": [\n      \"5m\",\n      \"15m\",\n      \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\",\n      \"2d\",\n      \"7d\",\n      \"30d\"\n    ]\n  },\n  \"timezone\": \"\",\n  \"title\": \"Dummy Exporter Dashboard\",\n  \"uid\": \"MX74Y8Qik\",\n  \"version\": 1\n}\n\nEOF\n\nsudo systemctl restart grafana-server.service\n\n\n# Register in consul\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/grafana.json\n{\n  \"service\": {\n    \"name\": \"grafana\",\n    \"id\": \"grafana\",\n    \"port\": 3000,\n    \"check\": {\n      \"name\": \"grafana port 3000 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:3000\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n",
                            "part.1.content_type": "",
                            "part.1.filename": "",
                            "part.1.merge_type": "",
                            "rendered": "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"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_cloudinit_config.prometheus_config": {
                    "type": "template_cloudinit_config",
                    "depends_on": [
                        "data.template_file.consul_client_prometheus"
                    ],
                    "primary": {
                        "id": "2319982285",
                        "attributes": {
                            "base64_encode": "true",
                            "gzip": "true",
                            "id": "2319982285",
                            "part.#": "2",
                            "part.0.content": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"prometheus\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n\n\n# Install \u0026 configure DNS for consul resolution\nsudo apt-get install -y dnsmasq\ncat \u003c\u003c EOF | sudo tee /etc/dnsmasq.d/10-consul\n# Enable forward lookup of the 'consul' domain:\nserver=/consul/127.0.0.1#8600\n\nEOF\n\nsudo systemctl restart dnsmasq\n",
                            "part.0.content_type": "",
                            "part.0.filename": "",
                            "part.0.merge_type": "",
                            "part.1.content": "#!/bin/bash\n\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\nsudo apt -qq update\nsudo apt-get install -y prometheus\ncat \u003c\u003c EOF | sudo tee --append /etc/prometheus/prometheus.yml\n\n  - job_name: 'consul'\n    scrape_interval: 5s\n    consul_sd_configs:\n      - datacenter: opsschool\n        server: 'localhost:8500'\n\nEOF\nsudo systemctl restart prometheus\n\n# Register Prometheus in consul\ncat \u003c\u003c EOF | sudo tee  /etc/consul.d/prometheus.json\n{\n  \"service\": {\n    \"name\": \"prometheus\",\n    \"id\": \"prometheus\",\n    \"port\": 9090,\n    \"check\": {\n      \"name\": \"prometheus port 9090 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:9090\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n",
                            "part.1.content_type": "",
                            "part.1.filename": "",
                            "part.1.merge_type": "",
                            "rendered": "H4sIAAAAAAAA/7xW/08bOxL/3RL/w9xSwZ163g0ctGWPrUQhcFELRAm0VyG0ctaTxMVrL7Y3kNfX//3J+yXfCr8+JJT1zMcz45mPZ3yqlUPl6M28wBjyUjpRMOOiXDwj/y+MdKk4M/MkuOxddj9d316dnQy+B8Sv6Fc0VmgVw17Y2SJbhNJV0BZZ2DZM2TEa2lWZ5kJNYng/Em4FUDl3+OyiQjKhtsilyPE3+9v/iEpropFQEaoZjJidEosOKBKC2VRDcGHYaCTUBHp9G4ZhQPqD3teTm27a6ydv/pmVRsLUuSKOor13R+H+4UHY/EaSObQuytExypljkdQZk1QUs4N/tdZ7yjompbfPsUDFUWUCa0e25BpY4ejEB/T4CGXBmUPY+RhxnEWqlHIDM398BFFbhFL9IYo1bOPyHF029Q5PtbKlrFxlHCKXF6Q6DrVfNGS10tvwx7NxFBmUyCzacMrsVGTaFGGm86hGRnvhQdhpFmm1SKVQ5XPKcv7uwBt64cwrIdTxrrjdPGU2zTWHt88Nphbms2YJVR2rDFfVbEBkG4boyqLx1Gx64MIALSDShYuyFzXoskYT8k2dKdXaLoe4vsF/jMUk/GG1go+wOAgcH3evz8lPAhAwPkPjhMWUcW6CGII3S2YF//YQT5qUi0q5EupSmaFyWKl1YW021bpRosrMvHBeU559+nqAb7+Mzr/9p7N39P1z/7lnJknSWBGWjSSmBnPtMMVnzIIYnClxTV0zL82mmD2s6iWyGaZapQ5NLhRzuKo16Mw8/aGFCmK4CwqjZ4KjSdiTBccm6QPOk4YwFs0MTSWdMVli4o0E995M9RcozTFVLPcOvKUc3RRLGzSIAFUVqM2MKFwdqF2JxUNqH0EMYyYtVkLyi/iCkG04NejvVmnRwA5MDFMO9JNCY6eiAD2GsZYcja0r7mGM8zUqZlP9pIAOGmHc8nJZuHWSrPGoCqEiTWmwpbQPWGS4QTI7tw5z3vy25hrsBtuC7vV5QO5ulXD35Azr7AitktM1D8CFzfQMzRzYBJUjA3wshUGbKHRP2jxQraRQGDpmJujIydihaXWtkNwNa2v35NaiaSpLLowui3bR752dC4nJytHbAxSCkwFax4xLtKJjJmRpkHTVTBitclQuubi+PPl/f3B9Okz2SfcZs6FH9w0md0DHELxsNYB72NmBRZ83uQe/EsHCavJiP6nTA7QQnI5fPwjQugFQLkyy3kq8gwFKzXhS2X0Q0ndc+N9tH95cnvSu+r0z8llIORQTxWQy7F30rm7IjchRl27odDHELDkk5K5po/fkG1MO+ad5Uo1a6rnZ1qQid0Wfmi2Zk8AZ5lpRUwWxqayvEayTahNUFWkT4xnchAQ7kC24fHY1hLE2LacNWi1Lz8H12dWOLToHrmzO7CPJmIPjY+hen8OfsH4HGkjIo70Obbi1Dd06+LE2T8xwkFo/lNXddVOE3Rq2C1znTKiY1O0gWcyv/fdhJ+yEe9sf3nU65MXUmZqfiwj/lveJZ0n1LmmiQQ5UwK6NSkuRWUf3Qsz2wyia7NbJYYWLrC5NhjaUwrpFolceEa8mf9laX8k/pazwD5Xa1xK+8hnOc0kIAIUfelQ17XiR/qrt2sywAlPhp9eMyRgObSVvhwFPa/7YuOn/FJbjLobFsGunA9S1jGG3urBTbV384bDT2a3L+EoVV45KtmGAE2EdGugvxCBU2+FfzsXG1F/JgJ/89Zxv7kcQw09ST7LXhlgg+MvyQhs/yo86R51G0g7in6Qdj78ZBb+r2lM94KDe0g7UoM2933Rol3KP9bLmTbvMp7cUVKhfxP//eu2K+LbSpm3zglC6Rf4KAAD//2dBmSsfDAAA"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.consul_client_docker.0": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "6ffdb78157e4a8ff4179acbea8c6f1cc3e0a5ec6dc86014edd0a531d1b815ce4",
                        "attributes": {
                            "id": "6ffdb78157e4a8ff4179acbea8c6f1cc3e0a5ec6dc86014edd0a531d1b815ce4",
                            "rendered": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"docker-server1\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n\n\n# Install \u0026 configure DNS for consul resolution\nsudo apt-get install -y dnsmasq\ncat \u003c\u003c EOF | sudo tee /etc/dnsmasq.d/10-consul\n# Enable forward lookup of the 'consul' domain:\nserver=/consul/127.0.0.1#8600\n\nEOF\n\nsudo systemctl restart dnsmasq\n",
                            "template": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/${consul_version}/consul_${consul_version}_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n  ${config}\n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n\n\n# Install \u0026 configure DNS for consul resolution\nsudo apt-get install -y dnsmasq\ncat \u003c\u003c EOF | sudo tee /etc/dnsmasq.d/10-consul\n# Enable forward lookup of the 'consul' domain:\nserver=/consul/127.0.0.1#8600\n\nEOF\n\nsudo systemctl restart dnsmasq\n",
                            "vars.%": "2",
                            "vars.config": "     \"node_name\": \"docker-server1\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    ",
                            "vars.consul_version": "1.4.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.consul_client_docker.1": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "4d55f5b008432cf9bcc09bac8f5c9144d3994e3c46e10d99ddf895188a0e6d94",
                        "attributes": {
                            "id": "4d55f5b008432cf9bcc09bac8f5c9144d3994e3c46e10d99ddf895188a0e6d94",
                            "rendered": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"docker-server2\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n\n\n# Install \u0026 configure DNS for consul resolution\nsudo apt-get install -y dnsmasq\ncat \u003c\u003c EOF | sudo tee /etc/dnsmasq.d/10-consul\n# Enable forward lookup of the 'consul' domain:\nserver=/consul/127.0.0.1#8600\n\nEOF\n\nsudo systemctl restart dnsmasq\n",
                            "template": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/${consul_version}/consul_${consul_version}_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n  ${config}\n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n\n\n# Install \u0026 configure DNS for consul resolution\nsudo apt-get install -y dnsmasq\ncat \u003c\u003c EOF | sudo tee /etc/dnsmasq.d/10-consul\n# Enable forward lookup of the 'consul' domain:\nserver=/consul/127.0.0.1#8600\n\nEOF\n\nsudo systemctl restart dnsmasq\n",
                            "vars.%": "2",
                            "vars.config": "     \"node_name\": \"docker-server2\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    ",
                            "vars.consul_version": "1.4.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.consul_client_elk": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "43af7e662c04432bcb449e807697f22f5749fb8ded7724ed69537a2feb3310a9",
                        "attributes": {
                            "id": "43af7e662c04432bcb449e807697f22f5749fb8ded7724ed69537a2feb3310a9",
                            "rendered": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"elk\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n\n\n# Install \u0026 configure DNS for consul resolution\nsudo apt-get install -y dnsmasq\ncat \u003c\u003c EOF | sudo tee /etc/dnsmasq.d/10-consul\n# Enable forward lookup of the 'consul' domain:\nserver=/consul/127.0.0.1#8600\n\nEOF\n\nsudo systemctl restart dnsmasq\n",
                            "template": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/${consul_version}/consul_${consul_version}_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n  ${config}\n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n\n\n# Install \u0026 configure DNS for consul resolution\nsudo apt-get install -y dnsmasq\ncat \u003c\u003c EOF | sudo tee /etc/dnsmasq.d/10-consul\n# Enable forward lookup of the 'consul' domain:\nserver=/consul/127.0.0.1#8600\n\nEOF\n\nsudo systemctl restart dnsmasq\n",
                            "vars.%": "2",
                            "vars.config": "     \"node_name\": \"elk\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    ",
                            "vars.consul_version": "1.4.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.consul_client_grafana": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "a1cb3c617cfe0be29480741102ce9235d789ec390d0f2cb0ad3c046db265870c",
                        "attributes": {
                            "id": "a1cb3c617cfe0be29480741102ce9235d789ec390d0f2cb0ad3c046db265870c",
                            "rendered": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"grafana\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n\n\n# Install \u0026 configure DNS for consul resolution\nsudo apt-get install -y dnsmasq\ncat \u003c\u003c EOF | sudo tee /etc/dnsmasq.d/10-consul\n# Enable forward lookup of the 'consul' domain:\nserver=/consul/127.0.0.1#8600\n\nEOF\n\nsudo systemctl restart dnsmasq\n",
                            "template": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/${consul_version}/consul_${consul_version}_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n  ${config}\n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n\n\n# Install \u0026 configure DNS for consul resolution\nsudo apt-get install -y dnsmasq\ncat \u003c\u003c EOF | sudo tee /etc/dnsmasq.d/10-consul\n# Enable forward lookup of the 'consul' domain:\nserver=/consul/127.0.0.1#8600\n\nEOF\n\nsudo systemctl restart dnsmasq\n",
                            "vars.%": "2",
                            "vars.config": "     \"node_name\": \"grafana\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    ",
                            "vars.consul_version": "1.4.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.consul_client_prometheus": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "d314b473adbfffe0393a375480b1f31f81fc1af7e32ffc610cb0253c3cfef24d",
                        "attributes": {
                            "id": "d314b473adbfffe0393a375480b1f31f81fc1af7e32ffc610cb0253c3cfef24d",
                            "rendered": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"prometheus\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n\n\n# Install \u0026 configure DNS for consul resolution\nsudo apt-get install -y dnsmasq\ncat \u003c\u003c EOF | sudo tee /etc/dnsmasq.d/10-consul\n# Enable forward lookup of the 'consul' domain:\nserver=/consul/127.0.0.1#8600\n\nEOF\n\nsudo systemctl restart dnsmasq\n",
                            "template": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/${consul_version}/consul_${consul_version}_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n  ${config}\n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n\n\n# Install \u0026 configure DNS for consul resolution\nsudo apt-get install -y dnsmasq\ncat \u003c\u003c EOF | sudo tee /etc/dnsmasq.d/10-consul\n# Enable forward lookup of the 'consul' domain:\nserver=/consul/127.0.0.1#8600\n\nEOF\n\nsudo systemctl restart dnsmasq\n",
                            "vars.%": "2",
                            "vars.config": "     \"node_name\": \"prometheus\",\n     \"enable_script_checks\": true,\n     \"server\": false\n    ",
                            "vars.consul_version": "1.4.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.consul_server.0": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "73aad22148a5618fe2bb7ffba8e2ce2d9a174f62a45aadaec815f23976a55821",
                        "attributes": {
                            "id": "73aad22148a5618fe2bb7ffba8e2ce2d9a174f62a45aadaec815f23976a55821",
                            "rendered": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"consul-server1\",\n     \"server\": true,\n     \"bootstrap_expect\": 3,\n     \"ui\": true,\n     \"client_addr\": \"0.0.0.0\"\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n\n\n# Install \u0026 configure DNS for consul resolution\nsudo apt-get install -y dnsmasq\ncat \u003c\u003c EOF | sudo tee /etc/dnsmasq.d/10-consul\n# Enable forward lookup of the 'consul' domain:\nserver=/consul/127.0.0.1#8600\n\nEOF\n\nsudo systemctl restart dnsmasq\n",
                            "template": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/${consul_version}/consul_${consul_version}_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n  ${config}\n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n\n\n# Install \u0026 configure DNS for consul resolution\nsudo apt-get install -y dnsmasq\ncat \u003c\u003c EOF | sudo tee /etc/dnsmasq.d/10-consul\n# Enable forward lookup of the 'consul' domain:\nserver=/consul/127.0.0.1#8600\n\nEOF\n\nsudo systemctl restart dnsmasq\n",
                            "vars.%": "2",
                            "vars.config": "     \"node_name\": \"consul-server1\",\n     \"server\": true,\n     \"bootstrap_expect\": 3,\n     \"ui\": true,\n     \"client_addr\": \"0.0.0.0\"\n    ",
                            "vars.consul_version": "1.4.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.consul_server.1": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "98fbc1a20969d685f426cfabd9b028bae12de6380ef20e25df39fba2aa79bd4f",
                        "attributes": {
                            "id": "98fbc1a20969d685f426cfabd9b028bae12de6380ef20e25df39fba2aa79bd4f",
                            "rendered": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"consul-server2\",\n     \"server\": true,\n     \"bootstrap_expect\": 3,\n     \"ui\": true,\n     \"client_addr\": \"0.0.0.0\"\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n\n\n# Install \u0026 configure DNS for consul resolution\nsudo apt-get install -y dnsmasq\ncat \u003c\u003c EOF | sudo tee /etc/dnsmasq.d/10-consul\n# Enable forward lookup of the 'consul' domain:\nserver=/consul/127.0.0.1#8600\n\nEOF\n\nsudo systemctl restart dnsmasq\n",
                            "template": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/${consul_version}/consul_${consul_version}_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n  ${config}\n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n\n\n# Install \u0026 configure DNS for consul resolution\nsudo apt-get install -y dnsmasq\ncat \u003c\u003c EOF | sudo tee /etc/dnsmasq.d/10-consul\n# Enable forward lookup of the 'consul' domain:\nserver=/consul/127.0.0.1#8600\n\nEOF\n\nsudo systemctl restart dnsmasq\n",
                            "vars.%": "2",
                            "vars.config": "     \"node_name\": \"consul-server2\",\n     \"server\": true,\n     \"bootstrap_expect\": 3,\n     \"ui\": true,\n     \"client_addr\": \"0.0.0.0\"\n    ",
                            "vars.consul_version": "1.4.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.consul_server.2": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "c5177e090ebc9ba785bcb02eaedbfa7131ade60496279fcd2ffd0210776ce1ad",
                        "attributes": {
                            "id": "c5177e090ebc9ba785bcb02eaedbfa7131ade60496279fcd2ffd0210776ce1ad",
                            "rendered": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/1.4.0/consul_1.4.0_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n       \"node_name\": \"consul-server3\",\n     \"server\": true,\n     \"bootstrap_expect\": 3,\n     \"ui\": true,\n     \"client_addr\": \"0.0.0.0\"\n    \n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n\n\n# Install \u0026 configure DNS for consul resolution\nsudo apt-get install -y dnsmasq\ncat \u003c\u003c EOF | sudo tee /etc/dnsmasq.d/10-consul\n# Enable forward lookup of the 'consul' domain:\nserver=/consul/127.0.0.1#8600\n\nEOF\n\nsudo systemctl restart dnsmasq\n",
                            "template": "#!/usr/bin/env bash\nset -e\n\necho \"Grabbing IPs...\"\nPRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n\necho \"Installing dependencies...\"\nsudo apt-get -qq update \u0026\u003e/dev/null\nsudo apt-get -yqq install unzip \u0026\u003e/dev/null\n\necho \"Fetching Consul...\"\ncd /tmp\ncurl -sLo consul.zip https://releases.hashicorp.com/consul/${consul_version}/consul_${consul_version}_linux_amd64.zip\n\necho \"Installing Consul...\"\nunzip consul.zip \u003e/dev/null\nsudo chmod +x consul\nsudo mv consul /usr/local/bin/consul\n\n# Setup Consul\nsudo mkdir -p /opt/consul\nsudo mkdir -p /etc/consul.d\nsudo mkdir -p /run/consul\nsudo tee /etc/consul.d/config.json \u003e /dev/null \u003c\u003cEOF\n{\n  \"advertise_addr\": \"$PRIVATE_IP\",\n  \"data_dir\": \"/opt/consul\",\n  \"datacenter\": \"opsschool\",\n  \"encrypt\": \"uDBV4e+LbFW3019YKPxIrg==\",\n  \"disable_remote_exec\": true,\n  \"disable_update_check\": true,\n  \"leave_on_terminate\": true,\n  \"retry_join\": [\"provider=aws tag_key=consul_server tag_value=true\"],\n  ${config}\n}\nEOF\n\n# Create user \u0026 grant ownership of folders\nsudo useradd consul\nsudo chown -R consul:consul /opt/consul /etc/consul.d /run/consul\n\n\n# Configure consul service\nsudo tee /etc/systemd/system/consul.service \u003e /dev/null \u003c\u003c\"EOF\"\n[Unit]\nDescription=Consul service discovery agent\nRequires=network-online.target\nAfter=network.target\n\n[Service]\nUser=consul\nGroup=consul\nPIDFile=/run/consul/consul.pid\nRestart=on-failure\nEnvironment=GOMAXPROCS=2\nExecStartPre=[ -f \"/run/consul/consul.pid\" ] \u0026\u0026 /usr/bin/rm -f /run/consul/consul.pid\nExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d\nExecReload=/bin/kill -s HUP $MAINPID\nKillSignal=SIGINT\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable consul.service\nsudo systemctl start consul.service\n\n\n# Install \u0026 configure DNS for consul resolution\nsudo apt-get install -y dnsmasq\ncat \u003c\u003c EOF | sudo tee /etc/dnsmasq.d/10-consul\n# Enable forward lookup of the 'consul' domain:\nserver=/consul/127.0.0.1#8600\n\nEOF\n\nsudo systemctl restart dnsmasq\n",
                            "vars.%": "2",
                            "vars.config": "     \"node_name\": \"consul-server3\",\n     \"server\": true,\n     \"bootstrap_expect\": 3,\n     \"ui\": true,\n     \"client_addr\": \"0.0.0.0\"\n    ",
                            "vars.consul_version": "1.4.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.docker_install": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_instance.elk"
                    ],
                    "primary": {
                        "id": "2e1449e41f62472a92e75dcc134d2702341f800fa27bc2e9d84ac3df6be179ff",
                        "attributes": {
                            "id": "2e1449e41f62472a92e75dcc134d2702341f800fa27bc2e9d84ac3df6be179ff",
                            "rendered": "#!/usr/bin/env bash\n\n# Install Docker-ce\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\nsudo apt -qq update \u0026\u003e /dev/null\nsudo apt install -yqq apt-transport-https ca-certificates curl gnupg2 software-properties-common docker-ce \u0026\u003e /dev/null\n\n\n# Build \u0026 run the dummy container\nsudo mkdir /opt/docker\ncd /opt/docker\nsudo wget https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/Dockerfile\nsudo wget -O /opt/docker/my_dummy_exporter.py https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/my_dummy_exporter.py\nsudo docker build -t dummyapp .\nsudo docker run --name=dummyapp -v /opt/docker/my_dummy_exporter.py:/tmp/my_dummy_exporter.py -d -p 65433:65433 dummyapp\n\n\n# Register the dummy app in consul\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/dummy-app.json\n{\n  \"service\": {\n    \"name\": \"dummy-app\",\n    \"id\": \"dummy-app\",\n    \"port\": 65433,\n    \"check\": {\n      \"name\": \"dummy_app port 65433 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:65433\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n\n\n# Build \u0026 run the filebeat container\ncat \u003c\u003c EOF | sudo tee /opt/docker/filebeat.yml\nfilebeat.config:\n  prospectors:\n    path: /usr/share/filebeat/prospectors.d/*.yml\n    reload.enabled: false\n  modules:\n    path: /usr/share/filebeat/modules.d/*.yml\n    reload.enabled: false\n\nfilebeat.autodiscover:\n  providers:\n    - type: docker\n      hints.enabled: true\n\nprocessors:\n- add_cloud_metadata: ~\n\n#output.elasticsearch:\n#  hosts: [\"10.0.1.110:9200\"]\n\noutput.logstash:\n   hosts: [\"logstash.service.consul:5044\"]\n#  hosts: [\"10.0.1.110:5044\"]\n\nsetup.kibana:\n   host: \"kibana.service.consul:5601\"\n#  host: \"10.0.1.110:5601\"\n\nEOF\n\n\nsudo docker run -d \\\n  --name=filebeat \\\n  --user=root \\\n  -v /opt/docker/filebeat.yml:/usr/share/filebeat/filebeat.yml \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers:ro \\\n  -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n  docker.elastic.co/beats/filebeat:6.5.4 filebeat -e -strict.perms=false\n",
                            "template": "#!/usr/bin/env bash\n\n# Install Docker-ce\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\nsudo apt -qq update \u0026\u003e /dev/null\nsudo apt install -yqq apt-transport-https ca-certificates curl gnupg2 software-properties-common docker-ce \u0026\u003e /dev/null\n\n\n# Build \u0026 run the dummy container\nsudo mkdir /opt/docker\ncd /opt/docker\nsudo wget https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/Dockerfile\nsudo wget -O /opt/docker/my_dummy_exporter.py https://raw.githubusercontent.com/sharonnavon/project/master/terraform/templates/my_dummy_exporter.py\nsudo docker build -t dummyapp .\nsudo docker run --name=dummyapp -v /opt/docker/my_dummy_exporter.py:/tmp/my_dummy_exporter.py -d -p 65433:65433 dummyapp\n\n\n# Register the dummy app in consul\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/dummy-app.json\n{\n  \"service\": {\n    \"name\": \"dummy-app\",\n    \"id\": \"dummy-app\",\n    \"port\": 65433,\n    \"check\": {\n      \"name\": \"dummy_app port 65433 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:65433\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n\n\n# Build \u0026 run the filebeat container\ncat \u003c\u003c EOF | sudo tee /opt/docker/filebeat.yml\nfilebeat.config:\n  prospectors:\n    path: /usr/share/filebeat/prospectors.d/*.yml\n    reload.enabled: false\n  modules:\n    path: /usr/share/filebeat/modules.d/*.yml\n    reload.enabled: false\n\nfilebeat.autodiscover:\n  providers:\n    - type: docker\n      hints.enabled: true\n\nprocessors:\n- add_cloud_metadata: ~\n\n#output.elasticsearch:\n#  hosts: [\"${elk_priv_ip}:9200\"]\n\noutput.logstash:\n   hosts: [\"logstash.service.consul:5044\"]\n#  hosts: [\"${elk_priv_ip}:5044\"]\n\nsetup.kibana:\n   host: \"kibana.service.consul:5601\"\n#  host: \"${elk_priv_ip}:5601\"\n\nEOF\n\n\nsudo docker run -d \\\n  --name=filebeat \\\n  --user=root \\\n  -v /opt/docker/filebeat.yml:/usr/share/filebeat/filebeat.yml \\\n  -v /var/lib/docker/containers:/var/lib/docker/containers:ro \\\n  -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n  docker.elastic.co/beats/filebeat:6.5.4 filebeat -e -strict.perms=false\n",
                            "vars.%": "1",
                            "vars.elk_priv_ip": "10.0.1.110"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.grafana_install": {
                    "type": "template_file",
                    "depends_on": [
                        "aws_instance.prometheus"
                    ],
                    "primary": {
                        "id": "2e7da88dc4c3f049c8af3c5ff53ed6692b9b88ea4611bcf1f0551865ec5990ee",
                        "attributes": {
                            "id": "2e7da88dc4c3f049c8af3c5ff53ed6692b9b88ea4611bcf1f0551865ec5990ee",
                            "rendered": "#!/bin/bash\n\n# Install Grafana\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\necho \"deb https://packages.grafana.com/oss/deb stable main\" \u003e /etc/apt/sources.list.d/grafana.list\ncurl https://packages.grafana.com/gpg.key | sudo apt-key add -\nsudo apt -qq update\nsudo apt install -y grafana\nsudo systemctl enable grafana-server.service\n\nsudo sed -i 's/;admin_user = admin/admin_user = admin/g' /etc/grafana/grafana.ini\nsudo sed -i 's/;admin_password = admin/admin_password = admin/g' /etc/grafana/grafana.ini\n\ncat \u003c\u003c EOF | sudo tee /etc/grafana/provisioning/datasources/datasource.yml\napiVersion: 1\ndatasources:\n - name: Prometheus\n   type: prometheus\n   access: proxy\n   orgId: 1\n   url: http://prometheus.service.consul:9090\n#   url: http://10.0.1.128:9090\n   isDefault: true\n   version: 1\neditable: false\nEOF\n\ncat \u003c\u003c EOF | sudo tee /etc/grafana/provisioning/dashboards/all.yml\napiVersion: 1\n\nproviders:\n- name: 'default'\n  orgId: 1\n  folder: ''\n  type: file\n  disableDeletion: false\n  updateIntervalSeconds: 10 #how often Grafana will scan for changed dashboards\n  options:\n    path: /var/lib/grafana/dashboards\nEOF\n\nsudo mkdir /var/lib/grafana/dashboards\ncat \u003c\u003c EOF | sudo tee /var/lib/grafana/dashboards/Dummy_Exporter_Dashboard.json\n{\n  \"annotations\": {\n    \"list\": [\n      {\n        \"builtIn\": 1,\n        \"datasource\": \"-- Grafana --\",\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations \u0026 Alerts\",\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"editable\": true,\n  \"gnetId\": null,\n  \"graphTooltip\": 0,\n  \"links\": [],\n  \"panels\": [\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"fill\": 1,\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 4,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"rate(DummyService_errors[2m])\",\n          \"format\": \"time_series\",\n          \"hide\": false,\n          \"intervalFactor\": 1,\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Number of errors per sec\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"fill\": 1,\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 10\n      },\n      \"id\": 2,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"rate(DummyService_requests[2m])\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Number of requests per sec\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    }\n  ],\n  \"schemaVersion\": 16,\n  \"style\": \"dark\",\n  \"tags\": [],\n  \"templating\": {\n    \"list\": []\n  },\n  \"time\": {\n    \"from\": \"now-15m\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n      \"5s\",\n      \"10s\",\n      \"30s\",\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"1d\"\n    ],\n    \"time_options\": [\n      \"5m\",\n      \"15m\",\n      \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\",\n      \"2d\",\n      \"7d\",\n      \"30d\"\n    ]\n  },\n  \"timezone\": \"\",\n  \"title\": \"Dummy Exporter Dashboard\",\n  \"uid\": \"MX74Y8Qik\",\n  \"version\": 1\n}\n\nEOF\n\nsudo systemctl restart grafana-server.service\n\n\n# Register in consul\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/grafana.json\n{\n  \"service\": {\n    \"name\": \"grafana\",\n    \"id\": \"grafana\",\n    \"port\": 3000,\n    \"check\": {\n      \"name\": \"grafana port 3000 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:3000\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n",
                            "template": "#!/bin/bash\n\n# Install Grafana\nsudo sed -i 's/us-east-1.ec2.//g' /etc/apt/sources.list\necho \"deb https://packages.grafana.com/oss/deb stable main\" \u003e /etc/apt/sources.list.d/grafana.list\ncurl https://packages.grafana.com/gpg.key | sudo apt-key add -\nsudo apt -qq update\nsudo apt install -y grafana\nsudo systemctl enable grafana-server.service\n\nsudo sed -i 's/;admin_user = admin/admin_user = admin/g' /etc/grafana/grafana.ini\nsudo sed -i 's/;admin_password = admin/admin_password = admin/g' /etc/grafana/grafana.ini\n\ncat \u003c\u003c EOF | sudo tee /etc/grafana/provisioning/datasources/datasource.yml\napiVersion: 1\ndatasources:\n - name: Prometheus\n   type: prometheus\n   access: proxy\n   orgId: 1\n   url: http://prometheus.service.consul:9090\n#   url: http://${prom_priv_ip}:9090\n   isDefault: true\n   version: 1\neditable: false\nEOF\n\ncat \u003c\u003c EOF | sudo tee /etc/grafana/provisioning/dashboards/all.yml\napiVersion: 1\n\nproviders:\n- name: 'default'\n  orgId: 1\n  folder: ''\n  type: file\n  disableDeletion: false\n  updateIntervalSeconds: 10 #how often Grafana will scan for changed dashboards\n  options:\n    path: /var/lib/grafana/dashboards\nEOF\n\nsudo mkdir /var/lib/grafana/dashboards\ncat \u003c\u003c EOF | sudo tee /var/lib/grafana/dashboards/Dummy_Exporter_Dashboard.json\n{\n  \"annotations\": {\n    \"list\": [\n      {\n        \"builtIn\": 1,\n        \"datasource\": \"-- Grafana --\",\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations \u0026 Alerts\",\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"editable\": true,\n  \"gnetId\": null,\n  \"graphTooltip\": 0,\n  \"links\": [],\n  \"panels\": [\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"fill\": 1,\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 4,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"rate(DummyService_errors[2m])\",\n          \"format\": \"time_series\",\n          \"hide\": false,\n          \"intervalFactor\": 1,\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Number of errors per sec\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"fill\": 1,\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 10\n      },\n      \"id\": 2,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"rate(DummyService_requests[2m])\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Number of requests per sec\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    }\n  ],\n  \"schemaVersion\": 16,\n  \"style\": \"dark\",\n  \"tags\": [],\n  \"templating\": {\n    \"list\": []\n  },\n  \"time\": {\n    \"from\": \"now-15m\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n      \"5s\",\n      \"10s\",\n      \"30s\",\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"1d\"\n    ],\n    \"time_options\": [\n      \"5m\",\n      \"15m\",\n      \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\",\n      \"2d\",\n      \"7d\",\n      \"30d\"\n    ]\n  },\n  \"timezone\": \"\",\n  \"title\": \"Dummy Exporter Dashboard\",\n  \"uid\": \"MX74Y8Qik\",\n  \"version\": 1\n}\n\nEOF\n\nsudo systemctl restart grafana-server.service\n\n\n# Register in consul\ncat \u003c\u003c EOF | sudo tee /etc/consul.d/grafana.json\n{\n  \"service\": {\n    \"name\": \"grafana\",\n    \"id\": \"grafana\",\n    \"port\": 3000,\n    \"check\": {\n      \"name\": \"grafana port 3000 http check\",\n      \"interval\": \"5s\",\n      \"http\": \"http://localhost:3000\"\n    }\n  }\n}\n\nEOF\n\nsudo systemctl reload consul\n",
                            "vars.%": "1",
                            "vars.prom_priv_ip": "10.0.1.128"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                }
            },
            "depends_on": []
        }
    ]
}
